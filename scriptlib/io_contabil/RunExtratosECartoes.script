

/** TIPO01 kk
 PARAMETROS:	MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger
 RETORNO:	boolean

 Extrato_Bradesco2_PDF -> readExtratBradesco2PDF
 Extrato_BB_Excel -> readExtratoBancoBrasilExcel
 Extrato_BB_TXT -> readExtratoBancoDoBrasilDoc;readExtratoBancoDoBrasilDoc2
 Extrato_BB_PDF -> readExtratoBancoDoBrasilPDF
 Extrato_Banpara_Excel -> readExtratoBanpara
 Extrato_Banrisul_TXT -> readExtratoBANRISULDefault
 Extrato_Bradesco_Excel -> readExtratoBRADESCODefault;readExtratoBradescoDefault
 Extrato_Bradesco_TXT -> readExtratoBradescoTxt
 Extrato_CEF_TXT -> readExtratoCEFDefaultNovo
 Extrato_Cef_Excel -> readExtratoCEFExcel
 Extrato_ITAU_PDF -> readExtratoItauPdfInterno
 Extrato_Itau_Txt -> readExtratoItauTXT
 Extrato_Safra_Excel -> readExtratoSafraExcel
 Extrato_Santander_Excel -> readExtratoSantanderDefault
 Extrato_Sicoob -> readExtratoSicoobDefaultNovo
 Extrato_Sicoob_Txt -> readExtratoSicoobTxt
 Extrato_Sicredi_Excel -> readExtratoSicrediDefault
 Extrato_Sicredi_TXT -> readExtratoSicrediTxt
 Extrato_Topazio_Excel -> readExtratoTopazioExcel
 Extrato_Tribanco_Excel -> readExtratoTribancoExcel
 Extrato_Uniprime_Excel -> readExtratoUniprime
 Extrato_Santander_PDF -> readExtratSantanderPDF
 Extrato_Sicoob_PDF -> readExtratSicoobPDF

 */
public boolean readExtratoECartao(String tipoARodar, MemoryFile memFile, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) {

	boolean response = false;

	try {
		// Classe Principal SC
		Class<?> sc = this.getClass();

		// Instancia da Classe Principal
		Object scInstance = sc.newInstance();

		// Get all Methods from superclass 'SC'.
		java.lang.reflect.Method[] methods = sc.getDeclaredMethods();

		// ForEach Method from superclass.
		for (java.lang.reflect.Method method : methods) {
			String methodName = method.getName();

			if (methodName.contains(tipoARodar)) {
				logger.logDebug(String.format("Invoking method %s...", methodName));
				logger.logInfo(String.format("Invoking method %s...", methodName));

				response = (Boolean) method.invoke(scInstance, memFile, nomePortador, jDados, dbIOCont, logger);
				logger.logDebug("RESPONSE -> " + response);

				break;
			}
		}
	} catch (Exception e2) {
		logger.logError("Error trying to invoke method 'Extrato/Cartao Tipo01 boolean'.", e2);
	}
	return response;
}

/** TIPO02
 PARAMETROS:	MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger
 RETORNO:	boolean

 Extrato_Banestes_Excel -> readExtratoBanesteDefault
 Extrato_Daycoval_Excel -> readExtratoDaycoval
 Extrato_Unicred_Excel -> readExtratoUnicredDefault
 Extrato_Unicred_TXT -> readExtratoUNICREDTxt
 Extrato_Uniprime_Txt -> readExtratoUniprimeTxt

 */
public boolean readExtratoECartao(String tipoARodar, MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) {

	boolean response = false;

	try {
		// Classe Principal SC
		Class<?> sc = this.getClass();

		// Instancia da Classe Principal
		Object scInstance = sc.newInstance();

		// Get all Methods from superclass 'SC'.
		java.lang.reflect.Method[] methods = sc.getDeclaredMethods();

		// ForEach Method from superclass.
		for (java.lang.reflect.Method method : methods) {
			String methodName = method.getName();

			if (methodName.contains(tipoARodar)) {
				logger.logInfo(String.format("Invoking method %s...", methodName));

				response = (Boolean) method.invoke(scInstance, memFile, jDados, dbIOCont, logger);

				break;
			}
		}
	} catch (Exception e2) {
		logger.logError("Error trying to invoke method 'Extrato/Cartao Tipo02 boolean'.", e2);
	}
	return response;
}

/** TIPO03
 PARAMETROS:	MemoryFile memFile, String anoData, String tipoExtrato, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger
 RETORNO:	boolean

 Extrato_Itau_Excel -> readExtratoItauDefault

 */
public boolean readExtratoECartao(String tipoARodar, MemoryFile memFile, String anoData, String tipoExtrato, String nomePortador, JSONObject jDados, DataBase dbIOCont, InoutLogger logger) {

	boolean response = false;

	try {
		// Classe Principal SC
		Class<?> sc = this.getClass();

		// Instancia da Classe Principal
		Object scInstance = sc.newInstance();

		// Get all Methods from superclass 'SC'.
		java.lang.reflect.Method[] methods = sc.getDeclaredMethods();

		// ForEach Method from superclass.
		for (java.lang.reflect.Method method : methods) {
			String methodName = method.getName();

			if (methodName.contains(tipoARodar)) {
				logger.logInfo(String.format("Invoking method %s...", methodName));

				response = (Boolean) method.invoke(scInstance, memFile, anoData, tipoExtrato, nomePortador, jDados, dbIOCont, logger);

				break;
			}
		}
	} catch (Exception e2) {
		logger.logError("Error trying to invoke method 'Extrato/Cartao Tipo03 boolean'.", e2);
	}
	return response;
}

/** TIPO04
 PARAMETROS:	MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger
 RETORNO:	HashMap

 Boticario_Excel -> readBoticario
 BySoft_i-Broker -> readBysoftIBroker
 Cartao_Cielo_Simples_Sem_Bandeira -> readCartao_Cielo_Simples_Sem_Bandeira
 Cartao_Abrapetite_Excel -> readCartaoAbrapetite
 Cartao_American_Express_Excel -> readCartaoAmericanExpressDefault
 Cartao_American_Express_Extrato_Excel -> readCartaoAmericanExtratoDefault
 Cartao_BenVisa_Excel -> readCartaoBenVisaExcel
 Cartao_Bin_Excel -> readCartaoBinExcel
 Cartao_Cabal_Excel -> readCartaoCabal
 Cartao_Calcard_Excel -> readCartaoCalcard
 Cartao_Cielo -> readCartaoCielo;readCartaoCieloRefatorado
 Cartao_Coopercard_Excel -> readCartaoCooper
 Cartao_Safra_CSV -> readCartaocSafraCsv
 Cartao_GreenCard_Excel -> readCartaoGreenCard
 Cartao_Liv_PDF -> readCartaoLivPdf
 Cartao_Masterfarma_Excel -> readCartaoMasterFarma
 Cartao_Mooz_CSV -> readCartaoMoozCsv
 Cartao_Paypal_Excel -> readCartaoPayPal;readCartaoPayPal2
 Cartao_PoliCard_Excel -> readCartaoPoliCard
 Cartao_Redecard_Excel -> readCartaoRedecard;readCartaoRedecardCred;readCartaoRedecardDeb
 Cartao_Redecard_TXT -> readCartaoRedecardDefault
 Cartao_Redecard_Excel -> readCartaoRedecardNovoPadrao
 Cartao_Stelo_Excel -> readCartaoSteloCsv
 Cartao_Sumup_Excel -> readCartaoSumup
 Cartao_TrioCard_Excel -> readCartaoTrioCard
 Cartao_Aiquefome_Excel -> readExtratoAiquefome
 Cartao_Bonus_Excel -> readExtratoBonus
 Cartao_Elavon_Excel -> readExtratoElavon
 Cartao_GetNet_Excel -> readExtratoGetNetRefatorado
 Cartao_Goodcard_Excel -> readExtratoGoodcard
 Cartao_IFood_Excel -> readExtratoIFood
 Cartao_MagaLU_Excel -> readExtratoMagaLU
 Cartao_Moip_Excel -> readExtratoMoip;readExtratoMoip2
 Cartao_Netshoes_Excel -> readExtratoNetshoes
 Cartao_Nutricard_Excel -> readExtratoNutricard
 Cartao_PagarME_Excel -> readExtratoPagarME
 Cartao_PagSeguro_Excel -> readExtratoPagSeguro
 Cartao_Sem_Parar_Csv -> readExtratoSemParar;readExtratoSemParar2
 Cartao_Senff_Excel -> readExtratoSenff;readExtratoSenffLayout2
 Cartao_Sipag_Excel -> readExtratoSipagRefatorado
 Cartao_Sodexo_Excel -> readExtratoSodexo
 Cartao_Stone_Excel -> readExtratoStone
 Cartao_Ticket_Excel -> readExtratoTicket;readExtratoTicketNovo
 Cartao_Ubereats_Excel -> readExtratoUbereats
 Cartao_ValeCard_PDF -> readExtratoValeCardPdf
 Interfoc_Genesys_mcp002 -> readInterfocGenesysMCP002
 Linx_AutoSystem -> readLinx_AutoSystem_ContasPagas;readLinx_AutoSystem_ExtratoBancario;readLinx_AutoSystem_MovimentacaoContas;readLinx_AutoSystem_Recebimentos
 Linx_Softpharma_fcpa200 -> readLinxSoftpharmaFCPA200
 Cartao_Paguecom_CSV -> readPaguecomCSV
 Prosyst -> readProsystPR00428;readProsystPRX004815
 SISJURI_BCS_FINANCEIRO -> readSisjuriBCSFinanceiro
 Systextil -> readSystextil

 */
public HashMap readExtratoECartao(String tipoARodar, MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) {

	try {
		// Classe Principal SC
		Class<?> sc = this.getClass();

		// Instancia da Classe Principal
		Object scInstance = sc.newInstance();

		// Get all Methods from superclass 'SC'.
		java.lang.reflect.Method[] methods = sc.getDeclaredMethods();

		// ForEach Method from superclass.
		for (java.lang.reflect.Method method : methods) {
			String methodName = method.getName();

			if (methodName.contains(tipoARodar)) {
				logger.logInfo(String.format("Invoking method %s...", methodName));

				mapaVariavel = ((HashMap) method.invoke(scInstance, memFile, jDados, mapaVariavel, logger));

				break;
			}
		}
	} catch (Exception e2) {
		logger.logError("Error trying to invoke method 'Extrato/Cartao Tipo04 HashMap'.", e2);
	}
	return mapaVariavel;
}

/** TIPO05
 PARAMETROS:	String lineParam, MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger juno
 RETORNO:	HashMap

 Cartao_VRAlimentacao_TXT -> readExtratoVRAlimentacao

 */
public HashMap readExtratoECartao(String tipoARodar, String lineParam, MemoryFile memFile, JSONObject jDados, HashMap mapaVariavel, InoutLogger logger) {

	try {
		// Classe Principal SC
		Class<?> sc = this.getClass();

		// Instancia da Classe Principal
		Object scInstance = sc.newInstance();

		// Get all Methods from superclass 'SC'.
		java.lang.reflect.Method[] methods = sc.getDeclaredMethods();

		// ForEach Method from superclass.
		for (java.lang.reflect.Method method : methods) {
			String methodName = method.getName();

			if (methodName.contains(tipoARodar)) {
				logger.logInfo(String.format("Invoking method %s...", methodName));

				mapaVariavel = ((HashMap) method.invoke(scInstance, lineParam, memFile, jDados, mapaVariavel, logger));

				break;
			}
		}
	} catch (Exception e2) {
		logger.logError("Error trying to invoke method 'Extrato/Cartao Tipo05 HashMap'.", e2);
	}
	return mapaVariavel;
}


public String verificaExtratos(JSONObject variaveis, HashMap mapaVariavel, MemoryFile memFile, JSONObject roteiroCRM, DataBase dbIOCont, InoutLogger logger) throws Exception {

	String line           = "";
	String anoData        = "";
	String dirName        = "";
	String jStatus        = "";
	String extensao       = "";
	String codEmpresa     = "";
	String nomeArquivo    = "";
	String nomeEmpresa    = "";
	String nomePortador   = "";
	String tipoPlanilha   = "";
	String complemento01  = "";
	String complemento02  = "";
	String nomePortador2  = "";
	String tipoLancamento = "";
	String arquivoCompleto   = "";
	String cabecalhoPlanilha = "";


	if (variaveis.has("line"))           line           = variaveis.optString("line");
	if (variaveis.has("anoData"))        anoData        = variaveis.optString("anoData");
	if (variaveis.has("dirName"))        dirName        = variaveis.optString("dirName");
	if (variaveis.has("jStatus"))        jStatus        = variaveis.optString("jStatus");
	if (variaveis.has("extensao"))       extensao       = variaveis.optString("extensao");
	if (variaveis.has("codEmpresa"))     codEmpresa     = variaveis.optString("codEmpresa");
	if (variaveis.has("nomeArquivo"))    nomeArquivo    = variaveis.optString("nomeArquivo");
	if (variaveis.has("nomeEmpresa"))    nomeEmpresa    = variaveis.optString("nomeEmpresa");
	if (variaveis.has("nomePortador"))   nomePortador   = variaveis.optString("nomePortador");
	if (variaveis.has("tipoPlanilha"))   tipoPlanilha   = variaveis.optString("tipoPlanilha");
	if (variaveis.has("complemento01"))  complemento01  = variaveis.optString("complemento01");
	if (variaveis.has("complemento02"))  complemento02  = variaveis.optString("complemento02");
	if (variaveis.has("nomePortador2"))  nomePortador2  = variaveis.optString("nomePortador2");
	nomePortador2 = nomePortador2.trim();
	if (variaveis.has("tipoLancamento")) tipoLancamento = variaveis.optString("tipoLancamento");

	// somente arquivos PDf devem enviar arquivo completo como parametro para valiar cartoes e extratos.
	if (extensao.contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")){
		try{
			arquivoCompleto = memFile.getLines().toString();
			arquivoCompleto = StringUtil.removeSpecialCharsToUC(arquivoCompleto);
		}catch(Exception ex){
			logger.logInfo("Erro ao criar arquivo completo -> " + ex.getMessage());
		}
	}

	if (variaveis.has("cabecalhoPlanilha")) cabecalhoPlanilha = variaveis.optString("cabecalhoPlanilha");

	//2303-000564 JWR cria nomeArquivoAuxiliar para retirar o _id para n sujar o portador
	String nomeArquivoAuxiliar = nomeArquivo;

	if (nomeArquivoAuxiliar.toUpperCase().contains("_ID")) {
		nomeArquivoAuxiliar = cutString(nomeArquivoAuxiliar.toUpperCase(), "_ID");
		nomeArquivoAuxiliar = cutString(nomeArquivoAuxiliar.toUpperCase(), "_");
	}

	// logger.logDebug("CP -> "+cabecalhoPlanilha + " | " + tipoPlanilha + " | " + extensao);
	if(nomeArquivo.toUpperCase().contains("ANCORA") || nomeArquivo.toUpperCase().contains(".PDF")){

		////// EXTRATO - BB FRANCESINHA 2 PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Francesinha_BB2_PDF")) {
			if (cabecalhoPlanilha.contains("NR") && cabecalhoPlanilha.contains("NOME PAGADOR") && cabecalhoPlanilha.contains("EMISSAO")) {

				// logger.logInfo ("caiu aqui na validacao");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "BANCODOBRASIL-FRANCESINHA2");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFrancesinha_BB2PDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		// EXTRATO - PDF - HSBC
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_HSBC_PDF")) {
			if (arquivoCompleto.contains("TIPO DE TRN") &&
					arquivoCompleto.contains("BALANCO DA RAZAO ATUAL") &&
					arquivoCompleto.contains("SALDO ANTECIPADO DO FECHAMENTO DO RAZAO") &&
					arquivoCompleto.contains("SALDO ANTECIPADO DO FECHAMENTO DISPONIVEL") &&
					arquivoCompleto.contains("BALANCO DA RAZAO ATUAL")){

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-HSBC");
				readExtratoECartao("readExtratoHSBCPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BANESE PDF//////////////////////////////////////////////////////////////////
		// logger.logDebug("EXTEN == "+extensao+" | CABECALHOPLANILHA == "+cabecalhoPlanilha+" | NOME ARQ == "+nomeArquivo);
		logger.logInfo("LIN - "+line);
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Banese_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))){
			String anoAux = "";
			if (cabecalhoPlanilha.contains("BANESE") && cabecalhoPlanilha.contains("AUTOMACAO") && cabecalhoPlanilha.contains("MESES ANTERIORES") && cabecalhoPlanilha.contains("DATA")
					&& cabecalhoPlanilha.contains("HORA") && cabecalhoPlanilha.contains("LOCAL") && cabecalhoPlanilha.contains("AG") && cabecalhoPlanilha.contains("CONTA")) {

				tipoPlanilha = "EXTRATO-BANESE";
				JSONObject jDados = new JSONObject();

				if(cabecalhoPlanilha.contains("DATA:") && cabecalhoPlanilha.contains("HORA") && cabecalhoPlanilha.contains("LOCAL")){
					anoAux = cutString(cabecalhoPlanilha,cabecalhoPlanilha.indexOf("DATA:"),cabecalhoPlanilha.indexOf("HORA:"));
					anoAux = cutString(anoAux, anoAux.lastIndexOf("/"), anoAux.length());
					// logger.logDebug("ANOAUX -> " + anoAux);
				}
				// logger.logDebug("CP -> " + cabecalhoPlanilha);
				if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("AG")){
					nomePortador = cutString(cabecalhoPlanilha,"CONTA:" ,cabecalhoPlanilha.length());
					// logger.logDebug("PORT -> " + nomePortador);
				}

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);
				jDados.put("ANOAUX",   		 anoAux);

				readExtratoECartao("readExtratoBanesePDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		//#2305-005427
		//if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Stone_PDF")){
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Stone_PDF") && (/*nomeArquivo.toUpperCase().contains("PDF") || */nomeArquivo.toUpperCase().contains("ANCORA"))){
			logger.logDebug("AQQRUN " + line);
			if (line.contains("DOCUMENTO") && line.contains("AGENCIA")) {
				JSONObject jDados = new JSONObject();

				nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(3).trim();

				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			if (line.contains("PERIODO") && line.contains("CONTA")) {
				JSONObject jDados = new JSONObject();

				nomePortador2 += " " + memFile.getStringFieldRemoveEspCharsUpper(3).trim();

				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}

			if (line.contains("DATA") && line.contains("TIPO") && line.contains("LANCAMENTO") && line.contains("VALOR") && line.contains("SALDO")
					&& line.contains("CONTRAPARTE")) {
				JSONObject jDados = new JSONObject();

				tipoPlanilha = "EXTRATO-STONE";

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);

				readExtratoECartao("readExtratoStonePDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		//////////////////////////////////////////////////////////////////////
		/////NORDESTE///////////////////////////////////////////////////////////
		// && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) add caso necessario
		/*if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Nordeste_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))){
			// logger.logInfo("LINE RUN -> " + line);
			String tipoExtrato = "";
			if (cabecalhoPlanilha.contains("EXTRATO") && cabecalhoPlanilha.contains("PERIODO") && cabecalhoPlanilha.contains("TITULAR") && cabecalhoPlanilha.contains("AGENCIA")
				&& cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("CORRENTE") && cabecalhoPlanilha.contains("SALDO ANTERIOR") && cabecalhoPlanilha.contains("DETALHAMENTO DO EXTRATO")
				&& line.contains("DATA;HISTORICO;DOCUMENTO;VALOR R$;SALDO R$")) {

				tipoExtrato = "001";
				tipoPlanilha = "EXTRATO-NORDESTE";

				// logger.logDebug("CP -> " + cabecalhoPlanilha);
				if (cabecalhoPlanilha.contains("CONTA CORRENTE:") && cabecalhoPlanilha.contains("AGENCIA")){
					nomePortador = cutString(cabecalhoPlanilha,cabecalhoPlanilha.indexOf("CORRENTE:")+8, cabecalhoPlanilha.indexOf("SALDO ANTERIOR:"));
					// logger.logDebug("PORT -> " + nomePortador);
				}

			}

			if (cabecalhoPlanilha.contains("EXTRATO") && cabecalhoPlanilha.contains("PERIODO") && cabecalhoPlanilha.contains("TITULAR") && cabecalhoPlanilha.contains("AGENCIA")
				&& cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("SALDO ANTERIOR") && !cabecalhoPlanilha.contains("DETALHAMENTO DO EXTRATO") && arquivoCompleto.contains("EXTRATO GERADO EM")
				&& line.contains("DATA;HISTORICO;DOCUMENTO;VALOR R$")) {

				tipoExtrato = "002";
				tipoPlanilha = "EXTRATO-NORDESTE";

				// logger.logDebug("CP -> " + cabecalhoPlanilha);
				if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("AGENCIA")){
					nomePortador = cutString(cabecalhoPlanilha,cabecalhoPlanilha.indexOf("CONTA:")+5, cabecalhoPlanilha.indexOf("PERIODO:"));
					// logger.logDebug("PORT -> " + nomePortador);
				}

			}

			// logger.logInfo("NP -> " + nomePortador + " TE -> " + tipoExtrato);
			if(!tipoExtrato.equals("")){
				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOEXTRATO",    tipoExtrato);
				// jDados.put("LINE",   		 line);

				readExtratoECartao("readExtratoNordestePDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}*/
		////// Extrato - NORDESTE PDF/////////////////////////////////////////////////////////// REFATORADO
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Nordeste_PDF") &&
				cabecalhoPlanilha.contains("PERIODO") && cabecalhoPlanilha.contains("TITULAR") 	&&
				//cabecalhoPlanilha.contains("SALDO ANTERIOR") && (cabecalhoPlanilha.contains("DETALHAMENTO DO EXTRATO") ||
				(cabecalhoPlanilha.contains("SALDO ANTERIOR") || (cabecalhoPlanilha.contains("CONTA CORRENTE:") && cabecalhoPlanilha.contains("PERIODO:"))) && (cabecalhoPlanilha.contains("DETALHAMENTO DO EXTRATO") ||
				!cabecalhoPlanilha.contains("DETALHAMENTO DO EXTRATO"))) {

			// logger.logInfo("Cabe: "+cabecalhoPlanilha);

			String tipoExtrato = "";

			tipoPlanilha = "EXTRATO-NORDESTE";
			if(!cabecalhoPlanilha.contains("CONTA CORRENTE:")) {
				nomePortador = cutString(cabecalhoPlanilha, "CONTA:", "PERIODO:");
				tipoExtrato = "002";
				// logger.logInfo("Tipo: 002");
			}
			else if(cabecalhoPlanilha.contains("CONTA CORRENTE:")){
				nomePortador = cutString(cabecalhoPlanilha, "CORRENTE:", "PERIODO:").replaceAll("\\;", ""); //
				if(nomePortador.contains("SALDO ANTERIOR")) nomePortador = cutString(nomePortador, 0, "SALDO ANTERIOR");
				tipoExtrato = "001";
				// logger.logInfo("Tipo: 001");
			}

			JSONObject jDados = new JSONObject();
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);
			jDados.put("TIPOEXTRATO",	 tipoExtrato);
			jDados.put("LINE",   		 line);

			// logger.logInfo("NOME PORTADOR NORDESTE -> " + nomePortador);

			readExtratoECartao("readExtratoNordestePDF", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		////// Extrato - GRAFENO PDF///////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Grafeno_PDF") &&
				arquivoCompleto.contains("SALDO INICIAL") && cabecalhoPlanilha.contains("EXTRATO DETALHADO") &&
				cabecalhoPlanilha.contains("GERADO EM") && cabecalhoPlanilha.contains("AGENCIA") &&
				arquivoCompleto.contains("SALDO FINAL") && arquivoCompleto.contains("CPF/CNPJ")) {

			if(nomeArquivo.contains(".csv") && line.contains(";") && !line.contains("\\|")) memFile.setFieldSeparator(";");

			if(!line.contains("CONTA")){
				nomePortador = memFile.getStringFieldRemoveEspCharsUpper(2);

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("LINE",   		 line);

				readExtratoECartao("readExtratoGrafenoPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BS2 PDF //////////////////////////////////////////////////////////////////
		// logger.logDebug("cabecalhoPlanilha -> " + cabecalhoPlanilha);
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BS2_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))){

			// logger.logInfo("Line -> " + line);
			// logger.logInfo("Entrou BS2 - 1");

			if (cabecalhoPlanilha.contains("EXTRATO BANCARIO") && cabecalhoPlanilha.contains("EXTRAIDO EM") && cabecalhoPlanilha.contains("AG:") && cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("PERIODO")) {
				tipoPlanilha = "EXTRATO-BS2";

				// logger.logInfo("Entrou BS2 - 2");

				JSONObject jDados = new JSONObject();

				// logger.logDebug("TP -> " + tipoPlanilha);

				if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("AG:")){
					//2308-013107
					nomePortador = cutString(cabecalhoPlanilha, "AG:", "CONTA:");
					nomePortador += cutString(cabecalhoPlanilha, "CONTA", "PERIODO");

					//comentado pois estava capturando o cabecalho todo como o nomePortador
					// nomePortador = cutString(cabecalhoPlanilha,cabecalhoPlanilha.indexOf("AG:")+3,cabecalhoPlanilha.indexOf("CONTA:"));
					// nomePortador = nomePortador+cutString(cabecalhoPlanilha,cabecalhoPlanilha.indexOf("CONTA:")+6,cabecalhoPlanilha.indexOf("PERIODO"));
					// logger.logInfo("Entrou BS2 - 3");
				}

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);

				// logger.logDebug("EXTRATO-INTER");

				readExtratoECartao("readExtratoBS2PDF", memFile, nomePortador, jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - AMAZONIA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Amazonia_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			// logger.logDebug("AMAZONIA PDF 1");
			if (cabecalhoPlanilha.contains("DATA DA EMISSAO") && cabecalhoPlanilha.contains("HORA DA EMISSAO") && line.contains("AGENCIA") && line.contains("CONTA")){
				logger.logDebug("LIN -> " + line);
				nomePortador2 = "AMAZONIA PDF";
				// nomePortador  = cutString(line, line.lastIndexOf(":"));
				nomePortador  = cutString(line, "CONTA :", line.length());
				nomePortador  = nomePortador.trim();
				nomePortador2+= " " + nomePortador;
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("nomePortador", nomePortador);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}

			if (nomePortador2.contains("AMAZONIA PDF") && line.contains("D/C") && line.contains("LANCTO")){
				tipoPlanilha = "EXTRATO-AMAZONIA-PDF";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				logger.logDebug("AMAZONIA PDF2");
				readExtratoECartao("readExtratoAmazoniaPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		///// EXTRATO - BRADESCO PDF //////////////////////////////////////////////////////////////////
		// if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Bradesco2_PDF") && nomeArquivo.toUpperCase().endsWith(".PDF")) {
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Bradesco2_PDF") && nomePortador2.equals("")) {
			JSONObject jDados = new JSONObject();
			//2309-014971 retirado pois foi alterado para cabecalhoPlanilha e movido mais para baixo no codigo
			/*if(line.contains("BRADESCO CELULAR")){
				jDados.put("TIPOEXTRATO", "002");
			}*/
			//logger.logInfo("LOG CABECALHO PLANILHA --- " + cabecalhoPlanilha);
			logger.logInfo("NP2 == "+nomePortador2+" | LINE BRADESCO 2 = "+line);
			// nomePortador = "";
			// Nome Portador  ->  "BRADESCO {AGENCIA} {CONTA}"
			if (cabecalhoPlanilha.contains("EXTRATO DE: AGENCIA:")) {
				//Quando contêm ancora no nome do arquivo é do novo conversor
				if(nomeArquivo.toUpperCase().contains("ANCORA")) nomePortador2 = cutString(memFile.getStringFieldRemoveEspCharsUpper(1), "AGENCIA:", "|");
				if(!nomeArquivo.toUpperCase().contains("ANCORA")) nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(1);
			}

			if (arquivoCompleto.contains("EXTRATO DE: AG:")){
				// logger.logInfo("ENTROU EXTRATO DE AG");
				if(arquivoCompleto.contains("CC:") && arquivoCompleto.contains("ENTRE")) nomePortador2 = cutString(arquivoCompleto, "CC:", "ENTRE").replace("|", "");
				if(!arquivoCompleto.contains("CC:") && arquivoCompleto.contains("CONTA:") && arquivoCompleto.contains("ENTRE")) nomePortador2 = cutString(arquivoCompleto, "CONTA:", "ENTRE").replaceAll("\\|", "");
				if(nomePortador2.equals("") && line.contains("CC:")) nomePortador2 = cutString(line, "CC:").replaceAll(";", "");
				if(cabecalhoPlanilha.contains("EXTRATO MENSAL / POR PERIODO") && cabecalhoPlanilha.contains("CP: ") && cabecalhoPlanilha.contains("FOLHA")){
					nomePortador2 = cutString(cabecalhoPlanilha, "CP: ", "ENTRE");
				}
				if(!arquivoCompleto.contains("EXTRATO MENSAL / POR PERIODO") && cabecalhoPlanilha.contains("CP: ") && nomePortador2.equals("")){
					nomePortador2 = cutString(cabecalhoPlanilha, "CP: ", "ENTRE").replaceAll("\\|", "");//#2402-029881
				}
			}

			if (arquivoCompleto.contains("EXTRATO DE: AG:") && arquivoCompleto.contains("DEMONSTRATIVO")){
				// logger.logInfo("ENTROU EXTRATO DE AG");
				if(arquivoCompleto.contains("CC:") && arquivoCompleto.contains("ENTRE")) nomePortador2 = cutString(arquivoCompleto, "CC:", "ENTRE").replace("|", "");
				if(!arquivoCompleto.contains("CC:") && arquivoCompleto.contains("CONTA:") && arquivoCompleto.contains("ENTRE")) nomePortador2 = cutString(arquivoCompleto, "CONTA:", "ENTRE").replaceAll("\\|", "");
			}


			if (!nomePortador2.equals("")){
				// logger.logInfo("ENTROU READ");
				tipoPlanilha = "EXTRATO-BRADESCO-PDF";
				// logger.logInfo("BRADESCO 2 RUNEXTRATOS");

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				//#2312-024394 - Envio de nome da contabilidade e empresa para validacao do envio do campo DOCUMENTO
				jDados.put("NOMECONTABILIDADE", roteiroCRM.optString("contabilidade").toUpperCase());
				jDados.put("NOMEEMPRESA", nomeEmpresa.toUpperCase());

				//Comentado parte da validação abaixo por conta de instabilidades no chamado #2401-026567
				if((arquivoCompleto.contains("BRADESCO INTERNET BANKING") /*|| (cabecalhoPlanilha.contains("EXTRATO MENSAL / POR PERIODO") */&& !arquivoCompleto.contains("BRADESCO CELULAR")) || arquivoCompleto.contains("DEMONSTRATIVO DE INVESTIMENTOS")){
					jDados.put("TIPOEXTRATO", "003");
				}
				//2309-014971
				if(arquivoCompleto.contains("BRADESCO CELULAR")){
					jDados.put("TIPOEXTRATO", "002");
				}

				readExtratoECartao("readExtratBradesco2PDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		// 2307-010554
		////// INVESTIMENTO BRADESCO PDF ///////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("INVESTIMENTO_BRADESCO") &&
				cabecalhoPlanilha.contains("INVESTIMENTOS BRADESCO") && cabecalhoPlanilha.contains("CERTIFICADO")) {
			if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("PERIODO DE:"))
				nomePortador = cutString(cabecalhoPlanilha, cabecalhoPlanilha.indexOf("CONTA:")+11, "PERIODO DE:");

			tipoPlanilha = "EXTRATO-INVESTIMENTO-BRADESCO-PDF";
			JSONObject jDados = new JSONObject();
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);
			jDados.put("LINHA",   line);
			readExtratoECartao("readInvestimentoBradescoPDF", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			// logger.logInfo("CODAQ");
			return variaveis.toString();
		}
		//2307-009209 comentado
		////// EXTRATO - ITAUCONSOLIDADO PDF //////////////////////////////////////////////////////////////////
		// logger.logDebug("LIN -> " + line);
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ItauConsolidado_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ItauConsolidado_PDF")) {
		// if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ItauConsolidado_PDF")) {
			if (nomeArquivo.toUpperCase().contains("ITAU")
				&& memFile.getStringFieldRemoveEspCharsUpper(1).contains("MENSAL") && memFile.getStringFieldRemoveEspCharsUpper(2).contains("AG")) {
				logger.logDebug("Entrou pdf itauC");
				nomePortador = cutString(memFile.getStringFieldRemoveEspCharsUpper(2), "CC ");

				// logger.logDebug("ENTROU Itau Consolidado");
				tipoPlanilha = "EXTRATO-ITAUCONSOLIDADO-PDF";

				String anoDataExtrato = "";
				anoDataExtrato = cutString(memFile.getStringFieldRemoveEspCharsUpper(3), " ");

				JSONObject jDados = new JSONObject();

				jDados.put("ANO", anoDataExtrato);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readExtratoItauConsolidadoPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}*/
		//2307-009209
		////// Extrato - ITAUCONSOLIDADO PDF ///////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ItauConsolidado_PDF") &&
				/*nomeArquivo.toUpperCase().contains("ITAU") &&*/ cabecalhoPlanilha.toUpperCase().contains("MENSAL") &&
				cabecalhoPlanilha.toUpperCase().contains("AG") && cabecalhoPlanilha.toUpperCase().contains("CC") &&
				(cabecalhoPlanilha.toUpperCase().contains("MINHA CONTA") ||
						(arquivoCompleto.toUpperCase().contains("CONTA CORRENTE E APLICACOES AUTOMATICAS") && !arquivoCompleto.toUpperCase().contains("MINHA CONTA"))) ) {


			// logger.logInfo("Entra na validacao do Itau Consolidado Pdf");

			nomePortador = cutString(cabecalhoPlanilha, "CC ", cabecalhoPlanilha.indexOf("CC ")+11);
			tipoPlanilha = "EXTRATO-ITAUCONSOLIDADO-PDF";
			String anoDataExtrato = "";
			String tipo = "";
			//anoDataExtrato = cutString(memFile.getStringFieldRemoveEspCharsUpper(3), " ");
			//adicionar o if
			int indexSet = cabecalhoPlanilha.lastIndexOf("SET");
			if (indexSet != -1 && indexSet + 4 < cabecalhoPlanilha.length()) {
				anoDataExtrato = cabecalhoPlanilha.substring(indexSet + 4, indexSet + 8).trim();
				tipo = "002";
			}else{
				anoDataExtrato = cutString(cabecalhoPlanilha, cabecalhoPlanilha.lastIndexOf("202"), "MINHA CONTA");
				tipo = "001";
			}

			//2403-030950 - Estava pegando o ano errado
			if(!anoDataExtrato.contains("202") || anoDataExtrato.length() != 4){
				anoDataExtrato = cutString(cabecalhoPlanilha, 0, "MINHA CONTA");
				anoDataExtrato = cutString(anoDataExtrato, anoDataExtrato.lastIndexOf("202"), "|");
			}

			JSONObject jDados = new JSONObject();
			jDados.put("ANO", 			 anoDataExtrato);
			jDados.put("CODEMPRESA", 	 codEmpresa);
			jDados.put("NOMEARQUIVO", 	 nomeArquivo);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("TIPOEXTRATO", tipo);
			// logger.logInfo("NOME PORTADOR E ANO ITAU CONSOLIDADO -> "+ nomePortador +" | "+ anoDataExtrato);

			readExtratoECartao("readExtratoItauConsolidadoPDF", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}


		//#2308-014409
		////// EXTRATO - Extrato_BancoDaycoval_PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BancoDaycoval_PDF") &&
				!arquivoCompleto.toUpperCase().contains("LIQUIDADOBAIXADO") && // 2312-024664
				arquivoCompleto.toUpperCase().contains("SAC DAYCOVAL") && arquivoCompleto.toUpperCase().contains("DAYCONNECT") && nomePortador2.equals("")) { //2307-009209

			//logger.logInfo("Entrou Daycoval");
			JSONObject jDados = new JSONObject();

			if (arquivoCompleto.contains("LIMITE (+)") && arquivoCompleto.contains("SALDO BLOQUEADO (-)")) {
				if (arquivoCompleto.contains("DAYCONNECT - BANCO DAYCOVAL")) jDados.put("TIPO", "002");
				else if(arquivoCompleto.contains("CONTA CORRENTE (SALDO DISPONIVEL)")){
					jDados.put("TIPO", "003");
				}
			}

			if(!arquivoCompleto.contains("DOCTO") && arquivoCompleto.contains("LIMITE (+)")) jDados.put("TIPO", "003");

			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("TIPOPLANILHA", "EXTRATO-BANCODAYCOVAL-PDF");
			readExtratoECartao("readExtratoBancoDaycovalPDF", memFile, "PDF-BANCODAYCOVAL", jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}


		////// EXTRATO - Extrato_BancoPaulista_PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BancoPaulista_PDF")) {

			if (memFile.getLines().toString().toUpperCase().matches(".*EXTRATO DA CONTA.*DATA DE EMISS.O.*MOVIMENTA..ES DA CONTA.*") && (nomeArquivo.toUpperCase().contains(".PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")) {

				nomePortador2 = "PDF-BANCOPAULISTA";
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno", "continue");
				return variaveis.toString();
			}
			if (nomePortador2.equals("PDF-BANCOPAULISTA")) {

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("TIPOPLANILHA", "EXTRATO-BANCOPAULISTA-PDF");

				readExtratoECartao("readExtratoBancoPaulistaPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BANCO DO BRASIL - PDF //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BB_PDF")) {
			// logger.logDebug("BB -> PDF");

			if (nomePortador2.equals("") && (nomeArquivo.toUpperCase().contains(".PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
				if (arquivoCompleto.contains("TOTAL APLICACOES FINANCEIRAS") && arquivoCompleto.contains("SALDOS POR DIA BASE") && arquivoCompleto.contains("SUJEITOS A CONFIRMACAO NO MOMENTO DA CONTRATACAO")) {
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("TIPOLANCAMENTO", tipoLancamento);
					jDados.put("TIPOPLANILHA", "EXTRATO-BB");

					readExtratoECartao("readExtratoBancoDoBrasil2PDF", memFile, "", jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno", "break");
					return variaveis.toString();
				}
			}

			// Nome Portador  ->  "BANCO DO BRASIL {AGENCIA} {CONTA}"
			if (line.contains("CLIENTE - CONTA ATUAL") && (nomeArquivo.toUpperCase().contains(".PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")) {
			// if (line.contains("CLIENTE - CONTA ATUAL") && nomePortador2.equals("")) {

				nomePortador2 = "PDF-BANCOBRASIL";
				// logger.logDebug("CAIU EM CONTINUE6 " + line);
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno", "continue");
				return variaveis.toString();
			}
			if (nomePortador2.equals("PDF-BANCOBRASIL") && line.contains("CONTA CORRENTE")) {

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("TIPOPLANILHA", "EXTRATO-BB");

				readExtratoECartao("readExtratoBancoDoBrasilPDF", memFile, "BANCO DO BRASIL - " + memFile.getStringFieldRemoveEspCharsUpper(1).trim(), jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}*/
		//#2309-016021
		////// Extrato - BANCO DO BRASIL - PDF //////////////////////////////////////////////////// REFATORADO
		//#2309-016021
		////// Extrato - BANCO DO BRASIL - PDF //////////////////////////////////////////////////// REFATORADO
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BB_PDF")) {
			// BB MOBILE
			if (arquivoCompleto.contains("TOTAL APLICACOES FINANCEIRAS") && arquivoCompleto.contains("SALDOS POR DIA BASE") &&
					arquivoCompleto.contains("SUJEITOS A CONFIRMACAO NO MOMENTO DA CONTRATACAO")) {

				nomePortador2 = "BANCO DO BRASIL - " + cutString(cabecalhoPlanilha, "CONTA:", cabecalhoPlanilha.indexOf("LANCAMENTOS"));

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("TIPOPLANILHA", "EXTRATO-BB");
				// logger.logInfo("NOME PORTADOR BB MOBILE -> "+ nomePortador2);

				readExtratoECartao("readExtratoBancoDoBrasil2PDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

			// Nome Portador  ->  "BANCO DO BRASIL {AGENCIA} {CONTA}"
			// logger.logInfo("cabecalho == "+cabecalhoPlanilha);
			if ((cabecalhoPlanilha.contains("CLIENTE - CONTA ATUAL") || cabecalhoPlanilha.contains("CLIENTE - CONTA ANTERIOR")) &&
					(cabecalhoPlanilha.contains("DT. BALANCETE") || cabecalhoPlanilha.contains("BALANCETE MOVIMENTO") ||
							cabecalhoPlanilha.contains("BALANCETE;MOVIMENTO") || cabecalhoPlanilha.contains("BALANCETE|MOVIMENTO"))) {// 2403-030954 - Nicholas - 12/03/2024
				//logger.logInfo("CP - " + cabecalhoPlanilha);

				String cabecalhoPlanilhaAux = "";

				if(cabecalhoPlanilha.contains("CONTA ANTERIOR")){
					cabecalhoPlanilhaAux = cutString(cabecalhoPlanilha, "CONTA ANTERIOR", "EXTRATO");
				}

				if (cabecalhoPlanilha.contains("CONTA ATUAL")) {
					cabecalhoPlanilhaAux = cutString(cabecalhoPlanilha, "CONTA ATUAL", "EXTRATO");
				}

				nomePortador2 = "BANCO DO BRASIL - " + cutString(cabecalhoPlanilhaAux, "CONTA CORRENTE", "PERIODO");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("TIPOPLANILHA", "EXTRATO-BB");

				// logger.logInfo("NOME PORTADOR BB EXTRATO -> "+ nomePortador2);
				readExtratoECartao("readExtratoBancoDoBrasilPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
			//2311-022683 - Padrao 3
			if(cabecalhoPlanilha.contains("BANCO") && cabecalhoPlanilha.contains("BRASIL") && cabecalhoPlanilha.contains("SISBB") &&
					cabecalhoPlanilha.contains("DOCUMENTO") && cabecalhoPlanilha.contains("DATA")){
				nomePortador2 = "BANCO DO BRASIL - " + cutString(cabecalhoPlanilha, "AGENCIA", "CONTA").trim() +" "+ cutString(cabecalhoPlanilha, "CONTA", "CLIENTE").trim();
				nomePortador2 = nomePortador2.replaceAll(":", "");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("TIPOPLANILHA", "EXTRATO-BB");

				readExtratoECartao("readExtratoBancoDoBrasil3PDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
			//#2401-027975
			if(	arquivoCompleto.contains("SISBB") &&
					arquivoCompleto.contains("SISTEMA DE INFORMACOES BANCO DO BRASIL") &&
					arquivoCompleto.contains("AUTOATENDIMENTO BB") &&
					arquivoCompleto.contains("DATA MOVIM.") &&
					arquivoCompleto.contains("DEP. ORIGEM") &&
					arquivoCompleto.contains("HISTORICO") ) {

				// logger.logInfo("Entra na validacao do SISBB Pdf");

				tipoPlanilha = "EXTRATO-SISBB";
				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);

				readExtratoECartao("readExtratoSISBBPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		//#2403-031659
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ApliBB_PDF")){
			if(cabecalhoPlanilha.contains("BB RENDE FACIL") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("-")
					&& memFile.getStringFieldRemoveEspCharsUpper(1).contains("-")
					&& arquivoCompleto.contains("HISTORICO DE MOVIMENTACAO") && arquivoCompleto.contains("IOF")){

				nomePortador = memFile.getStringFieldRemoveEspCharsUpper(1);

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   "BB RENDE FACIL");
				jDados.put("NOMEPORTADOR", nomePortador);


				mapaVariavel = readExtratoECartao("readExtrato_ApliBB_PDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// Extrato - UNICRED PDF ///////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Unicred_PDF")){
			if ((cabecalhoPlanilha.contains("COOPERATIVA") && cabecalhoPlanilha.contains("AGENCIA") &&
					cabecalhoPlanilha.contains("COOPERADO")   && cabecalhoPlanilha.contains("USUARIO") &&
					(cabecalhoPlanilha.contains("NO DOC") || cabecalhoPlanilha.contains("N DOC")) &&
					cabecalhoPlanilha.contains("LANCAMENTOS")) ||
					((cabecalhoPlanilha.contains("UNICRED VALOR CAPITAL") || cabecalhoPlanilha.contains("UNICRED VALE") ||
							cabecalhoPlanilha.contains("UNICRED PREMIUM")) && cabecalhoPlanilha.contains("POSTO") &&
							cabecalhoPlanilha.contains("NR. DOCUM.")) || cabecalhoPlanilha.contains("SISTEMA DE AUTOMACAO UNICRED")) {
				//DENTRO IF

				if(cabecalhoPlanilha.contains("UNICRED VALOR CAPITAL") || cabecalhoPlanilha.contains("UNICRED VALE") || cabecalhoPlanilha.contains("UNICRED PREMIUM")){
					nomePortador = "UNICRED-" + cutString(cutString(cabecalhoPlanilha, "CORRENTE", "AGENCIA"),"CONTA","PERIODO");
					tipoPlanilha	= "EXTRATO-UNICRED";
				}
				else{
					nomePortador  = "UNICRED-" + cutString(cutString(cabecalhoPlanilha, "AGENCIA", "USUARIO"), "CONTA", "COOPERADO");
					tipoPlanilha	= "EXTRATO-UNICRED";
				}

				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);



				// logger.logInfo("NOME PORTADOR UNICRED -> "+ nomePortador);
				if(arquivoCompleto.contains("SISTEMA DE AUTOMACAO UNICRED") || cabecalhoPlanilha.contains("UNICRED VALE")){

					/* gui - 24/04/2024 -> DIFERENCIAÇÃO DE TIPOS PARA TRATAR DEBITO E CREDITO
					REMOVIDO POIS OS NOME ORIGENS VARIAM, NAO SENDO POSSIVEL DIFERENCIAR DEBITO E CREDITO
					if(cabecalhoPlanilha.contains("UNICRED VALE")){
						jDados.put("TIPO", "003");
					}else{
						jDados.put("TIPO", "004");
					}*/

					readExtratoECartao("readExtratoUnicred3PDF", memFile, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno",   "break");
					return variaveis.toString();
				}

				readExtratoECartao("readExtratoUnicredPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}


		////// EXTRATO - UNICRED2 PDF //////////////////////////////////////////////////////////////////
		// if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Unicred2_PDF") && nomeArquivo.toUpperCase().contains(".PDF")) {
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Unicred2_PDF")) {
			// logger.logInfo("CABECAS " + memFile.getStringFieldRemoveEspCharsUpper(0) + " | " + memFile.getStringFieldRemoveEspCharsUpper(1) + " | "
			// + memFile.getStringFieldRemoveEspCharsUpper(2) + " | " +  cabecalhoPlanilha);

			// XAVIER 003749 - Colocado negacao cabecalho planilha pois quem tem SICOOB e UNICRED2 da conflito na coluna A contendo CONTA:
			if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA:") &&
					cabecalhoPlanilha.contains("COOPERATIVA DE CREDITO") && cabecalhoPlanilha.contains("UNCIRED EVOLUCAO")) {
				// logger.logInfo("AGUI UNI");
				nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("[^0-9]", "").trim();
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}

			/*if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").contains("DATA MOV.") &&
				memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replaceAll(" ","").contains("ID.DOC") &&
				memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").contains("HISTORICO") &&
				memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("LANCAMENTOS") &&
				memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("SALDO")) {*/
			if (line.replaceAll("\"","").replace("\"","").replace("'","").contains("DATA MOV.") &&
					line.replaceAll("\"","").replaceAll(" ","").contains("ID.DOC") &&
					line.replaceAll("\"","").contains("HISTORICO") &&
					line.replaceAll("\"","").contains("LANCAMENTOS") &&
					line.replaceAll("\"","").contains("SALDO")) {
				// logger.logInfo("AGUI UNI");

				nomePortador  = "UNICRED-" + nomePortador2;
				complemento02	= nomePortador;
				tipoPlanilha	= "EXTRATO-UNICRED";

				JSONObject jDados = new JSONObject();
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINHA", line);

				readExtratoECartao("readExtratoUnicred2PDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BANCO FIBRA //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Fibra_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			// logger.logInfo("AMAZONIA PDF 1");
			if(line.contains("INTERNET BANKING") && line.contains("BANCO FIBRA") && line.contains("EMPRESA")){
				nomePortador2 = "BANCO FIBRA";
				variaveis.put("nomePortador2",   nomePortador2);

				tipoPlanilha = "EXTRATO-FIBRA-PDF";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);


				readExtratoECartao("readExtratoFibraPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BRB PDF //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BRB_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {

			if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA CORRENTE:") && arquivoCompleto.contains("BRB TELEBANCO") &&
				arquivoCompleto.contains("SAC BRB") && nomePortador2.equals("")){

				nomePortador2 = "BRB " + cutString(memFile.getStringFieldRemoveEspCharsUpper(0), "CONTA CORRENTE:");
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}

			if(memFile.getFieldsSize() == 1 && nomePortador2.contains("BRB") &&
				arquivoCompleto.contains("BRB TELEBANCO") && arquivoCompleto.contains("SAC BRB")){

				variaveis.put("anoData",   memFile.getStringFieldRemoveEspCharsUpper(0));
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}

			if (nomePortador2.contains("BRB") && arquivoCompleto.contains("BRB TELEBANCO") && arquivoCompleto.contains("SAC BRB") &&
				memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replaceAll(" ","").contains("DIA") &&
				memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replaceAll(" ","").contains("HISTORICO") &&
				memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("VALOR")) {

				tipoPlanilha	= "EXTRATO-BRB";
				JSONObject jDados = new JSONObject();

				jDados.put("LINE", line);
				jDados.put("ANODATA", anoData);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);

				// logger.logInfo("AGUI " + anoData);

				readExtratoECartao("readExtratoBRBPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}*/
		////// Extrato - BRB PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BRB_PDF")){
			if (arquivoCompleto.toUpperCase().contains("BRB TELEBANCO") && arquivoCompleto.toUpperCase().contains("SAC BRB") && nomePortador2.equals("") &&
					//!arquivoCompleto.toUpperCase().contains("NOME DO TITULAR")){
					arquivoCompleto.toUpperCase().contains("SALDO ATUAL")){ //2307-009209
				//"TE:" vem de CONTA CORREN(TE:)
				nomePortador2 = "BRB " + cutString(arquivoCompleto, "TE:", arquivoCompleto.indexOf("TE:")+18);
				anoData = cutString(arquivoCompleto, arquivoCompleto.indexOf("DIA")-14, "DIA");

				tipoPlanilha = "EXTRATO-BRB";
				// logger.logInfo("Entrou em BRB P1");

				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("ANODATA", anoData);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("TIPOEXTRATO", "001");

				// logger.logInfo("NOME PORTADOR BRB -> "+ nomePortador2);

				readExtratoECartao("readExtratoBRBPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if (cabecalhoPlanilha.contains("SALDO ANTERIOR") && cabecalhoPlanilha.contains("DADOS DA CONTA ORIGEM") &&
					cabecalhoPlanilha.contains("TIPO DE CONTA") && cabecalhoPlanilha.contains("TIPO DE EXTRATO")){

				nomePortador2 = "BRB " + cutString(cabecalhoPlanilha, "NUMERO DA CONTA", "TIPO DE CONTA");

				tipoPlanilha = "EXTRATO-BRB2";

				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("TIPOEXTRATO", "002");

				// logger.logInfo("LOG NOME PORTADOR - " + nomePortador2);

				// logger.logInfo("NOME PORTADOR BRB -> "+ nomePortador2);

				readExtratoECartao("readExtratoBRBPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - ABC //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ABC_PDF")  && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {

			if(cabecalhoPlanilha.toUpperCase().contains("CLIENTE:") && cabecalhoPlanilha.toUpperCase().contains("CNPJ:") &&
					line.contains("BANCO:") && line.contains("ABC") && nomePortador2.equals("")){

				nomePortador = "ABC " + cutString(memFile.getStringFieldRemoveEspCharsUpper(0), "BANCO:");
				variaveis.put("nomePortador2",   nomePortador2);
				// logger.logInfo("CAIU EM ABC " + line);

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ABC");

				readExtratoECartao("readExtratoABCPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			// logger.logInfo("CAB -> " + cabecalhoPlanilha.replaceAll("\\|", ""));
			if((cabecalhoPlanilha.toUpperCase().contains("EXTRATO CONSOLIDADO DE MOVIMENTACAO") && cabecalhoPlanilha.toUpperCase().contains("TOTAL DOS SALDOS") &&
					cabecalhoPlanilha.contains("DADOS CLIENTE E CONTA") && cabecalhoPlanilha.contains("NOME DO CLIENTE:"))
					||( cabecalhoPlanilha.replaceAll("\\|", "").toUpperCase().contains("EXTRATOCONSOLIDADODEMOVIMENTACAO") && cabecalhoPlanilha.replaceAll("\\|", "").toUpperCase().contains("TOTALDOSSALDOS") &&
					cabecalhoPlanilha.replaceAll("\\|", "").contains("DADOSCLIENTEECONTA") && cabecalhoPlanilha.replaceAll("\\|", "").contains("NOMEDOCLIENTE:")) && nomePortador2.equals("")){

				nomePortador = "ABC " + cutString(cabecalhoPlanilha, "CONTA:", "TOTAL");
				variaveis.put("nomePortador2",   nomePortador2);
				// logger.logInfo("CAIU EM ABC " + line);

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ABC");

				readExtratoECartao("readExtratoABCPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BBM PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BBM_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			// logger.logInfo("cabecalhoPlanilha -> " + cabecalhoPlanilha.toString());
			if(cabecalhoPlanilha.contains("BANCO") && cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("C/C") && arquivoCompleto.contains("BOCOM BBM S.A")  && nomePortador2.equals("")){

				nomePortador2 = "BBM " + cutString(arquivoCompleto.toUpperCase(), "C/C", "EXTRATO").replaceAll(";", " ");
				if(nomePortador2.contains("|")) nomePortador2 = "BBM " + cutString(nomePortador2, "|");
				variaveis.put("nomePortador2",   nomePortador2);
				// logger.logInfo("CAIU EM BM " + line);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			// logger.logInfo("VALIDA BRB " + nomePortador2 + " | " + arquivoCompleto.contains("BOCOM BBM S.A")  + " |LINHAZINHA " + line);

			if (nomePortador2.contains("BBM")) {

				tipoPlanilha	= "EXTRATO-BBM";

				JSONObject jDados = new JSONObject();

				jDados.put("LINE", line);
				jDados.put("TIPOPLANILHA", tipoPlanilha);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);

				// logger.logInfo("AGUI " + anoData);

				readExtratoECartao("readExtratoBBMPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		//2312-025015
		//////CEF FRANCESINHA PDF ///////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Francesinha_Cef_PDF")) {
			if(cabecalhoPlanilha.contains("CAIXA ECONOMICA FEDERAL") && cabecalhoPlanilha.contains("SEU NUMERO") &&
					cabecalhoPlanilha.contains("RELATORIO DE TITULOS")){

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   "CEF-FRANCESINHA");
				jDados.put("NOMEPORTADOR", "CAIXA ECONOMICA FEDERAL");

				mapaVariavel = readExtratoECartao("readFrancesinha_CefPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BIB //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BIB_PDF")  && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {

			if(line.contains("BANCO INDUSTRIAL DO BRASIL") && nomePortador2.equals("")){
				nomePortador = "BANCO INDUSTRIAL DO BRASIL S/A";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-BIB");

				readExtratoECartao("readExtratoBIBPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BANCO XPInvestimentos //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_XPInvestimentos_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {

			if(arquivoCompleto.toUpperCase().contains("XP INVESTIMENTOS") && line.contains("CONT") && line.contains("A XP")){

				nomePortador2 = "BANCO XPINVESTIMENTOS";
				variaveis.put("nomePortador2",   nomePortador2);

				tipoPlanilha = "EXTRATO-XPINVESTIMENTOS-PDF";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				nomePortador = cutString(line, line.lastIndexOf("XP")+3);
				if(nomeArquivo.toUpperCase().contains("ANCORA")) nomePortador = cutString(line, line.lastIndexOf(";")+1, " ");

				readExtratoECartao("readExtratoXPInvestimentosPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}*/

		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_XPInvestimentos_PDF")){
			//XP Padrao 1
			if(arquivoCompleto.contains("XP INVESTIMENTOS") && ( (cabecalhoPlanilha.contains("CONT") &&
					cabecalhoPlanilha.contains("A XP") && (cabecalhoPlanilha.contains("NOM") || cabecalhoPlanilha.contains("N|OM|E") || cabecalhoPlanilha.contains("N;OM;E"))) || //#2402-028713
					//2401-026595 - O arquivo convertido ficou com um cabecalho meio diferente do padrao
					(line.contains("CONT") && (line.replaceAll("  ", " ").contains("A X P") || line.contains("A| X|P"))) ) ){

				if (cabecalhoPlanilha.contains("A XP") && cabecalhoPlanilha.contains("CODI"))
					nomePortador = cutString(cabecalhoPlanilha, "A XP", "CODI");

				if(line.replaceAll("  ", " ").contains("A X P")) nomePortador = cutString(line.replaceAll("  ", " "), line.replaceAll("  ", " ").lastIndexOf("A X P")).replaceAll("A X P", "").replaceAll(";", "").replaceAll("\\|", ""); //2401-026595 - Conversor novo

				if(line.contains("A| X|P")) nomePortador = cutString(line, "A| X|P").replaceAll(";", "").replaceAll("\\|", ""); //2401-026595 - Conversor antigo

				// Para pegar o portador quando usa o Conversor Novo
				if (line.contains("SES SES"))
					nomePortador = cutString(memFile.getStringFieldRemoveEspCharsUpper(12), 0, 8);


				if (nomePortador.contains("CONTA XP") || nomePortador.equals("")) {
					nomePortador = "";
					variaveis.put("tipoRetorno", 	"continue");
					return variaveis.toString();
				}

				nomePortador2 = "BANCO XPINVESTIMENTOS";
				tipoPlanilha = "EXTRATO-XPINVESTIMENTOS-PDF";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				// logger.logInfo("NOME PORTADOR DE XP INVENTIMENTOS -> "+ nomePortador);

				readExtratoECartao("readExtratoXPInvestimentosPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno", 	"break");
				return variaveis.toString();

			}

			//XP Padrao 2
			if((cabecalhoPlanilha.contains("DATA DA CONSULTA") && cabecalhoPlanilha.contains("SALDO TOTAL PROJETADO:") &&
					cabecalhoPlanilha.contains("GARANTIAS") && cabecalhoPlanilha.contains("PROJECOES FUTURAS"))){

				nomePortador = cutString(cabecalhoPlanilha, "CONTA:", "ASSESSOR");

				nomePortador2 = "BANCO XPINVESTIMENTOS";
				tipoPlanilha = "EXTRATO-XPINVESTIMENTOS-PDF";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				// logger.logInfo("NOME PORTADOR DE XP INVENTIMENTOS -> "+ nomePortador);

				readExtratoECartao("readExtratoXPInvestimentos2PDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno", 	"break");
				return variaveis.toString();
			}

			//XP Padrao 3 - 2403-030947 - Nicholas - 12/03/2024
			if( arquivoCompleto.contains("XP INVESTIMENTOS") &&
					arquivoCompleto.contains("CORRETORA DE CAMBIO") &&
					arquivoCompleto.contains("EXTRATO DA CONTA") &&
					arquivoCompleto.contains("INFORMACOES DETALHADAS DO SALDO") &&
					arquivoCompleto.contains("SAO CONFIDENCIAS E DESTINADAS") &&
					arquivoCompleto.contains("PROJECOES FUTURAS") &&
					line.contains("CONTA:")){

				nomePortador = cutString(line, "CONTA:");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);


				readExtratoECartao("readExtratoXPInvestimentos2PDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno", 	"break");
				return variaveis.toString();

			}

		}

		////// EXTRATO - MERCADO PAGO PDF //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_MercadoPago_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			logger.logInfo("AQ " + arquivoCompleto.toUpperCase().contains("MERCADO PAGO INSTITUICAO DE PAGAMENTO LTDA") + " | " + line);
			if (arquivoCompleto.toUpperCase().contains("MERCADO PAGO INSTITUICAO DE PAGAMENTO LTDA") && line.contains("CPF/CNPJ:") &&
				line.contains("AGENCIA:") && line.contains("CONTA:")) {

				nomePortador2 = "MERCADO PAGO " + cutString(memFile.getStringFieldRemoveEspCharsUpper(2), "CONTA:");
				if(nomeArquivo.toUpperCase().contains("ANCORA")){
					nomePortador2 = "MERCADO PAGO " + memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1);
				}

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoMercadoPagoPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}*/

		//#2309-014997 - REFATORADO
		////// Extrato - MERCADO PAGO PDF //////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_MercadoPago_PDF") &&
				(arquivoCompleto.toUpperCase().contains("MERCADO PAGO INSTITUICAO DE PAGAMENTO LTDA") ||
						(cabecalhoPlanilha.contains("SALDO INICIAL:") && cabecalhoPlanilha.contains("ENTRADAS:"))) &&
				cabecalhoPlanilha.contains("DETALHE DOS MOVIMENTOS")) {

			// Verifica se o cabecalho vem com "EXTRATO DE CONTA" deslocado.
			String verificaCabecalho = "";

			if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("PERIODO:") && cabecalhoPlanilha.contains("AGENCIA:")) {
				verificaCabecalho = cutString(cabecalhoPlanilha, "AGENCIA:", "CONTA:");

				if (!verificaCabecalho.contains("EXTRATO DE CONTA"))
					nomePortador2 = "MERCADO PAGO " + cutString(cabecalhoPlanilha, "CONTA:", "PERIODO:");
				else if(!arquivoCompleto.toUpperCase().contains("ID DA OPERACAO"))
					nomePortador2 = "MERCADO PAGO " + cutString(cabecalhoPlanilha, cabecalhoPlanilha.indexOf("PERIODO:")-12, "PERIODO:");
				else
					nomePortador2 = "MERCADO PAGO " + cutString(cabecalhoPlanilha, "CONTA:", "SALDO");
			}

			if(nomePortador2.length() > 50 || !cutString(nomePortador2, "MERCADO PAGO ").matches("[0-9]*")){
				nomePortador2 = "MERCADO PAGO " + cutString(cabecalhoPlanilha, "CONTA:", "SALDO");
			}

			JSONObject jDados = new JSONObject();
			jDados.put("CODEMPRESA", 	codEmpresa);
			jDados.put("NOMEARQUIVO", 	nomeArquivo);
			jDados.put("LINE", 			line);

			//logger.logInfo("NOME PORTADOR MERCADO PAGO -> "+ nomePortador2);

			readExtratoECartao("readExtratoMercadoPagoPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		////// EXTRATO - CONTA SIMPLES PDF //////////////////////////////////////////////////////////////////
		//2312-025172
		//if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ContaSimples_PDF") && nomeArquivo.toUpperCase().contains("ANCORA")) {
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ContaSimples_PDF")){
			if (arquivoCompleto.toUpperCase().contains("EXTRATO EMITIDO PELA CONTA SIMPLES - A CONTA FEITA PARA EMPREENDER")){

				if (line.contains("CONTA NUMERO")){
					nomePortador2 = "CONTA SIMPLES " + cutString(memFile.getStringFieldRemoveEspCharsUpper(0), "CONTA NUMERO");

					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}

				if( line.contains("DATA") && line.contains("HISTORICO") && line.contains("CREDITO") &&
						line.contains("DEBITO") && line.contains("SALDO") && line.contains("SITUACAO")) {

					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("LINE", line);

					readExtratoECartao("readExtratoContaSimplesPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno", "break");
					return variaveis.toString();
				}

				if( line.contains("TIPO DE TRANSACAO E CARTAO") && line.contains("ESTABELECIMENTO") &&
						line.contains("DATA") && line.contains("ENTRADAS") && line.contains("SAIDAS")) {//#2403-030891

					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("LINE", line);

					readExtratoECartao("readExtratoContaSimples2PDF", memFile, nomePortador2, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno", "break");
					return variaveis.toString();
				}
			}
		}

		////// EXTRATO - BANCO CORA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Cora_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			if (((arquivoCompleto.toUpperCase().contains("CORA PAGAMENTOS LTDA") && arquivoCompleto.toUpperCase().contains("34.052.649/0001-78")) || (arquivoCompleto.toUpperCase().contains("CORA SCD SA") && arquivoCompleto.toUpperCase().contains("37.880.206/0001-63")) ) && cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("CONTA") && (!arquivoCompleto.contains("OUVIDORIA: 0800 940 0602") && !arquivoCompleto.contains("OUVIDORIA: 08009400602"))) {

				if (cabecalhoPlanilha.contains("CONTA:")){
					nomePortador = "BANCO CORA ";
				}

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("CABECALHOPLANILHA", cabecalhoPlanilha);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoCoraPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}
		////// EXTRATO - BTG PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Btg_PDF") && nomeArquivo.toUpperCase().contains("ANCORA")) {
			if (arquivoCompleto.toUpperCase().contains("BTG PACTUAL") && arquivoCompleto.toUpperCase().contains("RAZAO SOCIAL") && cabecalhoPlanilha.contains("CONTA CORRENTE") && cabecalhoPlanilha.contains("CNPJ")) {
				if (!memFile.getStringFieldRemoveEspCharsUpper(0).equals("") && !memFile.getStringFieldRemoveEspCharsUpper(1).equals("") && !memFile.getStringFieldRemoveEspCharsUpper(2).equals("") && memFile.getStringFieldRemoveEspCharsUpper(3).matches("[0-9]*") && !memFile.getStringFieldRemoveEspCharsUpper(4).matches("[0-9]*") && memFile.getStringFieldRemoveEspCharsUpper(5).matches("[0-9]*")){
					nomePortador = "BTG PACTUAL" + " | " +"BANCO: " + memFile.getStringFieldRemoveEspCharsUpper(2) + " | " +"AGENCIA: " + memFile.getStringFieldRemoveEspCharsUpper(3) + " | " +"CONTA: " + memFile.getStringFieldRemoveEspCharsUpper(4);
				}
				// logger.logInfo("NP -> "+nomePortador);
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoBtgPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
			if(arquivoCompleto.contains("01. CONTA CORRENTE E APLICACOES REMUNERA+")){
				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoBtg2PDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// Extrato - ASAAS PDF //////////////////////////////////////////////////////////////////
		// logger.logInfo("ASINHA " + nomeArquivo.toUpperCase() + " | " + nomePortador2 + " | " + arquivoCompleto.contains("ASAAS GESTAO FINANCEIRA INSTITUICAO DE PAGAMENTO"));
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ASAAS_PDF")) {
			if (nomeArquivo.toUpperCase().contains("ANCORA") && nomePortador2.equals("") && (arquivoCompleto.contains("ASAAS GESTAO FINANCEIRA INSTITUICAO DE PAGAMENTO") ||
					(arquivoCompleto.contains("ASAAS  GESTAO  FINANCEIRA") && arquivoCompleto.contains("INSTITUICAO  DE  PAGAMENTO")))) {
				nomePortador2 = "ASAAS-PDF";
			}
			if (memFile.getFieldsSize() > 0 && nomePortador2.contains("ASAAS-PDF")) {
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ASAAS");
				readExtratoECartao("readExtratoAsaasPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - NU BANK //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Nubank_PDF")) {
			if ((arquivoCompleto.toUpperCase().contains("NU PAGAMENTOS S.A") || (arquivoCompleto.toUpperCase().contains("OUVIDORIA:") && arquivoCompleto.toUpperCase().contains("0800 887 0463")))&& (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")) {
				nomePortador2 = "NUBANK-PDF";
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno", "continue");

				return variaveis.toString();
			}

			if (nomePortador2.contains("NUBANK-PDF") && line.contains("CONTA")) {
				logger.logInfo("Extrato-PDF V2");
				JSONObject jDados = new JSONObject();
				jDados.put("PEGABANCO", "SIM");
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-NUBANK");
				readExtratoECartao("readExtratoNubankPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}*/
		//#2308-014409
		////// Extrato - NU BANK PDF ///////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Nubank_PDF") && nomeArquivo.toUpperCase().contains("ANCORA") &&
				(arquivoCompleto.toUpperCase().contains("NU PAGAMENTOS S.A") 	|| (arquivoCompleto.toUpperCase().contains("OUVIDORIA:") &&
						arquivoCompleto.toUpperCase().contains("0800 887 0463")))		&& nomePortador2.equals("")) {

			JSONObject jDados = new JSONObject();
			jDados.put("PEGABANCO", 	"SIM");
			jDados.put("CODEMPRESA",  	codEmpresa);
			jDados.put("NOMEARQUIVO", 	nomeArquivo);
			jDados.put("TIPOPLANILHA", 	"EXTRATO-NUBANK");

			readExtratoECartao("readExtratoNubankPDF", memFile, "NUBANK-PDF", jDados, dbIOCont, logger);
			variaveis.put("nomePortador2",   "NUBANK-PDF");
			variaveis.put("tipoRetorno",   "break");
			return variaveis.toString();
		}

		//#2311-022341 - By Leal
		////// EXTRATO - Sisprime PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sisprime_PDF") && nomeArquivo.toUpperCase().contains("SISPRIME")) {
			if(cabecalhoPlanilha.contains("EXTRATO DE CONTA") && cabecalhoPlanilha.contains("PERIODO DO EXTRATO")){

				nomePortador2 = cutString(cabecalhoPlanilha, "AGENCIA:", "CONTA:").trim() + " - " + cutString(cabecalhoPlanilha, "CONTA:", "PERIODO").trim();
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-SISPRIME-PDF");

				readExtratoECartao("readExtratoSisprimePDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		//#2312-025279 - By Leal
		////// EXTRATO - Paybrokers PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Paybrokers_PDF")) {
			if(cabecalhoPlanilha.contains("PAYBROKERS IP") && cabecalhoPlanilha.contains("CONTAPAG") && cabecalhoPlanilha.contains("CONTAPAG") &&
					cabecalhoPlanilha.contains("FILTROS UTILIZADOS NO RELATORIO") && cabecalhoPlanilha.contains("SALDO ANTERIOR")){

				nomePortador2 = cutString(cabecalhoPlanilha, "AGENCIA:", "CNJP:").trim() +
						" - " + cutString(cutString(cabecalhoPlanilha, "RELATORIO", "DATA FINAL:"), "CONTA", "DATA INICIAL:").trim();

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-PAYBROKERS-PDF");

				readExtratoECartao("readExtratoPaybrokersPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BANCO SANTANDER //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Santander_PDF")) {
			// logger.logDebug("Extrato-PDF");
			// logger.logDebug("NP2 -> "+nomePortador2);
			if (line.contains("INTERNET BANKING EMPRESARIAL") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")) {
			// if (line.contains("INTERNET BANKING EMPRESARIAL") && nomePortador2.equals("")) {
				logger.logDebug("Extrato-PDF V1");
				nomePortador2 = "SANTANDER-PDF";
				// logger.logDebug("CAIU EM CONTINUE16 " + line);
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno", "continue");

				return variaveis.toString();
			}

			// logger.logDebug("Line -> "+line);

			if(line.contains("INTERNET BANKING") && line.contains("/") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")){
				nomePortador2 = "SANTANDER2-PDF";
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno", "continue");
			}

			if(nomePortador2.equals("SANTANDER2-PDF") && line.contains("CONTA CORRENTE > EXTRATO")){
				nomePortador2 = "SANTANDER-PDF";
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno", "continue");
			}

			// logger.logDebug("Line -> "+line);

			if ((nomePortador2.contains("SANTANDER") && nomePortador2.contains("PDF")) && line.contains("AGENCIA:") && (line.contains("CONTA:") || line.contains("CONTA CORRENTE:"))) {
				logger.logDebug("Extrato-PDF V2");

				//2308-013230

				for (int i = 0; i < memFile.getFieldsSize(); i++) {
					if (memFile.getStringFieldRemoveEspCharsUpper(i).contains("AGENCIA"))
						nomePortador2 += " - " + memFile.getStringFieldRemoveEspCharsUpper(i) + " - ";

					if (memFile.getStringFieldRemoveEspCharsUpper(i).contains("CONTA"))
						nomePortador2 += memFile.getStringFieldRemoveEspCharsUpper(i);
				}


				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-SANTANDER");
				readExtratoECartao("readExtratSantanderPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}*/
		//2308-013230
		//Alteracao no runExtratoseCartoes em SantanderPDF, pegando portador sem utilizar line e memFile, retorno apenas com break,
		//continue excluido. Validação utilizando cabecalhoPlanilha. Adicionado ao jDados um TIPOLAYOUT, onde diferencia-se entre 001 e 002
		//por outra validacao.
		////// Extrato - BANCO SANTANDER PDF ///////////////////////////////////////////////////

		/*logger.logInfo((("teste -> " + cabecalhoPlanilha.contains("INTERNET BANKING") + "|" + arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER")) +
				"|" + (arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER") +  "|" + cabecalhoPlanilha.contains("EXTRATO >")) +
				"|" + ((cabecalhoPlanilha.contains("CONSULTAR") +  "|" + (!arquivoCompleto.contains("SEU NUMERO") +  "|" + !arquivoCompleto.contains("NOSSO NUMERO")))
						+ "|" + ((cabecalhoPlanilha.contains("CONTA CORRENTE >") + "|" + (cabecalhoPlanilha.contains("DATA")
						+  "|" + cabecalhoPlanilha.contains("VALOR") +  "|" + cabecalhoPlanilha.contains("HISTORICO")))
						+ "|" + cabecalhoPlanilha.contains("CONTA CORRENTE|")))));*/

		if ((roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Santander_PDF") &&
				((cabecalhoPlanilha.contains("INTERNET BANKING") || arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER")) &&
						(arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER") || cabecalhoPlanilha.contains("EXTRATO >")) &&
						((cabecalhoPlanilha.contains("CONSULTAR") && (!arquivoCompleto.contains("SEU NUMERO") || !arquivoCompleto.contains("NOSSO NUMERO")))
								|| ((cabecalhoPlanilha.contains("CONTA CORRENTE >") && (cabecalhoPlanilha.contains("DATA")
								|| cabecalhoPlanilha.contains("VALOR") || cabecalhoPlanilha.contains("HISTORICO")))
								|| cabecalhoPlanilha.contains("CONTA CORRENTE|"))))

				|| //2308-014288
				(cabecalhoPlanilha.contains("APLICATIVO SANTANDER EMPRESAS") && (cabecalhoPlanilha.contains("SALDO DISPON") && cabecalhoPlanilha.contains("VEL PARA USO:")))
				|| arquivoCompleto.contains("BANCO SANTANDER PESSOA JURIDICA")) ||

				(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Santander_PDF") &&
						arquivoCompleto.contains("SALDO DO DIA") && cabecalhoPlanilha.contains("AGENCIA:") &&
						cabecalhoPlanilha.contains("INTERNET BANKING")) ||

				(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Santander_PDF") &&
						cabecalhoPlanilha.contains("CLIENTE") && cabecalhoPlanilha.contains("PERIODO") &&
						cabecalhoPlanilha.contains("BANCO SANTANDER") && cabecalhoPlanilha.contains("INTERNATIONAL")) ||

				(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Santander_PDF")&&
						(!cabecalhoPlanilha.contains("CONSULTAR EXTRATO") &&
								cabecalhoPlanilha.contains("SALDO DISPONIVEL PARA USO:") &&
								cabecalhoPlanilha.contains("INTERNET BANKING EMPRESARIAL")) ||
						(cabecalhoPlanilha.contains("PERIODO") && cabecalhoPlanilha.contains("DATA/HORA") &&
								cabecalhoPlanilha.contains("CONTA CORRENTE > EXTRATO") && cabecalhoPlanilha.contains("CONTA CORRENTE:") &&
								arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER EMPRESARIAL"))) || //2308-014288
				// 2310-019538 ultimas duas condicoes do if acima adicionados

				(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Santander_PDF") && //2401-026852 - Padrao 2.2, mas vem sem uma parte do cabecalho
						cabecalhoPlanilha.contains("INTERNET BANKING EMPRESARIAL") &&
						cabecalhoPlanilha.contains("OPCAO DE PESQUISA") &&
						cabecalhoPlanilha.contains("SALDO ANTERIOR") &&
						arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER")) ||

				(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Santander_PDF") && //2312-024677 - Novo layout - Padrao 6
						cabecalhoPlanilha.contains("INTERNET BANKING") &&
						cabecalhoPlanilha.contains("AGENCIA E CONTA") &&
						cabecalhoPlanilha.contains("DESCRI"))

		) {
			logger.logInfo("entrousantand");

			JSONObject jDados = new JSONObject();
			// logger.logInfo("ENTROU SANT");
			//#2309-014635
			if (cabecalhoPlanilha.contains("CONTA CORRENTE:") && cabecalhoPlanilha.contains("PERIODO:") && cabecalhoPlanilha.contains("AGENCIA:")) {
				nomePortador2 = "SANTANDER-PDF - " + cutString(cabecalhoPlanilha, "AGENCIA:", "CONTA CORRENTE:");
				nomePortador2 += " " + cutString(cabecalhoPlanilha, "CONTA CORRENTE:", "PERIODO:");
				jDados.put("TIPOLAYOUT", "001");
			} else if (cabecalhoPlanilha.contains("AG") && cabecalhoPlanilha.contains("CC") && cabecalhoPlanilha.contains("BANCO SANTANDER PESSOA JURIDICA")) { //2309-014577
				nomePortador2 = "SANTANDER-PDF - " + cutString(cabecalhoPlanilha, "JURIDICA AG", "CC");
				nomePortador2 += " " + cutString(cabecalhoPlanilha, "CC", "BUSQUE");
				jDados.put("TIPOLAYOUT", "002");
			} else {
				if(!cabecalhoPlanilha.contains("CONTA CORRENTE") && !cabecalhoPlanilha.contains("CONSULTAR EXTRATO")){

					if(cabecalhoPlanilha.contains("OUTRA CONTA >")){
						nomePortador2  = "SANTANDER-PDF - " + cutString(cabecalhoPlanilha, "AGENCIA:", "CONTA:");
						nomePortador2 += " " + cutString(cabecalhoPlanilha, "CONTA:", "OUTROS SERVICOS");
						jDados.put("TIPOLAYOUT", "001");
					}
					else{
						nomePortador2  = "SANTANDER-PDF - " + cutString(cabecalhoPlanilha, "AGENCIA:", "CONTA:");
						nomePortador2 += " " + cutString(cabecalhoPlanilha, "CONTA:", "OPCAO DE PESQUISA:");
						jDados.put("TIPOLAYOUT", "001");
					}
				}

				else if(cabecalhoPlanilha.contains("INTERNET BANKING") && cabecalhoPlanilha.contains("AGENCIA E CONTA") && cabecalhoPlanilha.contains("DESCRI")) {
					nomePortador2  = "SANTANDER-PDF - " + cutString(cabecalhoPlanilha, "CONTA:", "PERIODO");
					jDados.put("TIPOLAYOUT", "005");
				}

				else{
					nomePortador2 = "SANTANDER-PDF - " + cutString(cabecalhoPlanilha, "AGENCIA", "CONTA:").replaceAll(":", "");;
					nomePortador2 += " " + cutString(cabecalhoPlanilha, "CONTA:", cabecalhoPlanilha.indexOf("CONTA CORRENTE"));
					jDados.put("TIPOLAYOUT", "001");
				}
			}

			//2310-019538
			if(cabecalhoPlanilha.contains("APLICATIVO SANTANDER EMPRESAS")){
				nomePortador2 = "SANTANDER-PDF - " + cutString(cabecalhoPlanilha, "CONTA:", "PERIODOS:");
				nomePortador2 += " " + cutString(cabecalhoPlanilha,"AGENCIA:", "CONTA:");
				jDados.put("TIPOLAYOUT","001");
			}

			if(cabecalhoPlanilha.contains("INTERNET BANKING EMPRESARIAL") && arquivoCompleto.contains("SALDO DO DIA")){
				nomePortador2 = cutString(cabecalhoPlanilha, "CONTA:", "?");
				jDados.put("TIPOLAYOUT", "003");
			}
			//logger.logInfo("cabecalhoPlanilha -> " + cabecalhoPlanilha);
			if(cabecalhoPlanilha.contains("CLIENTE") && cabecalhoPlanilha.contains("PERIODO") && cabecalhoPlanilha.contains("BANCO SANTANDER INTERNATIONAL")){
				nomePortador2 = "SANTANDER INTERNATIONAL " + cutString(cabecalhoPlanilha, "PERIODO", "-");
				jDados.put("TIPOLAYOUT", "004");
			}

			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);
			jDados.put("TIPOPLANILHA", "EXTRATO-SANTANDER");
			logger.logInfo("NOME PORTADOR SANTANDER -> "+ nomePortador2);
			readExtratoECartao("readExtratSantanderPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno",   "break");
			return variaveis.toString();
		}

		//2312-024563
		////// EXTRATO - UBP PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_UBP_PDF")) {
			if(cabecalhoPlanilha.contains("STATEMENT") && cabecalhoPlanilha.contains("ACCOUNT")
					&& cabecalhoPlanilha.contains("THE") && cabecalhoPlanilha.contains("ESTABLISHED")){

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-UBP-PDF");

				readExtratoECartao("readExtratoUBPPDF", memFile, "", jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////////Extrato Sicredi PDF ////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sicredi_PDF")) {
			// logger.logInfo("Line SICREDI-> "+line+" - NP2 -> "+nomePortador2+" - NA -> " + nomeArquivo.toUpperCase());
			if (nomePortador2.equals("") && ((nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) &&
					(arquivoCompleto.toUpperCase().contains("SICREDI FONE") && arquivoCompleto.toUpperCase().contains("SAC")))) {//2403-031543
				//logger.logInfo("VALIDOU SICREDI PDF");
				//logger.logInfo("nomeArquivo -> " + nomeArquivo);
				//logger.logInfo("line -> " + line);
				nomePortador2 = "SICREDI";
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno",   "continue");

				return variaveis.toString();
			}
			// 2309-017469 substituido pelo if da linha abaixo
			// if(nomePortador2.contains("SICREDI")){
			if(nomePortador2.contains("SICREDI") && !nomePortador2.contains("EXCEL")){
				if(line.contains("ASSOCIADO")){
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				if(line.contains("COOPERATIVA") && !line.contains("CONTA")){
					nomePortador2 += " - " + line.replaceAll(";","");
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				if(line.contains("CONTA")){
					if (line.contains("COOPERATIVA")) nomePortador2 += " - " + cutString(line.toUpperCase(), "COOPERATIVA:", "IMPRESSO").replaceAll("CONTA", "").replaceAll("CORRENTE", "").trim();
					else nomePortador2 += " " + line.replaceAll(";","");
					nomePortador2 = nomePortador2.replaceAll("CONTA", "").replaceAll("COOPERATIVA", "").replaceAll(":", "").trim();
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				if (line.contains("EXTRATO") && line.contains("DETALHADO") && line.contains("APLICA")){
					nomePortador2 = ".";
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-SICREDI");

				readExtratoECartao("readExtratoSicrediPDF", memFile, nomePortador2, jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO CEF PDF  /////////
		// logger.logDebug("lin -> " + line);
		if ((roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_CEF_PDF") || roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Caixa_PDF")) && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			String tipoPadrao = "";
			// logger.logDebug("Line -> "+line);

			if ((nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && (nomeArquivo.toUpperCase().contains("CAIXA") || nomeArquivo.toUpperCase().contains("CEF")) && nomePortador2.equals("")) {
				// if ((nomeArquivo.toUpperCase().contains("CAIXA") || nomeArquivo.toUpperCase().contains("CEF")) && nomePortador2.equals("")) {
				logger.logDebug("NP CEF PDF capturado");

				nomePortador2 = "CEF";
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			// if(nomePortador2.contains("CEF") && nomeArquivo.toUpperCase().contains("PDF")){
			if(nomePortador2.contains("CEF")){
				// logger.logDebug("NP CEF");
				if(line.contains("EXTRATO POR PERIODO")){
					// logger.logDebug("extrato");
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				if(line.startsWith("VIA INTERNET")){
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				//Douglas. Feito para o Chamado #2304-003957 para leitura das colunas 1 2 e 3
				if(line.startsWith("CONTA:") && !memFile.getStringFieldRemoveEspCharsUpper(1).equals("") && memFile.getStringFieldRemoveEspCharsUpper(2).equals("") && memFile.getStringFieldRemoveEspCharsUpper(3).equals("")){
					nomePortador2 += " - " + memFile.getStringFieldRemoveEspCharsUpper(1);
					// logger.logDebug("NP conta -> "+nomePortador2);
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				//Douglas. Feito para o Chamado #2304-003957 para leitura das colunas 1 2 e 3
				if(line.startsWith("CONTA:") && !memFile.getStringFieldRemoveEspCharsUpper(1).equals("") && !memFile.getStringFieldRemoveEspCharsUpper(2).equals("") && !memFile.getStringFieldRemoveEspCharsUpper(3).equals("")){
					nomePortador2 += " - " + memFile.getStringFieldRemoveEspCharsUpper(1) + " / " + memFile.getStringFieldRemoveEspCharsUpper(2) + " / " + memFile.getStringFieldRemoveEspCharsUpper(3);
					// logger.logDebug("NP conta -> "+nomePortador2);
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				//Douglas. Feito para o Chamado #2307-008830 faz a captura do portador quando coluna 0 contem CONTA: e coluna 1 a 3 estiverem vazias
				if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA:") && memFile.getStringFieldRemoveEspCharsUpper(1).equals("") && memFile.getStringFieldRemoveEspCharsUpper(2).equals("") && memFile.getStringFieldRemoveEspCharsUpper(3).equals("")){
					nomePortador2 += " - " + cutString(memFile.getStringFieldRemoveEspCharsUpper(0), "CONTA:");
					// logger.logDebug("NP conta -> "+nomePortador2);
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				if(line.contains("CONTA:") && line.contains("AGENCIA:") && line.contains("PRODUTO:")){
					nomePortador2 += " - " + cutString(memFile.getStringFieldRemoveEspCharsUpper(0), "CONTA:", memFile.getStringFieldRemoveEspCharsUpper(0).length());
					// logger.logDebug("NP conta -> "+nomePortador2);
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				// logger.logDebug("CABECALHOPLANILHA -> " + cabecalhoPlanilha);
				if(cabecalhoPlanilha.contains("INTE_RNET___BANK:ING")) tipoPadrao = "002";
				if(!cabecalhoPlanilha.contains("INTE_RNET___BANK:ING") && !cabecalhoPlanilha.contains("AGENCIA:") && cabecalhoPlanilha.contains("NR.")) tipoPadrao = "001";
				if(!cabecalhoPlanilha.contains("INTE_RNET___BANK:ING") && cabecalhoPlanilha.contains("AGENCIA:")) tipoPadrao = "003";
				//if(!cabecalhoPlanilha.contains("INTE_RNET___BANK:ING") && !cabecalhoPlanilha.contains("AGENCIA:") && cabecalhoPlanilha.contains("AGENCIA")) tipoPadrao = "004";

				//#2306-008105
				if ((nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {

					List<String> termosParaValidacao = new ArrayList<String>();
					termosParaValidacao.addAll(Arrays.asList("EXTRATO POR PERIODO",
							"VIA INTERNET",
							"CLIENTE",
							"EMITIDO EM",
							"AGENCIA:",
							"PRODUTO:",
							"CONTA:",
							"LANCAMENTOS DE",
							"DATA DE"));

					//logger.logInfo("COMPLETO -> " + arquivoCompleto);
					String regexValidacao = ".*";
					for (String validacao : termosParaValidacao) {
						logger.logInfo(validacao + " -> " + arquivoCompleto.matches(".*" + validacao + ".*"));
						regexValidacao += validacao + ".*";
					}
					if (arquivoCompleto.matches(regexValidacao)) {
						JSONObject jDados = new JSONObject();

						jDados.put("CODEMPRESA", codEmpresa);
						jDados.put("NOMEARQUIVO", nomeArquivo);
						jDados.put("TIPOLANCAMENTO", tipoLancamento);
						jDados.put("TIPOPLANILHA", "EXTRATO-CEF04");

						//#2311-021318 - Leal
						if(cabecalhoPlanilha.contains("VIA INTERNET")){
							jDados.put("TIPOPLANILHAAUX", "005");
						}

						readExtratoECartao("readExtratoCefPDF4", memFile, "", jDados, dbIOCont, logger);
						variaveis.put("tipoRetorno", "break");
						return variaveis.toString();
					}

					//2312-024906 - Padrao 6 - Esse padrao so roda no conversor antigo pq no novo ele joga as info dos lancamentos na mesma coluna e nao da para diferenciar os nomes
					if(cabecalhoPlanilha.contains("SIHEX") && cabecalhoPlanilha.contains("CAIXA") && cabecalhoPlanilha.contains("CLIENTE:") &&
							cabecalhoPlanilha.contains("CONTA:")){
						JSONObject jDados = new JSONObject();

						nomePortador = "CAIXA " + cutString(cabecalhoPlanilha, "CONTA:").trim();

						jDados.put("CODEMPRESA", codEmpresa);
						jDados.put("NOMEARQUIVO", nomeArquivo);
						jDados.put("TIPOLANCAMENTO", tipoLancamento);

						readExtratoECartao("readExtratoCefPDF6", memFile, nomePortador, jDados, dbIOCont, logger);
						variaveis.put("tipoRetorno", "break");
						return variaveis.toString();
					}
				}

				logger.logDebug("TIPOPAdrao -> " + tipoPadrao + " | L = "+line);
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-CEF");
				jDados.put("TIPOPADRAO", tipoPadrao);
				jDados.put("LINHA", line);

				// logger.logDebug("NP FINAL -> "+nomePortador2);
				if(tipoPadrao.equals("")){
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}else{
					readExtratoECartao("readExtratoCaixaPDF" ,memFile, nomePortador2, jDados, dbIOCont, logger);
				}

				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - VALECARD //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_ValeCard_PDF")) {

			//if (memFile.getStringFieldRemoveEspCharsUpper(0).contains("VALECARD") && memFile.getFieldsSize() <= 2) {
			//nomePortador  = "VALECARD";
			//logger.logInfo("NP --> "+nomePortador);
			//complemento01 = nomePortador;
			//return "continue";
			//}

			//if (memFile.getStringFieldRemoveEspCharsUpper(0).contains("DEMONSTRATIVO") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("VENDA") && memFile.getFieldsSize() <= 2 && nomePortador.equals("VALECARD")) {
			//	logger.logInfo("Entra na 2 condição");
			//	nomePortador2 = "VALECARD";
			//	return "continue";
			//}

			if (cabecalhoPlanilha.contains("VALECARD") && cabecalhoPlanilha.contains("DEMONSTRATIVO") && cabecalhoPlanilha.contains("VENDA")) {
				nomePortador  = "VALECARD";
				nomePortador2 = "VALECARD";
				complemento01 = nomePortador;
			}

			if(nomePortador.equals("VALECARD") && nomePortador2.equals("VALECARD") && complemento01.equals("VALECARD")){
				tipoPlanilha = "CARTAO-VALECARD";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("NOMEPORTADOR",   nomePortador);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				mapaVariavel = readExtratoECartao("readExtratoValeCardPdf", memFile, jDados, mapaVariavel, logger);
				return "break";
			}
		}
		//2310-019474
		////// EXTRATO - MOVILEPAY PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Movilepay_PDF") && cabecalhoPlanilha.contains("MOVILEPAY")
				&& cabecalhoPlanilha.contains("EXTRATO CONTA DIGITAL")){
			tipoPlanilha = "EXTRATO-MOVILEPAY";
			nomePortador2 = cutString(arquivoCompleto, "AGENCIA", "DATA").trim();
			nomePortador2 = "MOVILEPAY - " + cutString(nomePortador2, 0, "CONTA") + " " + cutString(nomePortador2, "CONTA");

			JSONObject jDados = new JSONObject();
			jDados.put("TIPOPLANILHA", tipoPlanilha);
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);
			jDados.put("LINE", line);
			readExtratoECartao("readExtratoMovilepayPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		////// EXTRATO - VIACREDI PDF //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Viacredi_PDF")) {


			if ((nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")
				&& (memFile.getStringFieldRemoveEspCharsUpper(0).contains("COOPERATIVA")
				&&  memFile.getStringFieldRemoveEspCharsUpper(0).contains("CRE") || memFile.getStringFieldRemoveEspCharsUpper(0).contains("CIVIA") || memFile.getStringFieldRemoveEspCharsUpper(0).contains("EVOLUA") || memFile.getStringFieldRemoveEspCharsUpper(0).contains("UNILOS"))
				&& (memFile.getStringFieldRemoveEspCharsUpper(3).contains("CONTA") || memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA"))){
				logger.logInfo("Entrou Viacredi");
				nomePortador2 = "PDF-VIACREDI ";
				//#2304-003466
				//if (memFile.getStringFieldRemoveEspCharsUpper(0).contains( "CONTA")) nomePortador2 = nomePortador2 + "  " + cutString(memFile.getStringFieldRemoveEspCharsUpper(0), "CONTA").replaceAll(";","");
				if (memFile.getStringFieldRemoveEspCharsUpper(0).contains( "CONTA")) nomePortador2 = cutString(memFile.getStringFieldRemoveEspCharsUpper(0), "CONTA").replaceAll(";","").replaceAll(":","").trim();
				if (memFile.getStringFieldRemoveEspCharsUpper(3).contains( "CONTA")) nomePortador2 = cutString(memFile.getStringFieldRemoveEspCharsUpper(3), "CONTA").replaceAll(";","").replaceAll(":","").trim();

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-VIACREDI");

				readExtratoECartao("readExtratoViacrediPDF", memFile, nomePortador2, jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}*/

		////// Extrato - VIACREDI PDF ////////////////////////////////////////////////////////// REFATORADO
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Viacredi_PDF") &&
				cabecalhoPlanilha.contains("PERIODO") && cabecalhoPlanilha.contains("COOPERATIVA:") &&
				cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("DATA") &&
				!cabecalhoPlanilha.contains("SICOOB")){

			nomePortador2 = cutString(cabecalhoPlanilha, "CONTA:", "DATA");

			JSONObject jDados = new JSONObject();
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);
			jDados.put("TIPOPLANILHA", "EXTRATO-VIACREDI");

			// logger.logInfo("NOME PORTADOR VIACREDI -> "+ nomePortador2);

			readExtratoECartao("readExtratoViacrediPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno",   "break");
			return variaveis.toString();
		}


		////// EXTRATO - AILOS FRANCESINHA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhagrupoAilos_PDF") || (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			if (nomePortador2.equals("") && arquivoCompleto.contains("EMITIDO EM") && arquivoCompleto.contains("CARTEIRA DE COBRANCA COM REGISTRO")
					&& arquivoCompleto.contains("PERIODO DE") && arquivoCompleto.contains("BENEFICIARIO") && arquivoCompleto.contains("SITUACAO")
					&& arquivoCompleto.contains("PAGADOR") && arquivoCompleto.contains("CPF/CNPJ")){

				nomePortador2 = cutString("FRANCESINHAAILOS -" + nomeArquivo.toUpperCase(), 0, 99);

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("TIPOPLANILHA", "FRANCESINHAAILOS");

				mapaVariavel = readExtratoECartao("readFrancesinhagrupoAilosPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if (arquivoCompleto.contains("EMITIDO EM") && arquivoCompleto.contains("MOVIMENTACAO DE COBRANCA COM REGISTRO") &&
					arquivoCompleto.contains("PERIODO DE") && arquivoCompleto.contains("BENEFICIARIO") && arquivoCompleto.contains("CONVENIO") &&
					arquivoCompleto.contains("OCORRENCIA") && arquivoCompleto.contains("VLR.BOLETO") && arquivoCompleto.contains("ABATIM.JUROS/MULTA") &&
					arquivoCompleto.contains("OUT.CRE") && arquivoCompleto.contains("VLR.PAGO")){

				nomePortador2 = cutString("FRANCESINHAAILOS -" + nomeArquivo.toUpperCase(), 0, 99);

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("TIPOPLANILHA", "FRANCESINHAAILOS");
				jDados.put("SEGMENTOAILOS", "VIACRED");

				mapaVariavel = readExtratoECartao("readFrancesinhagrupoAilosPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SICREDI FRANCESINHA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaSicredi_PDF")) {
			if((cabecalhoPlanilha.contains("RELATORIO FINANCEIRO FRANCESINHA") && cabecalhoPlanilha.contains("ASSOCIADO:") && cabecalhoPlanilha.contains("COOPERATIVA") && cabecalhoPlanilha.contains("CONTA CORRENTE")
					&& cabecalhoPlanilha.contains("BENEFICIARIO") && arquivoCompleto.contains("A TRANSACAO ACIMA FOI REALIZADA VIA SICREDI INTERNET")) || (cabecalhoPlanilha.contains("CARTEIRA") && cabecalhoPlanilha.contains("RELATORIO DE TITULOS")
					&& cabecalhoPlanilha.contains("VALOR TOTAL LIQUIDACAO") && cabecalhoPlanilha.contains("BENEFICIARIO") && cabecalhoPlanilha.contains("COOPERATIVA"))){
				JSONObject jDados = new JSONObject();

				if(cabecalhoPlanilha.contains("RELATORIO FINANCEIRO FRANCESINHA")){
					nomePortador2 = cutString(cabecalhoPlanilha, "CONTA CORRENTE:", "BENEFICIARIO:").replaceAll(";","");
					jDados.put("TIPO", "001");
				} else if(cabecalhoPlanilha.contains("VALOR TOTAL LIQUIDACAO")){
					nomePortador2 = cutString(cabecalhoPlanilha, "CONTA CORRENTE:", "IMPRESSO").replaceAll(";","");
					jDados.put("TIPO", "002");
				}

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FRANCESINHA-SICREDI");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				mapaVariavel = readExtratoECartao("readFrancesinhaSicrediPdf", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();

			}
		}

		////// EXTRATO - SICOOB FRANCESINHA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaSicoob_PDF") || (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			if (cabecalhoPlanilha.contains("RELATORIO  -  TITULOS POR PERIODO") &&
					cabecalhoPlanilha.contains("TIPO CONSULTA:") && cabecalhoPlanilha.contains("CEDENTE:") && cabecalhoPlanilha.contains("CPF/CNPJ SACADO:")){

				nomePortador = cutString(cabecalhoPlanilha, "CONTA CORRENTE:", "CPF/CNPJ");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FRANCESINHA-SICOOB");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFrancesinhaSicoobPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		//2311-023654
		////// EXTRATO - BB FRANCESINHA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Francesinha_BB_PDF")) {
			if (cabecalhoPlanilha.contains("BENEFICIARIO") && cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("CONSULTAR BOLETOS")
					&& line.contains("BENEFICIARIO") && arquivoCompleto.contains("OUVIDORIA BB") && arquivoCompleto.contains("DEFICIENTES") &&
					arquivoCompleto.contains("AUDITIVOS")){

				nomePortador = cutString(cabecalhoPlanilha, cabecalhoPlanilha.lastIndexOf("BENEFICIARIO")).replaceAll("BENEFICIARIO","").replace(";", "").replace("|", "");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "BANCODOBRASIL-FRANCESINHA");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFrancesinha_BBPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		//#2307-009642 - Leal
		//////BRADESCO FRANCESINHA PDF ///////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaBradesco_PDF")) {

			if(cabecalhoPlanilha.contains("TITULOS PAGOS") && cabecalhoPlanilha.contains("DADOS DO TITULO") && cabecalhoPlanilha.contains("ID DO PRODUTO") &&
					cabecalhoPlanilha.contains("DATA E HORA DA CONSULTA")){

				tipoPlanilha = "EXTRATO-INVESTIMENTO-BRADESCO-PDF";
				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   "BRADESCO-FRANCESINHA");
				jDados.put("LINHA",   line);
				mapaVariavel = readExtratoECartao("readFrancesinhaBradescoPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Santander FRANCESINHA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaSantander_PDF")) {
			if (cabecalhoPlanilha.contains("INTERNET BANKING EMPRESARIAL") && cabecalhoPlanilha.contains("CONVENIO/COD. BENEFICIARIO")
					&& cabecalhoPlanilha.contains("AGENCIA/CONTA") 	 && cabecalhoPlanilha.contains("PERIODO:")
					&& arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER EMPRESARIAL")
					&& arquivoCompleto.contains("SAC - ATENDIMENTO") && arquivoCompleto.contains("0800 762 7777")){

				// cutString(cabecalhoPlanilha, "AGENCIA/CONTA", "PERIODO:");
				// logger.logInfo("CABECAPlanilha -> " + cabecalhoPlanilha);
				nomePortador = cutString(cutString(cabecalhoPlanilha, "AGENCIA/CONTA", "/"), cutString(cabecalhoPlanilha, "AGENCIA/CONTA", "/").lastIndexOf(";"), "/") + "/" +cutString(cutString(cabecalhoPlanilha, "AGENCIA/CONTA", "PERIODO:"), "/", ";");
				// nomePortador = "FRANCESINHA SANTANDER";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FRANCESINHA-SANTANDER");
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFrancesinhaSantanderPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			////// EXTRATO - Santander FRANCESINHA 2 PDF //////////////////////////////////////////////////////////////////
			if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaSantander_PDF")) {
				if (cabecalhoPlanilha.contains("EXTRATO DE PAGAMENTOS")    && cabecalhoPlanilha.contains("FOLHA DE PAGAMENTOS")
						&& cabecalhoPlanilha.contains("CONTA CORRENTE:") 	   && cabecalhoPlanilha.contains("AGENCIA:")
						&& cabecalhoPlanilha.contains("CONVENIO:") 	           && cabecalhoPlanilha.contains("CONTA DE DEBITO:")
						&& cabecalhoPlanilha.contains("ORDEM DE APRESENTACAO:")&& cabecalhoPlanilha.contains("QUANTIDADE:")
						&& cabecalhoPlanilha.contains("CNPJ/CPF/CODIGO")
						&& arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER EMPRESARIAL")
						&& arquivoCompleto.contains("0800 762 7777")){

					// cutString(cabecalhoPlanilha, "AGENCIA/CONTA", "PERIODO:");
					//logger.logInfo("FRANCESINHA SANTANDER 2");

					nomePortador = cutString(cabecalhoPlanilha, "AGENCIA:", "PERIODO DA PESQUISA").replace("CONTA CORRENTE:", "").replaceAll(";", "");

					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEEMPRESA", nomeEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("NOMEPORTADOR", "SANTANDER " + nomePortador);
					jDados.put("TIPOPLANILHA", "FRANCESINHA-SANTANDER");
					jDados.put("TIPOLANCAMENTO", tipoLancamento);

					mapaVariavel = readExtratoECartao("readFrancesinhaSantander2PDF", memFile, jDados, mapaVariavel, logger);
					variaveis.put("tipoRetorno",   "break");
					return variaveis.toString();
				}
			}
		}

		////// EXTRATO - SOFISA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sofisa_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			// logger.logInfo("cabecalhoPlanilha -> " + cabecalhoPlanilha.toString());
			//ogger.logInfo("Lin: "+line);
			//if(line.contains("CLIENTE:") && line.contains("AGENCIA:") && line.contains("CONTA:") && arquivoCompleto.contains("CPMF")  && nomePortador2.equals("")){
			if((cabecalhoPlanilha.contains("CLIENTE:") || cabecalhoPlanilha.contains("CLIENTE :")) && cabecalhoPlanilha.contains("AGENCIA:") && cabecalhoPlanilha.contains("CONTA:") && arquivoCompleto.contains("CPMF")  && nomePortador2.equals("")){ //2309-015711

				//logger.logInfo("Entrou run");

				nomePortador2 = "SOFISA " + cutString(cabecalhoPlanilha, cabecalhoPlanilha.indexOf("AGENCIA:")).replaceAll(";", "").replaceAll("\\|", " ");
				//logger.logInfo("NomePort: " + nomePortador2);
				variaveis.put("nomePortador2",   nomePortador2);
				// logger.logInfo("CAIU EM BM " + line);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			// logger.logInfo("VALIDA BRB " + nomePortador2 + " | " + arquivoCompleto.contains("BOCOM BBM S.A")  + " |LINHAZINHA " + line);

			if (nomePortador2.contains("SOFISA")) {

				tipoPlanilha	= "EXTRATO-SOFISA";
				JSONObject jDados = new JSONObject();

				jDados.put("LINE", line);
				jDados.put("TIPOPLANILHA", tipoPlanilha);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);

				// logger.logInfo("AGUI " + anoData);

				readExtratoECartao("readExtratoSofisaPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SAFRA PDF//////////////////////////////////////////////////////////////////
		//#2304-003392. Sérgio (19/04/2023) - Novo modelo de extrato.
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Safra_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			String auxData = "";
			if (cabecalhoPlanilha.toUpperCase().contains("BANCO SAFRA") && cabecalhoPlanilha.toUpperCase().contains("EXTRATO") && line.contains("CONTA:")){
				nomePortador2 = "SAFRA PDF";
				if(memFile.getStringFieldRemoveEspCharsUpper(1).contains("CONTA:"))
					nomePortador  = cutString(memFile.getStringFieldRemoveEspCharsUpper(1), "CONTA:");
				if (memFile.getStringFieldRemoveEspCharsUpper(3).contains("CONTA:"))
					nomePortador = cutString(memFile.getStringFieldRemoveEspCharsUpper(3), "CONTA:").replaceAll(";","").replaceAll(":","").trim();

				nomePortador2 += " " + nomePortador;
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("nomePortador", nomePortador);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}

			// if (nomePortador2.contains("SAFRA PDF") && line.contains("DATA") && line.contains("LANCAMENTO") && line.contains("COMPLEMENTO") && line.contains("NO DOCUMENTO") && line.contains("VALOR")) {
			if (nomePortador2.contains("SAFRA PDF") && line.contains("PERIODO DE")) {
				tipoPlanilha = "EXTRATO-SAFRA-PDF";
				auxData = cutString(line, line.lastIndexOf("/"), line.lastIndexOf("/")+5);
				JSONObject jDados = new JSONObject();
				jDados.put("AUXDATA", auxData);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoSafraPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}*/

		//#2308-013953 -> refatoracao
		////// Extrato - SAFRA PDF ///////////////////////////////////////////////////////////// REFATORADO
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Safra_PDF") && nomeArquivo.toUpperCase().contains("ANCORA") &&
				cabecalhoPlanilha.toUpperCase().contains("BANCO SAFRA") && (cabecalhoPlanilha.toUpperCase().contains("S/A") || cabecalhoPlanilha.toUpperCase().contains("EXTRATO")) &&
				cabecalhoPlanilha.contains("PERIODO DE ") || (cabecalhoPlanilha.toUpperCase().contains("SAFRA") && cabecalhoPlanilha.toUpperCase().contains("EXTRATO DE MOVIMENTACAO") &&
				cabecalhoPlanilha.toUpperCase().contains("CONTA CORRENTE:") && cabecalhoPlanilha.contains("PERIODO DE "))){
			// Adicionado o OU para o chamado #2309-014662 pois o extrato do mesmo não estava com validação de cabeçalho
			String auxData = "";
			String tipoExtrato = "";

			// if(cabecalhoPlanilha.contains("ATE")) tipoExtrato = "002";
			if(cabecalhoPlanilha.contains(" ATE ")) tipoExtrato = "002";
			else tipoExtrato = "001";

			if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("PERIODO"))
				nomePortador   = "SAFRA-PDF - " + cutString(cabecalhoPlanilha, "CONTA:", "PERIODO");
			else if (cabecalhoPlanilha.contains("CONTA CORRENTE:"))
				nomePortador   = "SAFRA-PDF - " + cutString(cabecalhoPlanilha, "CONTA CORRENTE:", "EXTRATO").replaceAll(";", "");

			tipoPlanilha   = "EXTRATO-SAFRA-PDF";


			if(cabecalhoPlanilha.contains("GMT"))
				auxData = cutString(cutString(cabecalhoPlanilha,"PERIODO DE", "GMT").replace(" ", ""), 8,12);
			else{
				if(tipoExtrato.equals("002")){
					auxData = cutString(cutString(cabecalhoPlanilha, "PERIODO DE", "ATE"),5,10);
				}
				else {
					auxData = cutString(cutString(cabecalhoPlanilha, "PERIODO DE", "A"),5,10);
				}
			}
			// logger.logInfo("LOG AUX DATA - " + auxData + " | " + tipoExtrato);

			JSONObject jDados = new JSONObject();

			jDados.put("AUXDATA", auxData);
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("TIPOEXTRATO" , tipoExtrato);
			jDados.put("LINE", line);
			// logger.logInfo("NOME PORTADOR E AUXDATA DE SAFRA -> "+ nomePortador +" | "+ auxData);
			readExtratoECartao("readExtratoSafraPDF", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno",   "break");
			return variaveis.toString();
		}
		//comentado em 15032024
		////// EXTRATO - UNIPRIME PDF //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Uniprime_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {

			if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA CORRENTE:") && memFile.getStringFieldRemoveEspCharsUpper(2).contains("DATA ATUAL:") && nomePortador2.equals("")){
				nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("[^0-9]", "").trim();
				variaveis.put("nomePortador2",   nomePortador2);
				logger.logDebug("CAIU EM CONTINUE11 " + line);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}

			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
				memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replaceAll(" ","").contains("DOC") &&
				memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replaceAll(" ","").contains("N") &&
				memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("HISTORICO") &&
				memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("VALOR") &&
				memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("SALDO")) {

				nomePortador  = "UNIPRIME " + nomePortador2;
				// complemento02	= nomePortador;
				tipoPlanilha	= "EXTRATO-UNIPRIME";
				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoUniprimePDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}*/
		////// EXTRATO - UNIPRIME PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Uniprime_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			if (arquivoCompleto.contains("TAXA MAXIMA DE JUROS (A/M):") &&
					arquivoCompleto.contains("CET-CUSTO EFETIVO TOTAL (A/A):") &&
					arquivoCompleto.contains("CET-CUSTO EFETIVO TOTAL (A/M):") &&
					arquivoCompleto.contains("DIAS NEGATIVOS CHEQUE ESPECIAL:") &&
					arquivoCompleto.contains("TAXA MAXIMA DE JUROS (A/A):")) {

				tipoPlanilha	= "EXTRATO-UNIPRIME";
				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoUniprime2PDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA CORRENTE:") && memFile.getStringFieldRemoveEspCharsUpper(2).contains("DATA ATUAL:") && nomePortador2.equals("")){
				logger.logInfo("Entra na validacao do Uniprime Pdf");
				nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("[^0-9]", "").trim();
				variaveis.put("nomePortador2",   nomePortador2);
				logger.logDebug("CAIU EM CONTINUE11 " + line);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}

			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replaceAll(" ","").contains("DOC") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replaceAll(" ","").contains("N") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("HISTORICO") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("SALDO")) {

				nomePortador  = "UNIPRIME " + nomePortador2;
				// complemento02	= nomePortador;
				tipoPlanilha	= "EXTRATO-UNIPRIME";
				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoUniprimePDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - TRIBANCO PDF//////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Tribanco_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			String tipoExtrato = "";
			//logger.logInfo("NomePortador2: "+nomePortador2);
			//logger.logInfo("Cabe: "+cabecalhoPlanilha);
			//logger.logInfo("Linha: "+line);
			if (cabecalhoPlanilha.toUpperCase().contains("TRIBANCO") && cabecalhoPlanilha.toUpperCase().contains("EXTRATO") && cabecalhoPlanilha.toUpperCase().contains("CONTA:") &&
					nomePortador2.equals("")){
				nomePortador2 = "TRIBANCO PDF";
				//logger.logInfo("Entra no run de Tribanco p1");
				nomePortador  = cutString(cabecalhoPlanilha.toUpperCase(), cabecalhoPlanilha.toUpperCase().indexOf("CONTA:"), "DATA FINAL").replaceAll(";", "").replaceAll(",", "");
				//logger.logDebug("nomePortador! TRIBA -> " + nomePortador);
				//logger.logInfo("NomePort: "+ nomePortador);
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("nomePortador", nomePortador);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}

			if (nomePortador2.contains("TRIBANCO PDF") && line.contains("DATA") && line.contains("DESCRICAO") && line.contains("VALOR")) {
				//logger.logInfo("Entra no invoking de Tribanco p1");
				//logger.logInfo("CHAMOU O PADRAO 2");
				tipoPlanilha = "EXTRATO-TRIBANCO-PDF";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOEXTRATO", "001");
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoTribancoPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}



			if(arquivoCompleto.contains("EXTRATO ONLINE") && arquivoCompleto.contains("RESUMO INICIAL") && arquivoCompleto.contains("CONTA CORRENTE COMUM")
					&& arquivoCompleto.contains("AGENCIA") && arquivoCompleto.contains("CENTRAL DE ATENDIMENTO TRIBANCO")){
				//logger.logInfo("Entrou no 2");
				nomePortador2 = "TRIBANCO PDF";
				nomePortador2  += " " + cutString(arquivoCompleto, "CONTA:", "AGENCIA");
				tipoExtrato = "002";
				//logger.logDebug("nomePortador! TRIBA -> " + nomePortador);


				tipoPlanilha = "EXTRATO-TRIBANCO-PDF";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOEXTRATO", tipoExtrato);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoTribancoPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - TRIBANCO2 PDF//////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Tribanco2_PDF")) {
			// Douglas padrão novo Tribanco chamados #2304-003535 , #2304-002655 , #2304-003618
			if (( (cabecalhoPlanilha.toUpperCase().contains("TRIBANCO") && cabecalhoPlanilha.toUpperCase().contains("EXTRATO")) || (cabecalhoPlanilha.toUpperCase().contains("HOME") &&
					cabecalhoPlanilha.toUpperCase().contains("CNPJ:") && cabecalhoPlanilha.toUpperCase().contains("USUARIO:") &&
					arquivoCompleto.toUpperCase().contains("SALDO CDB")) ) && line.contains("LANCAMENTOS DA")){
				nomePortador2 = "TRIBANCO PDF";
				if(line.contains("LANCAMENTOS DA")) nomePortador = cutString(memFile.getStringFieldRemoveEspCharsUpper(0), "(", ")");

				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("nomePortador", nomePortador);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			if (nomePortador2.contains("TRIBANCO PDF") && line.contains("DATA") && line.contains("MOVIMENTACAO") && line.contains("VALOR")) {
				// logger.logInfo("Validou 002!");
				tipoPlanilha = "EXTRATO-TRIBANCO-PDF";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoTribanco2PDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			//2310-019420 e 2309-017421
			////// EXTRATO - TRIBANCO3 PDF//////////////////////////////////////////////////////////////////
			if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Tribanco2_PDF")) {
				if (cabecalhoPlanilha.toUpperCase().contains("WWW.TRIBANCO") && cabecalhoPlanilha.toUpperCase().contains("BANCO TRIANGULO")
						&& cabecalhoPlanilha.toUpperCase().contains("PRODUTO")){ //
					nomePortador = cutString(cabecalhoPlanilha, "NRO.:", "CLIENTE");
					tipoPlanilha = "EXTRATO-TRIBANCO-PDF";
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("TIPOLANCAMENTO", tipoLancamento);
					jDados.put("LINE", line);
					readExtratoECartao("readExtratoTribanco3PDF", memFile, nomePortador, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno",   "break");
					return variaveis.toString();
				}
			}
		}

		////// Extrato - BANCO VOTORANTIM PDF //////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Votorantim_PDF") && nomeArquivo.toUpperCase().contains("ANCORA")){

			if(arquivoCompleto.toUpperCase().contains("CC:") &&
					arquivoCompleto.toUpperCase().contains("INFORMACOES ATUALIZADAS ATE A DATA E O HORARIO INDICADOS ACIMA E SUJEITAS A ALTERACOES") &&
					arquivoCompleto.toUpperCase().contains("O EXTRATO REFLETE O(S) VALOR(ES) DO SALDO EM CONTA, QUE CONTEMPLA O SALDO DA CONTA CORRENTE, SEM CONTABILIZAR") &&
					arquivoCompleto.toUpperCase().contains("VALORES BLOQUEADOS OU LIMITE, CASO EXISTAM")){

				tipoPlanilha = "EXTRATO-VOTORANTIM-PDF";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoVotorantimPDF", memFile, "BANCO VOTORANTIM", jDados, dbIOCont, logger);
				variaveis.put("nomePortador2",  "BANCO VOTORANTIM");
				variaveis.put("tipoRetorno", 	"break");
				return variaveis.toString();
			}

			if(cabecalhoPlanilha.contains("EXTRATO DE CONTA VINCULADA") && cabecalhoPlanilha.contains("O EXTRATO REFLETE") && cabecalhoPlanilha.contains("CLIENTE:")){
				nomePortador2 = "BANCO VOTORANTIM3";
				variaveis.put("nomePortador2",   nomePortador2);

				tipoPlanilha = "EXTRATO-VOTORANTIM3-PDF";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				nomePortador = cutString(cabecalhoPlanilha, "CONTA:", "INFORMACOES");

				readExtratoECartao("readExtratoVotorantim3PDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// Extrato - BANCO VOTORANTIM2 PDF ////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Votorantim2_PDF") && nomeArquivo.toUpperCase().contains("ANCORA") &&
				cabecalhoPlanilha.contains("INSTITUICAO DE PAGAMENTO") && cabecalhoPlanilha.contains("TITULAR DA CONTA DE PAGAMENTO") &&
				cabecalhoPlanilha.contains("DATA") 					   && cabecalhoPlanilha.contains("CREDITO/DEBITO") &&
				cabecalhoPlanilha.contains("STATUS") 				   && cabecalhoPlanilha.contains("IOF")) {

			nomePortador = cutString(cabecalhoPlanilha, "CONTA", "PERIODO");
			tipoPlanilha = "EXTRATO-VOTORANTIM2-PDF";
			nomePortador2 = "BANCO VOTORANTIM2";

			JSONObject jDados = new JSONObject();
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);
			jDados.put("LINE", line);

			// logger.logInfo("NOME PORTADOR VOTORANTIM -> "+ nomePortador);

			readExtratoECartao("readExtratoVotorantim2PDF", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("nomePortador2",   nomePortador2);
			variaveis.put("tipoRetorno", 	"break");
			return variaveis.toString();
		}

		///// EXTRATO - BANCO GUANABARA //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Guanabara_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			// logger.logInfo("GUANABARA PDF 1");
			//if(line.contains("CONTA:") && arquivoCompleto.toUpperCase().contains("BANCOGUANABARA")){
			if((line.contains("CONTA:") || line.contains("C/C:")) && arquivoCompleto.toUpperCase().contains("BANCOGUANABARA")){
				// logger.logInfo("GUANABARA PDF 2");
				nomePortador2 = "BANCO GUANABARA";
				variaveis.put("nomePortador2",   nomePortador2);
				tipoPlanilha = "EXTRATO-GUANABARA-PDF";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				if(line.contains("C/C:")){
					nomePortador = memFile.getStringFieldRemoveEspCharsUpper(7).replaceAll(";", "") +" "+ memFile.getStringFieldRemoveEspCharsUpper(8).replaceAll(";", "");
				} else {
					nomePortador = memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll(";", "");
				}

				readExtratoECartao("readExtratoGuanabaraPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SOFISA PDF //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sofisa_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			// logger.logInfo("cabecalhoPlanilha -> " + cabecalhoPlanilha.toString());
			if(line.contains("CLIENTE:") && line.contains("AGENCIA:") && line.contains("CONTA:") && arquivoCompleto.contains("CPMF")  && nomePortador2.equals("")){

				nomePortador2 = "SOFISA " + cutString(line, "CONTA:").replaceAll(";", "");
				variaveis.put("nomePortador2",   nomePortador2);
				// logger.logInfo("CAIU EM BM " + line);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			// logger.logInfo("VALIDA BRB " + nomePortador2 + " | " + arquivoCompleto.contains("BOCOM BBM S.A")  + " |LINHAZINHA " + line);


			if (nomePortador2.contains("SOFISA")) {

				tipoPlanilha	= "EXTRATO-SOFISA";

				JSONObject jDados = new JSONObject();

				jDados.put("LINE", line);
				jDados.put("TIPOPLANILHA", tipoPlanilha);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);

				// logger.logInfo("AGUI " + anoData);

				readExtratoECartao("readExtratoSofisaPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}*/


		////// EXTRATO - BANCO SICOOB //////////////////////////////////////////////////////////////////
		/*if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sicoob_PDF")) {

			if ((cabecalhoPlanilha.contains("SICOOB") && cabecalhoPlanilha.contains("SISTEMA DE COOPERATIVAS DE CREDITO DO BRASIL") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")) ||
				(cabecalhoPlanilha.contains("COOP.:") && cabecalhoPlanilha.contains("SICOOB") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals(""))) {

			   //#2307-010659
			   if (line.contains("EXTRATO CONTA CORRENTE") && line.contains("/202")){
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}

			   if (line.contains("CONTA:") || line.contains("MATRICULA:")) {
					nomePortador2 = "SICOOB-PDF";

					//variaveis.put("nomePortador2",   nomePortador2);
					//variaveis.put("tipoRetorno",   "continue");
					//return variaveis.toString();
					//}
					// logger.logDebug("NP2 " + nomePortador2);
				   // if (nomePortador2.contains("SICOOB-PDF")) {
					//if (line.startsWith("SISBR"))					return "continue";
					//if (line.contains("EXTRATO CONTA CORRENTE")){
					//	return "continue";
					//}else{//Douglas Chamado # 2303-000319
					//	if (line.contains("EXTRATO CONTA CAPITAL")) 	return "continue";
					//}
					//if (line.startsWith("COOP.:"))					return "continue";

					//if (line.startsWith("CONTA:")) {
						// logger.logDebug("ENTROU SICOOB2");
					//nomePortador2 += " - " + memFile.getStringFieldRemoveEspCharsUpper(0) + " " + memFile.getStringFieldRemoveEspCharsUpper(1);
					nomePortador2 += " - " + memFile.getStringFieldRemoveEspCharsUpper(0) + " " + memFile.getStringFieldRemoveEspCharsUpper(1);
					nomePortador2 = nomePortador2.replaceAll("CONTA:","");

					JSONObject jDados = new JSONObject();
					jDados.put("LINE", cabecalhoPlanilha);
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("TIPOPLANILHA", "EXTRATO-SICOOB");


					readExtratoECartao("readExtratSicoobPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno",   "continue");				return variaveis.toString();

				  }

			}
		}*/
		//#2309-015675
		////// Extrato - SICOOB PDF PADRAO 1, 2, 3 E 4 ///////////////////////////////////////////////
		// logger.logInfo("RUN LN = "+line);
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sicoob_PDF")){
			// logger.logInfo("NARQUIVO = "+nomeArquivo);
			if (	(cabecalhoPlanilha.contains("SICOOB") /*&& cabecalhoPlanilha.contains("SALDO")*/ && cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("VALOR") &&
					(cabecalhoPlanilha.contains("SISTEMA DE COOPERATIVAS DE CREDITO DO BRASIL") || cabecalhoPlanilha.contains("SISTEMA DE COOPERATIVAS DE CRADITO DO BRASIL") || cabecalhoPlanilha.contains("SERVICOS FINANCEIROS DO SICOOB") ||
							cabecalhoPlanilha.contains("SISTEMA|DE|COOPERATIVAS|DE|CREDITO|DO|BRASIL") || cabecalhoPlanilha.contains("SERVICOS|FINANCEIROS|DO|SICOOB")))
					//Padrao 4 - 2311-021100
					|| (cabecalhoPlanilha.contains("BANCO:") && cabecalhoPlanilha.contains("PERIODO DE") && cabecalhoPlanilha.contains("SALDO") && cabecalhoPlanilha.contains("ULTIMOS LANCAMENTOS") )) {

				// logger.logInfo("Entra na validacao do Sicoob Pdf");
				JSONObject jDados = new JSONObject();
				if(cabecalhoPlanilha.contains("ULTIMOS LANCAMENTOS")){ //2311-021100
					nomePortador2 = "SICOOB-PDF - "+cutString(cabecalhoPlanilha, "CORRENTE:", "EXTRATO").trim();
				} else{
					nomePortador2 = "SICOOB-PDF - " + cutString(cabecalhoPlanilha, "CONTA:", cabecalhoPlanilha.indexOf("CONTA:")+17);
				}
				if (nomePortador2.contains("EXTRATO C") && cabecalhoPlanilha.contains("HORA:") && cabecalhoPlanilha.contains("DATA"))
					nomePortador2 = "SICOOB-PDF - " + cutString(cutString(cabecalhoPlanilha, "HORA:", "DATA"), 9, 19);

				if (cabecalhoPlanilha.contains("PERIODO:") && cabecalhoPlanilha.contains("HISTORICO"))
					anoData = cutString(cutString(cabecalhoPlanilha, "PERIODO:", "HISTORICO"), cutString(cabecalhoPlanilha, "PERIODO:", "HISTORICO").lastIndexOf("/")+1);

				if (!cabecalhoPlanilha.contains("DOCUMENTO")){
					jDados.put("TIPO", "002");

					if(anoData.equals("")) anoData = cutString(cabecalhoPlanilha, cabecalhoPlanilha.indexOf("/20"), cabecalhoPlanilha.indexOf("/20")+5).replace("/", "");
				}
				// logger.logInfo("RUN 2411");
				jDados.put("LINE", cabecalhoPlanilha);
				jDados.put("ANODATA", anoData);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-SICOOB");
				if(cabecalhoPlanilha.contains("ULTIMOS LANCAMENTOS")){ //2311-021100
					readExtratoECartao("readExtratoSicoob2PDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				} else{
					readExtratoECartao("readExtratoSicoobPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				}
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if(arquivoCompleto.contains("COMPROVANTE DEPAGAMENTO DE BOLETO") && arquivoCompleto.contains("PLATAFORMA DE SERVICOS FINANCEIROS DO SICOOB - SISBR")){
				//#2402-030379
				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoSicoob3PDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

			if(	arquivoCompleto.contains("EXTRATO DE SICOOB") &&
					arquivoCompleto.contains("CONTA CORRENTE") &&
					arquivoCompleto.contains("PERIODO DE") &&
					arquivoCompleto.contains("SITUACAO") &&
					arquivoCompleto.contains("CLIENTE OU FORNECEDOR") &&
					arquivoCompleto.contains("CATEGORIA") &&
					arquivoCompleto.contains("GERADO EM") &&
					arquivoCompleto.contains("DOCUMENTO") ) {

				// logger.logInfo("Entra na validacao do Sicoob 5 Pdf");

				tipoPlanilha = "EXTRATO-SISBB";
				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);

				readExtratoECartao("readExtratoSicoob5PDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		//// EXTRATO - BANCO C6BANK //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_C6Bank_PDF")) {
			// logger.logDebug("ANTES port c6");
			if ((line.contains("BANCO C6") || (line.contains("BANCO") && line.contains("C6"))) && (nomeArquivo.toUpperCase().contains(".PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")) {
				// logger.logDebug("ENTROU port c6");
				nomePortador2 = "C6BANK-PDF";

				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			// logger.logDebug("NP2 " + nomePortador2);
			if (nomePortador2.contains("C6BANK-PDF")) {

				if (line.startsWith("AGENCIA:") && (line.contains("CONTA CORRENTE:") || (line.contains("CORRENTE:") && line.contains("CORRENTE:")))) {
					nomePortador2 += " - " + memFile.getStringFieldRemoveEspCharsUpper(1) + " " + memFile.getStringFieldRemoveEspCharsUpper(3);

					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("TIPOPLANILHA", "EXTRATO-C6BANK");

					readExtratoECartao("readExtratoC6BankPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				//#2306-006160. Nova validação
				if (line.startsWith("AGENCIA:") && memFile.getStringFieldRemoveEspCharsUpper(2).contains("CONTA:")) {
					nomePortador2 += " " + memFile.getStringFieldRemoveEspCharsUpper(3);
					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("TIPOPLANILHA", "EXTRATO-C6BANK");
					jDados.put("TIPO", "002");

					readExtratoECartao("readExtratoC6BankPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
			}
		}

		////// EXTRATO - BANCO PAGBANK //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Pagbank_PDF")) {
			// logger.logDebug("LINHA PAGSEGURO " + line + " | " + nomeArquivo + " | " + nomePortador2);
			if (line.contains("PAGSEGURO") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")) {
				// if (line.contains("PAGSEGURO") && nomePortador2.equals("")) {
				logger.logDebug("ENTROU PAGSEGURO1");
				nomePortador2 = "PAGBANK-PDF";

				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			// logger.logDebug("NP2 " + nomePortador2);
			if (nomePortador2.contains("PAGBANK-PDF")) {

				//2401-027377 - Validacao de cnpj retirada, pois quando o nome da empresa que esta no cabecalho for muito grade pode ter quebra de linha e o cnpj vai para a linha dps da com a cc
				//if ((line.startsWith("CNPJ:") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("CONTA CORRENTE")) || line.startsWith("CONTA CORRENTE")) {
				if ((line.startsWith("CNPJ:") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("CONTA CORRENTE")) || line.startsWith("CONTA CORRENTE") || memFile.getStringFieldRemoveEspCharsUpper(1).contains("CONTA CORRENTE")) {
					// logger.logDebug("ENTROU PAGSEGURO2");
					if (memFile.getStringFieldRemoveEspCharsUpper(1).contains("CONTA CORRENTE"))
						nomePortador2 += " - " + memFile.getStringFieldRemoveEspCharsUpper(1);

					if (line.startsWith("CONTA CORRENTE"))
						nomePortador2 += " - " + memFile.getStringFieldRemoveEspCharsUpper(0);

					if(nomePortador2.contains("AGENCIA"))
						nomePortador2 = cutString(nomePortador2, nomePortador2.indexOf("CONTA CORRENTE"));

					JSONObject jDados = new JSONObject();
					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("TIPOPLANILHA", "EXTRATO-PAGBANK-PDF");

					readExtratoECartao("readExtratoPagbankPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno",   "break");
					return variaveis.toString();
				}
			}
		}

		////// EXTRATO - ORIGINAL PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Original_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))){
			if (cabecalhoPlanilha.contains("EXTRATO DA CONTA") && cabecalhoPlanilha.contains("SALDO ATUAL") && (cabecalhoPlanilha.contains("CHEQUE") || cabecalhoPlanilha.contains("BANCO: 212") || cabecalhoPlanilha.contains("BANCO:  212"))) {

				tipoPlanilha = "EXTRATO-ORIGINAL";
				JSONObject jDados = new JSONObject();
				// logger.logDebug("line -> " + line);
				// if (line.contains("CONTA:")){
				// nomePortador = cutString(line, "CONTA:");
				// logger.logDebug("PORT -> " + nomePortador);
				// }

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);

				readExtratoECartao("readExtratoOriginalPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// Liv PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Liv_PDF")) {

			if (line.contains("DATA") && line.contains("TIPO") && line.contains("CONVENIO")) {

				tipoPlanilha = "CARTAO-LIV";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("NOMEPORTADOR",   nomePortador);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				mapaVariavel = readExtratoECartao("readCartaoLivPdf", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// ERP - FOLHA PROGRESSO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("ERP_FolhaAlterdata_Progresso")) {
			// logger.logDebug("ENTROU FOLHA PROG");
			String compl03         = "";
			String tipoLayout      = "";

			if(line.startsWith("ENDERECO") && line.contains("EMISSAO") && nomePortador2.equals("FOLHA ALTERDATA PROGRESSO")){
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			if(line.contains("R E S U M O") && nomePortador2.equals("FOLHA ALTERDATA PROGRESSO")){
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			if(line.startsWith("TIPO PROCESSO") && nomePortador2.equals("FOLHA ALTERDATA PROGRESSO")){
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			if(line.startsWith("EMPRESA") && line.contains("CNPJ") && ((line.contains("/") && line.contains(".")) || memFile.getFieldsSize() == 5 || memFile.getFieldsSize() == 4) && nomePortador2.equals("")){
				nomePortador2 = "FOLHA ALTERDATA PROGRESSO";
				nomePortador = cutString(line, line.lastIndexOf(":")+2);
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("nomePortador",   nomePortador);
				// logger.logDebug("COMP 02 RUN EX --- "+nomePortador);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			if(line.startsWith("PERIODO") && nomePortador2.equals("FOLHA ALTERDATA PROGRESSO")){
				complemento01 = cutString(line, line.lastIndexOf("/")-5).replaceAll(";", "");
				//complemento01 = getLastDayOfMonth(complemento01, false);
				// logger.logDebug("COMP 01 RUN EX --- "+complemento01);
				variaveis.put("complemento01",   complemento01);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			if(line.startsWith("VALORES PAGOS AOS FUNCIONARIOS NA FOLHA DE PAGAMENTO")){
				tipoLayout = "001";
				compl03    = memFile.getStringFieldRemoveEspCharsUpper(0);
				// logger.logDebug("COMP 02 RUN EX --- "+nomePortador+" | DT == "+complemento01);

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO",  tipoLancamento);
				jDados.put("NOMEEMPRESA",     nomeEmpresa);
				jDados.put("NOMEARQUIVO",     nomeArquivo);
				jDados.put("CODEMPRESA",      codEmpresa);
				jDados.put("TIPO",            tipoLayout);
				jDados.put("COMPL02",         nomePortador);
				jDados.put("DATAMOV",         complemento01);
				jDados.put("COMPL03",         compl03);
				jDados.put("LINE",            line);

				nomePortador  = "";
				variaveis.put("nomePortador",   nomePortador);


				mapaVariavel = readExtratoECartao("readErpFolhaAlterdataProgresso", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

		}

		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaItau_PDF")) {
			//ITAU FRANCESINHA
			if(line.contains("CONTA") && line.contains("CORRENTE") && line.contains("EMITIDO EM") && cabecalhoPlanilha.contains("BANCO ITAU S/A")){
				JSONObject jDados = new JSONObject();

				nomePortador2 = cutString(memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1), 0, " ");
				// logger.logInfo("ITAU FRANCESINHA");
				jDados.put("DATAMOVIMENTO", cutString(memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1), " "));
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("TIPOPLANILHA", "ITAU-FRANCESINHA");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				// jDados.put("TESTE", nomePortador2);
				mapaVariavel = readExtratoECartao("readExtratoItauPdfFrancesinha", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			//ITAU FRANCESINHA 2
			// logger.logInfo("MF 0 <> "+memFile.getStringFieldRemoveEspCharsUpper(0) + " <> " + nomePortador2 + " <> "+cabecalhoPlanilha.contains("RESULTADO DA BUSCA")+" <> "+line);
			if(cabecalhoPlanilha.contains("RESULTADO DA BUSCA") &&
					memFile.getStringFieldRemoveEspCharsUpper(0).contains("AGENCIA") &&
					memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA") &&
					line.contains("DATA DE MOVIMENTACAO")){
				nomePortador2 = cutString(memFile.getStringFieldRemoveEspCharsUpper(1), "/");
				variaveis.put("nomePortador2",   nomePortador2);
			}
			// logger.logInfo("NP == "+nomePortador2+" <> "+line);
			if(!nomePortador2.equals("") && arquivoCompleto.contains("CART") && arquivoCompleto.contains("NOME DO PAGADOR") &&
					arquivoCompleto.contains("VCTO.") && arquivoCompleto.contains("MOVIMENTACAO") && cabecalhoPlanilha.contains("RESULTADO DA BUSCA")){
				JSONObject jDados = new JSONObject();
				// logger.logInfo("ITAU FRANCESINHA 2");
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "ITAU-FRANCESINHA-2");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				// jDados.put("TESTE", nomePortador2);
				mapaVariavel = readExtratoECartao("readExtratItauPdfFrancesinha2", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			//2311-022659 - ITAU FRANCESINHA 3
			if(cabecalhoPlanilha.contains("BANCO ITAU S.A.") && cabecalhoPlanilha.contains("MOVIMENTACAO") && cabecalhoPlanilha.contains("TITULOS")
					&& cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("CARTEIRA")){

				if(memFile.getStringFieldRemoveEspCharsUpper(2).contains("CONTA") && memFile.getStringFieldRemoveEspCharsUpper(2).contains("AGENCIA")){
					nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(3);
				}

				JSONObject jDados = new JSONObject();
				//logger.logInfo("ITAU FRANCESINHA 3");
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "ITAU-FRANCESINHA-3");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readExtratoItauPdfFrancesinha3", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			//2311-022659 - ITAU FRANCESINHA 4
			// logger.logInfo("ACC " + arquivoCompleto.contains("CART") + " | " + arquivoCompleto.contains("PAGADOR"));
			if( arquivoCompleto.contains("CART") && arquivoCompleto.contains("PAGADOR") && arquivoCompleto.contains("TIPO") && arquivoCompleto.contains("NOSSO NUMERO") &&
					arquivoCompleto.contains("SEU NUMERO") && arquivoCompleto.contains("VENC.") && arquivoCompleto.contains("AGENCIA RECEB") && arquivoCompleto.contains("INICIAL") &&
					arquivoCompleto.contains("VALOR") && arquivoCompleto.contains("DESCRICAO DE OPERACOES") && arquivoCompleto.contains("OPERACOES VALOR") &&
					arquivoCompleto.contains("VALOR FINAL") && arquivoCompleto.contains("CONSULTAS, INFORMACOES E TRANSACOES, ACESSE") && arquivoCompleto.contains("ITAU.COM.BR")){

				JSONObject jDados = new JSONObject();

				jDados.put("DATAMOVIMENTO", cutString(memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1), " "));
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "ITAU-FRANCESINHA");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readExtratoItauPdfFrancesinha4", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BANCO TRANSFEERA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Transfeera_PDF")) {
			if (cabecalhoPlanilha.contains("NOME DO USUARIO:") && cabecalhoPlanilha.contains("TRANSFEERA INSTITUICAO DE PAGAMENTOS S.A.")
					&& cabecalhoPlanilha.contains("RAZAO SOCIAL:")) {
				nomePortador = cutString(cutString(cabecalhoPlanilha, "CNPJ:", "DATA"),"CNPJ:", " ");
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				readExtratoECartao("readExtratoTransfeeraPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// Extrato - BANCO CREDISSIS PDF ///////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Credisis_PDF")) {
			// logger.logInfo("Cabeca -> " + cabecalhoPlanilha + " Arquivo comp -> " + arquivoCompleto);
			if(cabecalhoPlanilha.contains("EMPRESA") && cabecalhoPlanilha.contains("BANCO") && cabecalhoPlanilha.contains("AGENCIA")
					&& cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("RESPONSAVEL") && arquivoCompleto.contains("OUVIDORIA CREDISIS")
					&& arquivoCompleto.contains("0800 648 00 20")){

				// logger.logInfo("ENTROU NO RUN CREDISIS");
				JSONObject jDados = new JSONObject();

				// logger.logInfo("CabecalhoPlanilha -> " + cabecalhoPlanilha);
				//if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("BANCO")) {
				//	nomePortador2 = "CREDISIS-PDF - " + cutString(cabecalhoPlanilha, "CONTA:", "RESPONSAVEL:");
				//}

				//2312-025305 - Tirados ":" das validacoes pq no arquivo do chamado tinha quebra de coluna entre a palavra "conta" e ":"
				if (cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("BANCO")) {
					nomePortador2 = "CREDISIS-PDF - " + cutString(cabecalhoPlanilha, "CONTA", "RESPONSAVEL").replaceAll(":", "").replaceAll("\\|", "");
				}

				// logger.logInfo("NP2  CREDISIS -> " + nomePortador2);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-CREDISIS");

				readExtratoECartao("readExtratoCredisisPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// Extrato - ITAU PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ITAU_PDF") && !arquivoCompleto.contains("CREDISAN COOPERATIVA DE CREDITO") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))) {
			// logger.logDebug("ITAU -> PDF " + line);
			/*O TIPO 002 NAO ESTA PASSANDO NESTE IF, POIS O TEXTO TIAU EMPRESA VEIO EM UMA IMAGEM NO PADRAO NOVO
			COMO ALTERNATIVA TALVEZ SEJA NECESSARIO VIR NO NOME DO ARQUIVO ITAU
			POIS A LINHA ANTERIOR VEM
			01/06/2020|PRE-VISUALIZACAO DE IMPRESSAO |  -> PRE-VISUALIZACAO DE IMPRESSAO
			ISSO NAO EH SAUDAVEL POIS EH UM TEXTO GERADO PELO BROWSER E DE NAVEGADOR PARA NAVEGADOR VAI MUDAR
			TEM QUE CHEGAR A UMA CONCESSO DE COMO VALIDAR.
			JA EXISTEM PADROES QUE SAO NECESSARIO DIZER NO NOME DO ARQUIVO QUE TIPO DE EXTRATO EH
			EX: CEF_EXCEL.*/
			//#2306-006237
			// if ((nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) &&
			//     memFile.getLines().toString().toUpperCase().contains("POSICAO DA CONTA CORRENTE -") &&
			//     memFile.getLines().toString().toUpperCase().contains("ITAU") &&
			//  nomePortador2.equals("")) {
			//  logger.logInfo("ITAU PDF 1");
			//  JSONObject jDados = new JSONObject();
			//  nomePortador2 =  memFile.getStringFieldRemoveEspCharsUpper(1) + " " + memFile.getStringFieldRemoveEspCharsUpper(3);
			//  jDados.put("CODEMPRESA", codEmpresa);
			//  jDados.put("NOMEARQUIVO", nomeArquivo);
			//  jDados.put("TIPOPLANILHA", "EXTRATO-ITAU");
			//  jDados.put("TIPO", "004");
			//  jDados.put("nomePortador2", nomePortador2);

			//@sergio e Nicholas referente ao atendimento 2404-034759
			if (arquivoCompleto.contains("AGENCIA") && arquivoCompleto.contains("CONTA CORRENTE") &&
					arquivoCompleto.contains("UTILIZADO") && arquivoCompleto.contains("INFORMACOES E CANCELAMENTOS") &&
					arquivoCompleto.contains("MULTILIMITE") && arquivoCompleto.contains("CONTRATADO") &&
					arquivoCompleto.contains("CAPITAIS E REGIOES METROPOLITANAS") &&
					nomePortador2.equals("") && arquivoCompleto.contains("ITAU.COM.BR")) {

				JSONObject jDados = new JSONObject();

				nomePortador2 = cutString(arquivoCompleto, "CONTA CORRENTE", "SALDO");
				nomePortador2 = "ITAU-PDF-" + cutString(nomePortador2, nomePortador2.lastIndexOf("|"), "");

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ITAU");
				jDados.put("TP-ITAU", "002");

				readExtratoECartao("readExtratoItauPdf2", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if ((cabecalhoPlanilha.contains("POSICAO DA CONTA CORRENTE -") && arquivoCompleto.toUpperCase().contains("ITAU")) ||
					(cabecalhoPlanilha.contains("LOGOTIPO ITAU") && cabecalhoPlanilha.contains("LANCAMENTO")) ||
					(cabecalhoPlanilha.contains("SALDO RESUMIDO") && cabecalhoPlanilha.contains("BANCO ITAU S/A")) &&
							nomePortador2.equals("") || (cabecalhoPlanilha.contains("EXTRATO CONTA CORRENTE") &&
					cabecalhoPlanilha.contains("PERIODO DE VISUALIZACAO: MES COMPLETO")) ||
					(cabecalhoPlanilha.contains("INTERNET")  && cabecalhoPlanilha.contains(".ITAU.COM.BR") && cabecalhoPlanilha.contains("AGENCIA:")
					&& cabecalhoPlanilha.contains("CONTA:"))) {
				// logger.logInfo("NOMESSPORT " +nomePortador2);
				JSONObject jDados = new JSONObject();

				if(cabecalhoPlanilha.contains("PERIODO DE VISUALIZACAO:")){
					nomePortador2 = "ITAU-PDF" + cutString(cabecalhoPlanilha, "CONTA:", "SALDO EM CONTA");

					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("TIPOPLANILHA", "EXTRATO-ITAU");
					// jDados.put("TESTE", nomePortador2);
					readExtratoECartao("readExtratoItauPdf2", memFile, nomePortador2, jDados, dbIOCont, logger);
					variaveis.put("tipoRetorno",   "break");
					return variaveis.toString();
				}

				if (cabecalhoPlanilha.contains("CONTA:")) {
					logger.logInfo("entra1");
					if (cabecalhoPlanilha.contains("AGENCIA:"))
						nomePortador2 = "ITAU-PDF - " + cutString(cabecalhoPlanilha, "AGENCIA:", "CONTA:") + " ";
					if (cabecalhoPlanilha.contains("LOGOTIPO ITAU") && cabecalhoPlanilha.contains("LANCAMENTOS")) {
						nomePortador2 += cutString(cabecalhoPlanilha, "CONTA:", "LANCAMENTOS");
						jDados.put("TIPO", "005");
					}
					else if (cabecalhoPlanilha.contains("POSICAO DA")) {
						nomePortador2 += cutString(cabecalhoPlanilha, "CONTA:", "POSICAO DA");
						jDados.put("TIPO", "004");
					}
					else if(cabecalhoPlanilha.contains("BANCO ITAU S/A")){
						nomePortador2 += cutString(cabecalhoPlanilha, "CONTA:", "SALDO");
						jDados.put("TIPO", "004");
					}

					if(cabecalhoPlanilha.contains("NOME: AGENCIA:")){
						logger.logInfo("linea2 -> " + line);
						//nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(3);
						nomePortador2 = cutString(line, "CONTA:");
						nomePortador2 = nomePortador2.trim().replaceAll(";", "");
						jDados.put("TIPO", "006");
					}

				}


				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ITAU");
				jDados.put("nomePortador2", nomePortador2);
				logger.logInfo("Itau1");
				readExtratoECartao("readExtratoItauPdfInterno", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}


			//2312-025116 By Leal
			if (((line.contains("ITAU") && line.contains("EMPRESA")) || (line.contains("AGENCIA/CONTA:") && line.contains("NOME:") &&
					arquivoCompleto.contains("HORARIO:"))) && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")) && nomePortador2.equals("")) {
				// if (line.contains("ITAU") && line.contains("EMPRESA") && nomePortador2.equals("")) {
				nomePortador2 = "ITAU-PDF";
				//logger.logInfo("ITAU PDF 2");
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			if (memFile.getFieldsSize() > 1 &&
					memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1).contains("CONTA") && !cabecalhoPlanilha.contains("SICOOB") &&
					memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1).contains("CORRENTE") &&
					!memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-2).contains("TIPO") && (!memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1).contains("EXTRATO DE") || memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-2).contains("CONTA")) &&
					memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-2).contains("AGENCIA") &&
					nomePortador2.equals("") /*&&
				nomeArquivo.toUpperCase().contains(".PDF")*/) {
				nomePortador2 = "ITAU-PDF-PROXIMO";
				logger.logInfo("ITAU PDF 3 -> "+nomePortador2+" - LIN -> "+line);
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}
			if (memFile.getFieldsSize() > 0 && nomePortador2.contains("ITAU-PDF") && cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("DATA")) {
				JSONObject jDados = new JSONObject();
				// nomePortador2 += " - " + cutString(memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1), ": ");
				nomePortador2 += " - " + cutString(cabecalhoPlanilha, "CONTA:", "DATA"); //2307-010512
				//logger.logInfo("ITAU PDF 4");
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ITAU");
				jDados.put("TIPO", "001");
				// jDados.put("TESTE", nomePortador2);
				logger.logInfo("Itau2");
				readExtratoECartao("readExtratoItauPdfInterno", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			if (memFile.getFieldsSize() > 0 && nomePortador2.contains("ITAU-PDF") && nomePortador2.contains("PROXIMO")) {
				JSONObject jDados = new JSONObject();
				/*if (cabecalhoPlanilha.contains("SALDO DISPONIVEL EM CONTA")) {
					nomePortador2 = cutString(cabecalhoPlanilha);
				}*/

				nomePortador2 =  nomePortador2.replaceAll("-PROXIMO", "") + " - " + cutString(memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1), " ");
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ITAU");
				jDados.put("TIPO", "002");

				if (cabecalhoPlanilha.contains("SALDO DISPONIVEL EM CONTA")) {
					jDados.put("TIPO", "003");
					jDados.put("LINHA", line);
				}
				if (cabecalhoPlanilha.contains("CONTA CORRENTE")) {
					nomePortador2 = cutString(cabecalhoPlanilha, "CORRENTE ");
					nomePortador2 = "ITAU-PDF - " + cutString(nomePortador2, 0, ";");
				}


				// jDados.put("TESTE", nomePortador2);

				//logger.logInfo("ITAU PDF 5 -> "+nomePortador2+" - LIN -> "+line);
				if ((jDados.optString("TIPO").equals("002") && nomeArquivo.toUpperCase().contains("ANCORA")) || !jDados.optString("TIPO").equals("002")) {
					logger.logInfo("Itau3");
					readExtratoECartao("readExtratoItauPdfInterno", memFile, nomePortador2, jDados, dbIOCont, logger);
				}
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			//2311-023699 - Padrao 6
			if(cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("CONTA") &&
					cabecalhoPlanilha.contains("NOME") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("HISTORICO") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).contains("LANCAMENTOS") && memFile.getStringFieldRemoveEspCharsUpper(2).contains("ORIG") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).contains("VALOR") && cabecalhoPlanilha.contains("SALDO")){

				String agenciaAux = cutString(cabecalhoPlanilha.replaceAll(";;;;", "").replaceAll(";", "|"), "NOME", "|").replaceAll(":", "").trim();
				String contaAux = cutString(cabecalhoPlanilha.replaceAll(";;;;", "").replaceAll(";", "|"), "NOME", "DATA");
				contaAux = cutString(contaAux, "|");
				contaAux = cutString(contaAux, 0, "|");

				nomePortador2 = "ITAU-PDF - " + agenciaAux + " " + contaAux;
				anoData = cutString(cabecalhoPlanilha, cabecalhoPlanilha.indexOf("/20")+1, cabecalhoPlanilha.indexOf("/20")+5);

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ITAU");
				jDados.put("ANODATA", anoData);

				readExtratoECartao("readExtratoItauPdf3", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			//2401-027728
			if(cabecalhoPlanilha.contains("NOME") && memFile.getStringFieldRemoveEspCharsUpper(0).startsWith("AG") &&
					memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-2).contains("CON") && arquivoCompleto.contains("ITAU") &&
					memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize()-1).contains("-") &&
					nomePortador2.equals("") && !cabecalhoPlanilha.contains("SICOOB")){

				nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize() - 1).replaceAll("\\|", "");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-ITAU");
				jDados.put("TIPO", "999");
				logger.logInfo("Itau4");
				readExtratoECartao("readExtratoItauPdfInterno", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Linker_PDF")) {
			if (cabecalhoPlanilha.contains("TOTAL ENTRADAS") && cabecalhoPlanilha.contains("EXTRATO CONTA LINKER")
					&& cabecalhoPlanilha.contains("RAZAO SOCIAL:")) {
				nomePortador = cutString(cabecalhoPlanilha, "CONTA:", "EXTRATO");
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				readExtratoECartao("readExtratoLinkerPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - EFI PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Efi_PDF")) {
			if (cabecalhoPlanilha.contains("EFI S.A.") && cabecalhoPlanilha.contains("TIPO DE REGISTRO")
					&& cabecalhoPlanilha.contains("EXTRATO FINANCEIRO") && cabecalhoPlanilha.contains("FILTROS DO")) {
				nomePortador = cutString(cabecalhoPlanilha, "CONTA: ", "FILTROS DO");
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				readExtratoECartao("readExtratoEfiPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - CRESOL PDF //////////////////////////////////////////////////////////////////
		/*if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Cresol_PDF") && (nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA"))){
			String tipoExtrato = "";
			JSONObject jDados = new JSONObject();
			if(cabecalhoPlanilha.toUpperCase().contains("CRESOL")){
				tipoPlanilha = "EXTRATO-CRESOL-PDF";

				tipoExtrato = "001";
				if (line.contains("EXTRATO") && line.contains("CONTA") && line.contains("CORRENTE")) {
					variaveis.put("tipoRetorno", "continue");
					return variaveis.toString();
				}

				if (line.contains("AGENCIA:") && !line.contains("CONTA:")) {
					variaveis.put("nomePortador2", memFile.getStringFieldRemoveEspCharsUpper(1));
					variaveis.put("tipoRetorno", "continue");

					return variaveis.toString();
				}

				if(line.contains("CONTA:")){
					nomePortador = nomePortador2 + " " + memFile.getStringFieldRemoveEspCharsUpper(1);
				}

				if (line.contains("AGENCIA:") && line.contains("CONTA:")) {
					memFile.setFieldSeparator("\\;");
					nomePortador = cutString(line, ";").replaceAll(";", "");
				}
			}
			if(arquivoCompleto.contains("CONSULTA POSICAO CONSOLIDADA") && arquivoCompleto.contains("SALDO EM CONTA") && arquivoCompleto.contains("LIMITE DE") && arquivoCompleto.contains("LANCAMENTOS")&& arquivoCompleto.contains("AGENCIA") && arquivoCompleto.contains("CONTA")){
				tipoExtrato = "002";
				if (line.contains("AGENCIA") && line.contains("CONTA")) {
					nomePortador = "CRESOL - " + cutString(line, "CONTA", line.length());
				}
			}

			if(nomePortador.contains("CRESOL")){
				jDados.put("TIPOEXTRATO", tipoExtrato);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoCresolPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
			}
			return variaveis.toString();
		}*/
		//#2308-013415
		//Alteracao no runExtratoseCartoes em CresolPDF, pegando portador sem utilizar line e memFile, retorno apenas com break,
		//continue excluido. Validação utilizando cabecalhoPlanilha. Adicionado ao jDados um TIPOEXTRATO, onde diferencia-se entre 001 e 002
		//por outra validacao.
		////// Extrato - CRESOL 1 E 2 PDF ///////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Cresol_PDF")) {

			String tipoExtrato = "";

			if (cabecalhoPlanilha.contains("CRESOL") && (cabecalhoPlanilha.contains("SEGUNDO TITULAR") || cabecalhoPlanilha.contains("SEGUNDO|TITULAR")) &&
					(cabecalhoPlanilha.contains("CONTA INTEGRACAO") || cabecalhoPlanilha.contains("CONTA|INTEGRACAO"))
			){

				tipoExtrato = "001";
				nomePortador = "CRESOL - " + cutString(cabecalhoPlanilha, "AGENCIA:", cabecalhoPlanilha.indexOf("AGENCIA:")+18).replaceAll(" ", "");
				nomePortador += " " + cutString(cabecalhoPlanilha, "CONTA:", cabecalhoPlanilha.indexOf("CONTA:")+15);
				// logger.logInfo("NOME PORTADOR DE CRESOL PADRAO 1 -> "+ nomePortador);
			}
			if (arquivoCompleto.contains("CONSULTA POSICAO CONSOLIDADA") && cabecalhoPlanilha.contains("SALDO EM CONTA") &&
					cabecalhoPlanilha.contains("LIMITE DE") && cabecalhoPlanilha.contains("LANCAMENTOS") && cabecalhoPlanilha.contains("AGENCIA")){

				tipoExtrato = "002";
				nomePortador = " CRESOL - " + cutString(cabecalhoPlanilha, "CONTA", cabecalhoPlanilha.indexOf("SALDO EM CONTA"));
				if(line.contains("SALDO DO DIA")){
					String anoAux = cutString(line, line.lastIndexOf("/")+1, line.lastIndexOf("/")+5);
					nomePortador = anoAux+ " CRESOL - " + cutString(cabecalhoPlanilha, "CONTA", cabecalhoPlanilha.indexOf("SALDO EM CONTA"));
					// logger.logInfo("Ano: "+anoAux);
				}
				// logger.logInfo("NOME PORTADOR DE CRESOL PADRAO 2 -> "+ nomePortador);
			}
			if (nomePortador.contains("CRESOL")){

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOEXTRATO", tipoExtrato);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   "EXTRATO-CRESOL-PDF");

				readExtratoECartao("readExtratoCresolPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}
		//#2309-014629
		////// EXTRATO - OMIE CASH PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_OmieCash_PDF") &&
				cabecalhoPlanilha.contains("OMIE.CASH") && cabecalhoPlanilha.contains("SITUACAO")) {

			tipoPlanilha = "EXTRATO-OMIECASH";

			if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("PERIODO DE") && cabecalhoPlanilha.contains("ATE")) {
				nomePortador2 = cutString(cabecalhoPlanilha, "CONTA:", "PERIODO DE");
				anoData = cutString(cabecalhoPlanilha, cabecalhoPlanilha.indexOf("PERIODO DE")+17, "ATE");
			}

			JSONObject jDados = new JSONObject();
			jDados.put("TIPOPLANILHA", tipoPlanilha);
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);
			jDados.put("ANODATA", anoData);
			jDados.put("LINE", line);

			readExtratoECartao("readExtratoOmieCashPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		////// EXTRATO - TARGET PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Target_PDF")){
			if(line.contains("TARGET BANK") && line.contains("BANCO")){

				tipoPlanilha = "EXTRATO-TARGET";
				JSONObject jDados = new JSONObject();
				jDados.put("TIPOPLANILHA", tipoPlanilha);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);

				readExtratoECartao("readExtratoTargetPDF", memFile, "", jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// COMPROVANTE DE PAGTO SICOOB PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Sicoob_Comprovantes_PDF")){
			if(line.contains("SICOOB") && line.contains("COOPERATIVAS") &&
					arquivoCompleto.contains("COMPROVANTE") && arquivoCompleto.contains("LINHA DIGITAVEL") &&
					memFile.getFieldsSize() == 1){

				tipoPlanilha = "SICOOB COMPROVANTES";
				JSONObject jDados = new JSONObject();
				jDados.put("TIPOPLANILHA", tipoPlanilha);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);

				mapaVariavel = readExtratoECartao("readSicoobComprovantesPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// ERP FOLHA DOMINIO PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("ERP_FOLHADOMINIO_LELIS")){
			if(line.contains("FOLHA DE PAGAMENTO") && memFile.getFieldsSize() == 1 && arquivoCompleto.contains("R E S U M O")){
				JSONObject jDados = new JSONObject();

				// logger.logInfo("FOLHA DOMINIO");
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FOLHA-DOMINIO");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("LINE",            line);
				// jDados.put("TESTE", nomePortador2);
				mapaVariavel = readExtratoECartao("readErpFolhaDominio", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// FATURA CARTAO CREDITO BRADESCO PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("FaturaCartaoCredito_Bradesco_PDF")){
			if(cabecalhoPlanilha.contains("FATURA") && cabecalhoPlanilha.contains("DEBITO") && arquivoCompleto.contains("NUMERO DO CARTAO") &&
					arquivoCompleto.contains("BRADESCO") && arquivoCompleto.contains("TAXAS MENSAIS")){

				nomePortador = cutString(cabecalhoPlanilha, "DEBITO:", "SITUACAO").replaceAll("|", "").replaceAll(";", "");

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FATURACARTAOCREDITOBRADESCO");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFaturaCartaoCredito_BradescoPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		//Esse extrato e para rodar apenas pelo antigo conversor, pois o novo joga algumas informacoes dos lancamentos no lugar errado
		//Como misturar o primeiro lancamento com a linha de cima ou jogar a quebra de linha de um lancamentos no comeco de proximo
		////// FATURA CARTAO CREDITO BANRISUL PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("FaturaCartaoCredito_Banrisul_PDF")){
			if(cabecalhoPlanilha.contains("FATURA") && cabecalhoPlanilha.contains("CARTAO") && arquivoCompleto.contains("HISTORICO") &&
					arquivoCompleto.contains("SAC BANRISUL") && arquivoCompleto.contains("TRANSACOES")){

				nomePortador = "BANRISUL";

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("TIPOPLANILHA", "FATURACARTAOCREDITOBANRISUL");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador);

				mapaVariavel = readExtratoECartao("readFaturaCartaoCredito_BanrisulPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		//2312-025268
		////// EXTRATO - SULCREDI PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sulcredi_PDF")) {
			if (cabecalhoPlanilha.contains("SULCREDI") && cabecalhoPlanilha.contains("REFERENCIA")
					&& cabecalhoPlanilha.contains("CLIENTE:") && arquivoCompleto.contains("OUVIDORIA:")) {

				nomePortador = cutString(cabecalhoPlanilha, "AGENCIA:", "CONTA:").replaceAll(" -", "").trim() + " - " + cutString(cabecalhoPlanilha, "CONTA:", "LANCAMENTOS").trim();

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				readExtratoECartao("readExtratoSulcrediPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// FATURA CARTAO CREDITO SICOOB PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("FaturaCartaoCredito_Sicoob_PDF")){
			if(cabecalhoPlanilha.contains("FATURA") && cabecalhoPlanilha.contains("CARTAO") && cabecalhoPlanilha.contains("CREDITO") &&
					cabecalhoPlanilha.contains("SICOOB") && cabecalhoPlanilha.contains("CONTA") && arquivoCompleto.contains("SICOOBCARD")){

				nomePortador = cutString(cabecalhoPlanilha, " CARTAO:", "FATURA").trim();

				if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("FATURA DE")){
					anoData = cutString(memFile.getStringFieldRemoveEspCharsUpper(1), memFile.getStringFieldRemoveEspCharsUpper(1).lastIndexOf("/")).trim();
				}

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FATURACARTAOCREDITOSICOOB");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("ANODATA", anoData);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFaturaCartaoCredito_SicoobPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// FATURA CARTAO CREDITO BANCO DO BRASIL PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("FaturaCartaoCredito_BB_PDF")){
			if(arquivoCompleto.contains("BANCO DO BRASIL") && cabecalhoPlanilha.contains("CARTAO:") &&
					arquivoCompleto.contains("BB.COM.BR") && arquivoCompleto.contains("DETALHAMENTO DA SUA FATURA")){
				JSONObject jDados = new JSONObject();

				if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("CARTAO:")) nomePortador = memFile.getStringFieldRemoveEspCharsUpper(1);

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FATURACARTAOCREDITOBANCODOBRASIL");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFaturaCartaoCredito_BBPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}
		//2312-024960
		//////UNICREDI FRANCESINHA PDF ///////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaUnicredi_PDF")) {
			if(cabecalhoPlanilha.contains("RELATORIO DE TITULOS") && cabecalhoPlanilha.contains("CARTORIO") && cabecalhoPlanilha.contains("NO DOCUMENTO") &&
					cabecalhoPlanilha.contains("BENEFICIARIO:") && cabecalhoPlanilha.contains("TIPO INCLUSAO") && cabecalhoPlanilha.contains("BANCO/AGENCIA/CONTA")){

				nomePortador = cutString(cabecalhoPlanilha, "CONTA:", "QUEBRA:");

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   "UNICREDI-FRANCESINHA");
				jDados.put("LINHA",   line);

				mapaVariavel = readExtratoECartao("readFrancesinhaUnicrediPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Francesinha CRESOL PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaCresol_PDF")) {
			if (arquivoCompleto.contains("CARTEIRA DE COBRANCA") && arquivoCompleto.contains("STATUS") && arquivoCompleto.contains("LIQUIDADO")){

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "CRESOL-FRANCESINHA");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFrancesinhaCresolPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SQUID PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Squid_PDF") && nomeArquivo.toUpperCase().contains("SQUID")) {
			if(cabecalhoPlanilha.contains("DATA") && cabecalhoPlanilha.contains("HISTORICO") && cabecalhoPlanilha.contains("CREDITO")
					&& cabecalhoPlanilha.contains("DEBITO") && cabecalhoPlanilha.contains("SALDO")){

				nomePortador2 = " AGENCIA/CONTA " + cutString(cabecalhoPlanilha, "AGENCIA", "EXTRATO DA CONTA").replaceAll("[a-zA-z]","").replaceAll("  ","");

				logger.logInfo("Nome Portador == " + nomePortador2);

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "EXTRATO-SQUID-PDF");

				readExtratoECartao("readExtratoSquidPDF", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO BANCO AILOS-CIVIA PDF /////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_AilosCivia_PDF")) {

			if(arquivoCompleto.contains("SAC - 0800 647 2200") && arquivoCompleto.contains("OUVIDORIA - 0800 644 1100 ")){

				// logger.logInfo("Entra na validacao do Ailos Civia PDF");

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", tipoPlanilha);

				readExtratoECartao("readExtratoAilosCiviaPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();

			}



		}

		////// EXTRATO BANCO SICOOB CONTA-CAPITAL PDF /////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_SicoobCapital_PDF")) {

			if(arquivoCompleto.contains("EXTRATO CONTA CAPITAL") && arquivoCompleto.contains("OUVIDORIA SICOOB: 08007250996") && arquivoCompleto.contains("SICOOB - SISTEMA DE COOPERATIVAS DE CREDITO DO BRASIL")){

				// logger.logInfo("Entra na validacao do Sicoob Conta Capital PDF");

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", tipoPlanilha);

				readExtratoECartao("readExtratoSicoobCapitalPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();

			}



		}

		////// EXTRATO BANCO MERCANTIL PDF /////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Mercantil_PDF")) {
			if(arquivoCompleto.contains("BANCOMERCANTIL.COM.BR") && arquivoCompleto.contains("FACEBOOK.COM/MEUMERCANTIL") && arquivoCompleto.contains("TWITTER.COM/MEUMERCANTIL") && line.contains("EXTRATO DE")){
				// logger.logInfo("Entra na validacao do Banco Mercantil PDF");
				String aninhoDatinha = "";

				aninhoDatinha = cutString(memFile.getStringFieldRemoveEspCharsUpper(0),"/");


				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", tipoPlanilha);
				jDados.put("ANODATA", aninhoDatinha);

				readExtratoECartao("readExtratoMercantilPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		////// EXTRATO POUPE CREDI PDF /////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Poupecredi_PDF") && arquivoCompleto.contains("DATA|CODIGO|DESCRICAO|VALOR|SALDO") && nomeArquivo.toUpperCase().contains("POUPECREDI")) {

			// logger.logInfo("Entra na validacao do Poupe Credi PDF");

			JSONObject jDados = new JSONObject();
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA", nomeEmpresa);
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo.toUpperCase());
			jDados.put("TIPOPLANILHA", "EXTRATO POUPECREDI PDF");

			readExtratoECartao("readExtratoPoupeCrediPDF", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		////// EXTRATO - BMG PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BMG_PDF")) {
			if (arquivoCompleto.contains("(	DISPONIVEL	+	VINCULADO	+	BLOQUEADO") && arquivoCompleto.contains("SALDO	DISPONIVEL	(EM") && arquivoCompleto.contains("SALDO	TOTAL	(EM")){
				//logger.logInfo("Entra na validacao do BMG Pdf");
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				readExtratoECartao("readExtratoBMGPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_PagPixBank_PDF") &&
				arquivoCompleto.contains("EXTRATO - PAGPIXBANK") &&
				arquivoCompleto.contains("DESCRICAO") &&
				arquivoCompleto.contains("PAGADOR") &&
				arquivoCompleto.contains("REGISTRO") &&
				arquivoCompleto.contains("CREDITO") &&
				arquivoCompleto.contains("DEBITO") ) {

			// logger.logInfo("Entra na validacao do PagPixBank Pdf");

			tipoPlanilha = "EXTRATO-PAGPIXBANK";
			JSONObject jDados = new JSONObject();

			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);
			jDados.put("LINE",   		 line);

			readExtratoECartao("readExtratoPagPixBankPDF", memFile, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		////// EXTRATO INFINITEPAY PDF /////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Infinitepay_PDF")){

			if(arquivoCompleto.contains("INFINITEPAY") && arquivoCompleto.contains("AJUDA@INFINITEPAY.IO.") && !arquivoCompleto.contains("RELATORIO DE VENDAS")){
				// logger.logInfo("Entra na validacao do Infinite Pay PDF");

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo.toUpperCase());
				jDados.put("TIPOPLANILHA", tipoPlanilha);

				readExtratoECartao("readExtratoInfinitePayPDF", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}


		}

		////// EXTRATO BANCO BK BANK PDF /////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BKBank_PDF")){

			if (arquivoCompleto.contains("EXTRATO") && arquivoCompleto.contains("WWW.IB.BKBANK.COM.BR")) {

				// logger.logInfo("Entra na validacao do BK BANK Pdf");
				tipoPlanilha = "EXTRATO-BKBANK";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoBKBankPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		////// EXTRATO - NEXT PDF //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Next_PDF") && arquivoCompleto.contains("NEXT (237 - BANCO BRADESCO S.A.)")
				&& arquivoCompleto.contains("SE NAO FICAR SATISFEITO COM A SOLUCAO APRESENTADA, CONTATE A OUVIDORIA") && arquivoCompleto.contains("CONSULTAS, INFORMACOES E SERVICOS TRANSACIONAIS")
				&& arquivoCompleto.contains("SAC NEXT")){

			// logger.logInfo("ENTROU NEXT PDF");
			JSONObject jDados = new JSONObject();
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);
			jDados.put("LINE",   		 line);

			readExtratoECartao("readExtratoNextPDF", memFile, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();

		}

		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Credisan_PDF") && arquivoCompleto.contains("CREDISAN COOPERATIVA DE CREDITO")
				&& arquivoCompleto.contains("EXTRATO PARA SIMPLES CONFERENCIA")){

			JSONObject jDados = new JSONObject();
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);

			readExtratoECartao("readExtratoCredisanPDF", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Banrisul_PDF")){
			if(arquivoCompleto.contains("BANCO DO ESTADO DO RIO GRANDE DO SUL")
					&& arquivoCompleto.contains("OPERACOES PIX") && arquivoCompleto.contains("BANRISUL.COM.BR")){

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoBanrisulPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

			if (cabecalhoPlanilha.contains("CONSULTA OPERACOES / EMITE RECIBOS") && cabecalhoPlanilha.contains("BANRISUL")
					&& cabecalhoPlanilha.contains("NSU") && cabecalhoPlanilha.contains("SITUACAO")){

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoBanrisul2PDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();

			}
		}

		////// EXTRATO - SAFRA FRANCESINHA PDF //////////////////////////////////////////////////////////////////
		////// EXTRATO - SAFRA FRANCESINHA PDF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaSafra_PDF") && ((nomeArquivo.toUpperCase().contains("PDF") || nomeArquivo.toUpperCase().contains("ANCORA")))) {

			if (arquivoCompleto.contains("BANCO SAFRA S/A") && arquivoCompleto.contains("0800 770 1236")
					&& arquivoCompleto.contains("ATENDIMENTO PERSONALIZADO") && arquivoCompleto.contains("CENTRAL DE SUPORTE A PESSOA JURIDICA")){

				// logger.logInfo("Entra na validacao do SAFRA Francesinha Pdf");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa).put("NOMEARQUIVO", nomeArquivo).put("TIPOLANCAMENTO", tipoLancamento)
						.put("TIPOPLANILHA", tipoPlanilha).put("NOMEEMPRESA", nomeEmpresa);

				mapaVariavel = readExtratoECartao("readFrancesinhaSafraPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}
		//EXTRATO CREHNOR
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Crehnor_PDF") &&
				arquivoCompleto.contains("OUVIDORIA: 0800 591 5120") &&
				arquivoCompleto.contains("COOPERATIVA DE CREDITO CREHNOR") ) {

			JSONObject jDados = new JSONObject();
			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA", tipoPlanilha);


			readExtratoECartao("readExtratoCrehnorPDF", memFile, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno",  "break");
			return variaveis.toString();
		}

		if ( roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_NBC_PDF") ) {
			if(	arquivoCompleto.contains("BLOQUEIO COMPE NAC.:") &&
					arquivoCompleto.contains("BLOQUEIO JUDICIAL:") &&
					arquivoCompleto.contains("BLOQ. ADMINISTRATIVO:") &&
					arquivoCompleto.contains("FONE OUVIDORIA:") &&
					arquivoCompleto.contains("CONTA:") &&
					arquivoCompleto.contains("COD.CLIENTE:") &&
					arquivoCompleto.contains("ENDERECO:") &&
					arquivoCompleto.contains("EMISSAO:") &&
					arquivoCompleto.contains("ULT. MOV:") &&
					arquivoCompleto.contains("NR. DOC.") &&
					arquivoCompleto.contains("NBCBANK.COM.BR")
			){
				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);

				readExtratoECartao("readExtratoNBCPDF", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		//#2403-033430
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_PinkPay_PDF") &&
				arquivoCompleto.contains("EXTRATO CONTA DE PAGAMENTO/LANCAMENTOS") &&
				arquivoCompleto.contains("ACESSOACONTA.COM.BR") &&
				arquivoCompleto.contains("PINKPAY") ) {

			tipoPlanilha = "EXTRATO-PINKPAY";
			JSONObject jDados = new JSONObject();

			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);
			jDados.put("LINE",   		 line);

			readExtratoECartao("readExtratoPinkPayPDF", memFile, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}


		//#2403-031782
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_SicoobConvenios_PDF")){
			if(cabecalhoPlanilha.contains("SICOOB - SISTEMA DE COOPERATIVAS DE CREDITO DO BRASIL") && cabecalhoPlanilha.contains("PLATAFORMA DE SERVICOS FINANCEIROS DO SICOOB - SISBR")
					&& cabecalhoPlanilha.contains("SISBR  SISTEMA DE INFORMATICA DO SICOOB") && arquivoCompleto.contains("VALOR RECOLHIDO")){

				tipoPlanilha = "SICOOB_CONVENIOS";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoSicoobConveniosPDF", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}
	}

	if(!nomeArquivo.toUpperCase().contains("ANCORA") && !nomeArquivo.toUpperCase().contains(".PDF")){

		/*if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sicoob_Excel")){
			if(cabecalhoPlanilha.contains("HORA") && cabecalhoPlanilha.contains("DATA") &&
					cabecalhoPlanilha.contains("HISTORICO") && cabecalhoPlanilha.contains("SALDO INICIAL") && cabecalhoPlanilha.contains("SALDO")){
				// logger.logInfo("entrou");
				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoSicoobExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}*/


		// EXTRATO - EXCEL - HSBC
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_HSBC_Excel")) {
			if( cabecalhoPlanilha.contains("NOME DA CONTA") && cabecalhoPlanilha.contains("NUMERO DA CONTA") &&
					cabecalhoPlanilha.contains("NOME DO BANCO") && cabecalhoPlanilha.contains("MOEDA") &&
					cabecalhoPlanilha.contains("IBAN") && cabecalhoPlanilha.contains("STATUS DA CONTA") &&
					cabecalhoPlanilha.contains("TIPO DE CONTA") && cabecalhoPlanilha.contains("SALDO DE FECHAMENTO") &&
					cabecalhoPlanilha.contains("LOCALIZACAO") && cabecalhoPlanilha.contains("BIC")){

				tipoPlanilha  = "EXTRATO-HSBC-EXCEL";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoHSBCExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - OTERO BANK EXCEL ////////////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_OTEROBANK_Excel")){
			if( memFile.getLines().toString().toUpperCase().contains("OTEROBANK") || memFile.getLines().toString().toUpperCase().contains("ATENDIMENTO@OTEROBANK.COM") ){

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", tipoPlanilha);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);//MemoryFile memFile, JSONObject jDados, DataBase dbIOCont, InoutLogger logger

				readExtratoECartao("readExtratoOteroBankExcel", memFile, nomePortador2, jDados, dbIOCont, logger);//nick
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Cora_Excel")) {

			if(nomeArquivo.toUpperCase().contains("EXTRATO CORA")){
				tipoPlanilha = "EXTRATO CORA";
				//logger.logInfo("caiu no extrato cora");

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("LINE",            line);


				readExtratoECartao("readExtratoCoraExcel", memFile, jDados, dbIOCont, logger);
				//logger.logInfo("caiu no read");
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}


		}
		//BTG EXCEL - 02403-030900
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BTG_Excel")) {
			if(cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("CONTA CORRENTE - PJ") &&
					cabecalhoPlanilha.contains("BANCO") && cabecalhoPlanilha.contains("EXTRATO GERADO:") &&
					cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("RAZAO SOCIAL")){

				tipoPlanilha  = "EXTRATO-BTG-EXCEL";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBTGExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BMG EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BMG_Excel")) {
			if(cabecalhoPlanilha.contains("CONTA CORRENTE") && cabecalhoPlanilha.contains("INTERNET BANKING") &&
					cabecalhoPlanilha.contains("RESUMO") && cabecalhoPlanilha.contains("PENDENTES DE DISPONIBILIDADE") &&
					cabecalhoPlanilha.contains("D/C") && cabecalhoPlanilha.contains("CLIENTE:")){

				nomePortador = cutString(cabecalhoPlanilha, "CORRENTE:", "PERIODO");
				tipoPlanilha  = "EXTRATO-BMG-EXCEL";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBMGExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - EFI EXCEL //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Efi_Excel")){
			if(nomeArquivo.toUpperCase().contains("GERENCIANET")){
				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);

				readExtratoECartao("readExtratoEfiExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// ERP FOLHA WK XLSX //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("ERP_FOLHAWK_RADAR")){
			// logger.logInfo("ENTROU FOLHA WK <> "+memFile.getLines().toString());
			if(memFile.getLines().toString().contains("F O L H A   D E  P A G A M E N T O") && memFile.getFieldsSize() == 1 && isCNPJ(line.replaceAll("[^0-9]*", ""))){
				JSONObject jDados = new JSONObject();

				// logger.logInfo("FOLHA WK");
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FOLHA-WK");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("COMPLEMENTO04", memFile.getStringFieldRemoveEspCharsUpper(0));
				jDados.put("LINE",            line);
				// jDados.put("TESTE", nomePortador2);
				mapaVariavel = readExtratoECartao("readErpFolhaWk", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// ERP DETALHAMENTO SISPAG ITAU XLSX //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("ERP_DetalhamentosSispagItau_EXCEL")){
			if(cabecalhoPlanilha.contains("DADOS DA CONTA") && cabecalhoPlanilha.contains("RESULTADO DA BUSCA")){

				if(memFile.getLines().toString().toUpperCase().contains("FAVORECIDO / BENEFICI") && memFile.getLines().toString().toUpperCase().contains("NCIA DA EMPRESA")){

					nomePortador = cutString(cabecalhoPlanilha, "AGENCIA/CONTA", "NOME DA EMPRESA").trim();
					// logger.logInfo("Nome Portador CT == " + nomePortador);
					//logger.logInfo("Arquivo Completo: " + memFile.getLines().toString().toUpperCase());


					JSONObject jDados = new JSONObject();

					//logger.logInfo("ENTROU SISPAG ITAU XLSX");
					//logger.logInfo(arquivoCompleto);

					jDados.put("CODEMPRESA", codEmpresa);
					jDados.put("NOMEARQUIVO", nomeArquivo);
					jDados.put("TIPOPLANILHA", "DETALHAMENTOMOVIMENTOSISPAGITAU");
					jDados.put("NOMEEMPRESA", nomeEmpresa);
					jDados.put("TIPOLANCAMENTO", tipoLancamento);
					jDados.put("NOMEPORTADOR", nomePortador);
					jDados.put("LINE",            line);
					mapaVariavel = readExtratoECartao("readErpDetalhamentoSispagItau", memFile, jDados, mapaVariavel, logger);
					variaveis.put("tipoRetorno",   "break");
					return variaveis.toString();

				}
			}
		}

		////// Extrato - GRAFENO EXCEL///////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Grafeno_Excel") &&
				cabecalhoPlanilha.contains("DATA_DA_OCORRENCIA") && cabecalhoPlanilha.contains("CNPJ") && cabecalhoPlanilha.contains("RAZAO SOCIAL") &&
				cabecalhoPlanilha.contains("SALDO FINAL") && cabecalhoPlanilha.contains("PERIODO:")) {

			nomePortador = cutString(cabecalhoPlanilha, "CONTA", "PERIODO").replaceAll(";", "").trim();

			JSONObject jDados = new JSONObject();
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);

			readExtratoECartao("readExtratoGrafenoExcel", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		//#2312-024479 By Leal

		////// EXTRATO - HDT EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_HDT_Excel")) {
			if(cabecalhoPlanilha.contains("EXTRATO DA CONTA") && cabecalhoPlanilha.contains("NOME DO CLIENTE") &&
					cabecalhoPlanilha.contains("FILTROS UTILIZADOS NO RELATORIO") &&
					cabecalhoPlanilha.contains("CNJP:") ||
					cabecalhoPlanilha.contains("CNPJ:") &&
							cabecalhoPlanilha.contains("COD.")){

				nomePortador = cutString(cabecalhoPlanilha, "CONTA", "DATA INICIAL").trim();
				tipoPlanilha  = "EXTRATO-HDT-EXCEL";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoHDTExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - ITAU //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Itau_Excel") && !extensao.contains(".PDF")) {
			// logger.logDebug("Line ITAU -> "+line);
			// logger.logDebug("cc ITAU -> "+cabecalhoPlanilha);

			//#2309-015221. Novo layout
			if ((memFile.getStringFieldRemoveEspCharsUpper(0).contains("NOME:") && memFile.getStringFieldRemoveEspCharsUpper(4).contains("AGENCIA/CONTA:") && !memFile.getStringFieldRemoveEspCharsUpper(5).equals("")) ||
					(memFile.getStringFieldRemoveEspCharsUpper(1).contains("NOME:") && memFile.getStringFieldRemoveEspCharsUpper(5).contains("AGENCIA/CONTA:") &&
							memFile.getStringFieldRemoveEspCharsUpper(0).equals("") && !memFile.getStringFieldRemoveEspCharsUpper(6).equals("")))  {
				nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(5);
				if(memFile.getStringFieldRemoveEspCharsUpper(0).equals("")){
					nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(6);
				}
				tipoPlanilha = "EXTRATO-ITAU";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				readExtratoECartao("readExtratoItauDefault", memFile, anoData, "TIPO04", nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if (memFile.getStringFieldRemoveEspCharsUpper(5).contains("CONTA:") && !memFile.getStringFieldRemoveEspCharsUpper(5).contains("CORRENTE")) {
				// logger.logDebug("T1");
				nomePortador  = "ITAU " + memFile.getStringFieldRemoveEspCharsUpper(5) +  memFile.getStringFieldRemoveEspCharsUpper(6);
				nomePortador2 = "ITAU " + memFile.getStringFieldRemoveEspCharsUpper(5) +  memFile.getStringFieldRemoveEspCharsUpper(6);
				complemento01 = nomePortador2;
				// logger.logDebug("CAIU EM CONTINUE7 " + line);
				variaveis.put("nomePortador",  nomePortador);
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("complemento01", complemento01);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			if (memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA:") && cabecalhoPlanilha.contains("AGENCIA:")  && !memFile.getStringFieldRemoveEspCharsUpper(1).equals("")) { // Soares ---> foi removido da validacao (&& !line.contains("|")).
				// logger.logDebug("T2");
				nomePortador  = "ITAU " + memFile.getStringFieldRemoveEspCharsUpper(0) +  memFile.getStringFieldRemoveEspCharsUpper(1);
				nomePortador2 = nomePortador;
				complemento01 = nomePortador2;
				// logger.logDebug("CAIU EM CONTINUE8 " + line);
				variaveis.put("nomePortador",  nomePortador);
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("complemento01", complemento01);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			if (memFile.getStringFieldRemoveEspCharsUpper(1).contains("EXTRATO") && !nomePortador2.equals("")) {
				// logger.logDebug("T3");
				anoData = memFile.getStringFieldRemoveEspCharsUpper(6);
				if (anoData.trim().equals("")) anoData = memFile.getStringFieldRemoveEspCharsUpper(1);
				if (anoData.contains("/")) anoData = anoData.substring(anoData.lastIndexOf("/")+1).trim();
				if (!anoData.equals("") && anoData.contains("-")) anoData = anoData.substring(0, anoData.indexOf("-")).trim();
				if (anoData.equals("")) anoData = memFile.getStringFieldRemoveEspCharsUpper(1).substring(memFile.getStringFieldRemoveEspCharsUpper(1).lastIndexOf("/")).trim();
				// logger.logDebug("CAIU EM CONTINUE9 " + line);
				variaveis.put("anoData",       anoData);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			if (memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").replace("\"","").replace("'","").contains("AMENTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(5).replaceAll("\"","").contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(6).replaceAll("\"","").contains("SALDO")) {
				// logger.logDebug("P1 - "+nomePortador2+" - "+nomePortador);
				tipoPlanilha = "EXTRATO-ITAU";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoItauDefault", memFile, anoData, "TIPO01", nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			if (memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					(memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").replace("\"","").replace("'","").equals("LANCAMENTO") ||
							memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").replaceAll("\\?", "").replace("\"","").replace("'","").contains("LANENTO")) &&
					memFile.getStringFieldRemoveEspCharsUpper(6).replaceAll("\"","").contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(7).replaceAll("\"","").contains("SALDO")) {
				// logger.logDebug("P2 - "+nomePortador2+" - "+nomePortador);
				tipoPlanilha = "EXTRATO-ITAU";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				readExtratoECartao("readExtratoItauDefault", memFile, anoData, "TIPO02", nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("LANCAMENTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("SALDO")) {
				// logger.logDebug("P3 - "+nomePortador2+" - "+nomePortador);
				tipoPlanilha = "EXTRATO-ITAU";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				readExtratoECartao("readExtratoItauDefault", memFile, anoData, "TIPO03", nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - TARGET EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Target_Excel")) {

			if (cabecalhoPlanilha.contains("TARGET INSTITUI") && line.contains("CPF") && line.contains("CNPJ") && line.contains("EXTRAIDO POR") && memFile.getStringFieldRemoveEspCharsUpper(1).equals("")) {

				tipoPlanilha = "EXTRATO-TARGET-EXCEL";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoTargetExcel", memFile, "", jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		////// EXTRATO - CREDISAN EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Credisan_Excel")) {

			if (cabecalhoPlanilha.contains("DATA") && cabecalhoPlanilha.contains("DOC") && cabecalhoPlanilha.contains("DESCRICAO") &&
					cabecalhoPlanilha.contains("VALOR")&& cabecalhoPlanilha.contains("SALDO")) {

				tipoPlanilha = "EXTRATO-CREDISAN";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoCredisanExcel", memFile, nomePortador, jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		////// EXTRATO - MERCADO PAGO EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_MercadoPago_Excel")) {
			if (cabecalhoPlanilha.contains("DETALHE DOS MOVIMENTOS") && cabecalhoPlanilha.contains("SALDO INICIAL:") &&
					cabecalhoPlanilha.contains("SALDO FINAL:") && cabecalhoPlanilha.contains("PERIODO:")) {

				nomePortador2 = cutString(cabecalhoPlanilha, "CONTA:", "PERIODO:");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoMercadoPagoExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SICREDI FRANCESINHA EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("FrancesinhaSicredi_Excel")) {
			// logger.logInfo("TESTE SICREDI FRANCESINHA");
			if (cabecalhoPlanilha.contains("RELATORIO FINANCEIRO FRANCESINHA")
					&& cabecalhoPlanilha.contains("PAGADOR:") && !cabecalhoPlanilha.contains("EMITIDO EM")
					&& cabecalhoPlanilha.contains("CARTEIRA:") && cabecalhoPlanilha.contains("BENEFICIARIO:")){

				nomePortador2 = cutString(cabecalhoPlanilha, "CONTA:", "BENEFICIARIO");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "FRANCESINHA-SICREDI");//AGSCONTABILIDADE_MARTINI regras estavam sendo impactadas por ter EXTRATO no tipoPlanilha
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFrancesinhaSicrediExcel", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		//2311-023356
		//////BRADESCO FRANCESINHA EXCEL ///////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Francesinha_Bradesco_Excel")) {
			if(cabecalhoPlanilha.contains("EXTRATO DE MOVIMENTACAO DA CARTEIRA DE COBRANCA") && cabecalhoPlanilha.contains("ULTIM/MOVIM") &&
					cabecalhoPlanilha.contains("EMISSAO")){

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   "BRADESCO-FRANCESINHA");
				jDados.put("NOMEPORTADOR", "BRADESCO-FRANCESINHA");

				mapaVariavel = readExtratoECartao("readFrancesinha_BradescoExcel", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BB FRANCESINHA 2 EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Francesinha_BB_Excel")) {
			if (cabecalhoPlanilha.contains("NR") && cabecalhoPlanilha.contains("NOME DO PAGADOR") && cabecalhoPlanilha.contains("EMISSAO")
					&& cabecalhoPlanilha.contains("SEU NUMERO") && cabecalhoPlanilha.contains("VALOR LIQUIDACAO") && cabecalhoPlanilha.contains("TIPO LIQUIDACAO")){

				logger.logInfo ("caiu aqui na validacao");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEPORTADOR", "FRANCESINHA BANCO DO BRASIL");
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA", "BANCODOBRASIL-FRANCESINHA");
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readFrancesinha_BBExcel", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}


		////// EXTRATO - CONTA SIMPLES EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ContaSimples_Excel")) {

			if (cabecalhoPlanilha.contains("DATA") && cabecalhoPlanilha.contains("HISTORICO") && cabecalhoPlanilha.contains("CARTAO") &&
					cabecalhoPlanilha.contains("NOME DO CARTAO")&& cabecalhoPlanilha.contains("CREDITO") && cabecalhoPlanilha.contains("SITUACAO")) {

				if(line.contains("CONTA:") && nomePortador2.equals("")){
					nomePortador2 = cutString(line,"CONTA:");
					// logger.logDebug("CAIU EM CONTINUE2 " + line);
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
				}

				tipoPlanilha = "EXTRATO-CONTASIMPLES";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoContaSimplesExcel", memFile, nomePortador2, jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		////// EXTRATO - CREDISAN EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Credisan_Excel")) {

			if (cabecalhoPlanilha.contains("DATA") && cabecalhoPlanilha.contains("DOC") && cabecalhoPlanilha.contains("DESCRICAO") &&
					cabecalhoPlanilha.contains("VALOR")&& cabecalhoPlanilha.contains("SALDO")) {

				tipoPlanilha = "EXTRATO-CREDISAN";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoCredisanExcel", memFile, nomePortador, jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}


		////// EXTRATO - CONTA SIMPLES EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_ContaSimples_Excel")) {

			if (cabecalhoPlanilha.contains("DATA") && cabecalhoPlanilha.contains("HISTORICO") && cabecalhoPlanilha.contains("CARTAO") &&
					cabecalhoPlanilha.contains("NOME DO CARTAO")&& cabecalhoPlanilha.contains("CREDITO") && cabecalhoPlanilha.contains("SITUACAO")) {

				if(line.contains("CONTA:") && nomePortador2.equals("")){
					nomePortador2 = cutString(line,"CONTA:");
					// logger.logDebug("CAIU EM CONTINUE2 " + line);
					variaveis.put("nomePortador2", nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
				}

				tipoPlanilha = "EXTRATO-CONTASIMPLES";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoContaSimplesExcel", memFile, nomePortador2, jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		////// EXTRATO - FOLHA SAGE (FOLLADOR) XLS //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Folha_Sage_Excel")) {

			// CRIADO INICIALMENTE PARA SOUZA E BENATO
			if ((cabecalhoPlanilha.contains("CBO") || cabecalhoPlanilha.contains("ADMISSAO"))  &&
					cabecalhoPlanilha.contains("COMISSAO") && cabecalhoPlanilha.contains("CARGO")) {

				tipoPlanilha = "FOLHA SAGE V2";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   line);

				mapaVariavel = readExtratoECartao("readExtratoFolhaSageExcelv2", memFile, jDados, mapaVariavel, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

			if (((cabecalhoPlanilha.contains("FUNCIONARIO") || cabecalhoPlanilha.contains("EMPREGADO"))  &&
					cabecalhoPlanilha.contains("HE")  && cabecalhoPlanilha.contains("ATRASO") &&
					cabecalhoPlanilha.contains("FALTA")) && !cabecalhoPlanilha.contains("CBO")) {

				tipoPlanilha = "FOLHA SAGE V1";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   line);

				try {
					mapaVariavel = readExtratoECartao("readExtratoFolhaSageExcelv1", memFile, jDados, mapaVariavel, logger);
				} catch(Exception er) {
					logger.logDebug("### ERRO LENDO FOLHA = readExtratoFolhaSageExcel" );
				}

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}



		////// EXTRATO - UBEREATS //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Ubereats_Excel")) {
			if (line.contains("RESTAURANTE") && line.contains("PEDIDO") && line.contains("TAXA") &&
					line.contains("UBER")&& line.contains("MODO")) {

				tipoPlanilha = "CARTAO-UBEREATS";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoUbereats", memFile, jDados, mapaVariavel, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BANCONORDESTE //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BancoNordeste_Excel")) {
			if ((extensao.toUpperCase().contains(".CSV") || extensao.toUpperCase().contains(".XLSX")) && memFile.getStringFieldRemoveEspCharsUpper(3).contains("DATA") && memFile.getStringFieldRemoveEspCharsUpper(6).contains("DOCUMENTO")) {

				tipoPlanilha = "EXTRATO-BANCONORDESTE";

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBancoNordesteExcel", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BMPMONEYPLUS //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BMPMONEYPLUS_Excell")) {
			// logger.logDebug("NO BMP");
			if ((extensao.toUpperCase().contains(".CSV") || extensao.toUpperCase().contains(".XLSX")) && nomeArquivo.toUpperCase().contains("BMP") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA_DA_OCORRENCIA")) {
				// logger.logDebug("-----BMP-----");
				tipoPlanilha = "EXTRATO-BMPMONEYPLUS";

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBMPMoneyPlusExcel", memFile, "", jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BRADESCO TXT //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Bradesco_TXT") && nomeArquivo.toUpperCase().endsWith(".TXT")) {
			// Nome Portador  ->  "BRADESCO {AGENCIA} {CONTA}"
			nomePortador = "";
			JSONObject jDados = new JSONObject();
			if (line.contains("EXTRATO DE: AG") && line.contains("NCIA:") && line.contains("CONTA:")) {
				nomePortador = ("BRADESCO " + line.substring(line.indexOf("NCIA:")+5, line.indexOf("NCIA:")+11).trim() + " " + line.substring(line.indexOf("CONTA:")+6).trim()).trim();
				logger.logInfo("Bradesco txt: if 01 - "+nomePortador);
				// variaveis.put("nomePortador", nomePortador);
				// variaveis.put("tipoRetorno",   "continue");
				// return variaveis.toString();
			}
			// logger.logDebug("cabecalhoPlanilha -> " + cabecalhoPlanilha);
			if((cabecalhoPlanilha.contains("AGENCIA") || cabecalhoPlanilha.contains("AGANCIA"))&& cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("DEMONSTRATIVO") && cabecalhoPlanilha.contains("MENSAL")){
				nomePortador = ("BRADESCO " + cutString(cabecalhoPlanilha, "CIA:", " ") + " " + cutString(cabecalhoPlanilha, "CONTA:", " "));
				logger.logInfo("Bradesco txt: if 02 - "+nomePortador);
				// logger.logDebug("NOVO PADRAO BRADESCO");
			}
			if ((cabecalhoPlanilha.contains("AGENCIA") || cabecalhoPlanilha.contains("AGANCIA"))&& cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("MOVIMENTA") && cabecalhoPlanilha.contains("PER")) {
				nomePortador = ("BRADESCO " + cutString(cabecalhoPlanilha, "CIA:", " ") + " " + cutString(cabecalhoPlanilha, "CONTA:", " "));
				jDados.put("qualpadrao", "003");
				logger.logInfo("Bradesco txt: if 03 - "+nomePortador);
			}

			if(!nomePortador.equals("")){
				tipoPlanilha = "EXTRATO-BRADESCO-TXT";
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				logger.logInfo("Vai ate o read do Bradesco txt");
				readExtratoECartao("readExtratoBradescoTxt", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				logger.logInfo("Bradesco txt variaveis: "+variaveis.toString());
				return variaveis.toString();
			}

		}

		////// EXTRATO - BBM TXT //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BBM_TXT") && nomeArquivo.toUpperCase().endsWith(".TXT")) {

			if (nomeArquivo.toUpperCase().contains("EXTRATO BBM")) {
				// logger.logInfo("RUN BBM");

				nomePortador2 = "EXTRATO-BBM";
				tipoPlanilha = "EXTRATO-BBM-TXT";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBBMTxt", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}


		////// EXTRATO - AMAZONIA TXT //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Amazonia_TXT") && nomeArquivo.toUpperCase().endsWith(".TXT")) {
			// Nome Portador  ->  "BRADESCO {AGENCIA} {CONTA}"
			// logger.logDebug("NOVO PADRAO AMAZONIA");
			// nomePortador2 = "";
			if (cabecalhoPlanilha.contains("BANCO DA AMAZ") && line.startsWith("CONTA:")  && nomeArquivo.toUpperCase().contains(".TXT")) {
				// logger.logDebug("PRIMEIRO PORT");

				nomePortador2 = "BANCO DA AMAZONIA - " + line;
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			// logger.logDebug("cabecalhoPlanilha -> " + cabecalhoPlanilha);
			// logger.logDebug("LIN ->  " + line + " nomePortador -> " + nomePortador2);
			if(nomePortador2.contains("BANCO DA AMAZONIA")){
				logger.logDebug("PEGOU CONTAS AMAZONIA");
				// if (cabecalhoPlanilha.contains("CONTA:"))
				// nomePortador2 += " - " + cutString(cabecalhoPlanilha, cabecalhoPlanilha.indexOf("CONTA: "), " ");

				// logger.logDebug( " nomePortador2 -> " + nomePortador2);
				// logger.logDebug("CHAMOU O NOVO PADRAO");
				tipoPlanilha = "EXTRATO-AMAZONIA-TXT";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoAmazoniaTxt", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}


		// logger.logDebug("ANCORAZINHA " + nomeArquivo.toUpperCase());






		////// EXTRATO - CRESOL  //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Cresol_Excel") && nomeArquivo.toUpperCase().endsWith(".XLSX")) {
			if (nomeArquivo.toUpperCase().contains("CRESOL")
					&& line.contains("EXTRATO") && line.contains("CONSOLIDADO") && line.contains("DE") && line.contains("CONTA") && line.contains("CORRENTE")) {

				// logger.logDebug("ENTROU Itau Consolidado");
				tipoPlanilha = "EXTRATO-CRESOLEXCEL";

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readExtratoCresolExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}


		////// EXTRATO - BANESTE //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Banestes_Excel")) {

			if (cabecalhoPlanilha.startsWith("BANESTES") && !line.toUpperCase().trim().contains("SISTEMA DE SALDOS") && cabecalhoPlanilha.contains("EXTRATO DE CONTA CORRENTE") && nomePortador2.equals("")) {
				nomePortador2 = "BANESTES";
				// logger.logDebug("CAIU EM CONTINUE3 " + line + "|CB " + cabecalhoPlanilha);
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}

			if ((line.toUpperCase().trim().startsWith("BANESTES S/A") && line.toUpperCase().trim().contains("SISTEMA DE SALDOS") && line.toUpperCase().trim().contains("EXTRATOS")) ||
					nomePortador2.equals("BANESTES")) {

				tipoPlanilha = "EXTRATOBANESTE";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				if(nomePortador2.equals("BANESTES")){
					nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(1);
					// logger.logDebug("AGENCIA -> "+nomePortador2);
					jDados.put("AGENCIA", nomePortador2);
					if(line.contains("CONTA")){
						// logger.logDebug("CONTA CORRENTE -> "+memFile.getStringFieldRemoveEspCharsUpper(3));
						jDados.put("CONTACORRENTE", memFile.getStringFieldRemoveEspCharsUpper(3));
					}
				}

				readExtratoECartao("readExtratoBanesteDefault", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// BEN VISA //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_BenVisa_Excel") && nomeArquivo.toUpperCase().contains("BEN") && nomeArquivo.toUpperCase().contains("VISA")) {
			String lineAux = line.replaceAll("\"", "");
			if (lineAux.contains("NRO DOC") && lineAux.contains("ESTABELECIMENTO") && lineAux.contains("CNPJ") &&
					lineAux.contains("VALOR") && lineAux.contains("VENDA") && lineAux.contains("TAXAS")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readCartaoBenVisaExcel", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Extrato_Daycoval_Excel //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Daycoval_Excel")) {
			if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("AGENCIA:") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA:")){
				nomePortador2 = "EXTRATO-DAYCOVAL " + line.replaceAll("\\|" , "");
				// logger.logDebug("NP2 daycoval -> " + nomePortador2);
				// logger.logInfo("NP2 daycoval 1");
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno", "continue");
				return variaveis.toString();
			}


			if (nomePortador2.contains("EXTRATO-DAYCOVAL") && cabecalhoPlanilha.contains("DATA") 	&&
					cabecalhoPlanilha.contains("N. DOCTO") && cabecalhoPlanilha.contains("LANCAMENTO")	&&
					cabecalhoPlanilha.contains("DEBITO") && cabecalhoPlanilha.contains("CREDITO")		&&
					cabecalhoPlanilha.contains("SALDO")) {
				// logger.logInfo("NP2 daycoval 1");
				// logger.logDebug("CHAMOU O EXTRATO DAYCOVAL");
				tipoPlanilha = "EXTRATODAYCOVAL";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEPORTADOR", nomePortador2);
				jDados.put("CABECALHOPLANILHA", cabecalhoPlanilha);

				readExtratoECartao("readExtratoDaycoval", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}




		// logger.logDebug("NABB -> "+ nomeArquivo + " | " + roteiroCRM.optString("Planilhas_Padroes"));
		////// EXTRATO - BANCO DO BRASIL EXCEL //////////////////////////////////////////////////////////////////
		// logger.logInfo("Entra no run");
		if ((nomeArquivo.toUpperCase().contains(".XLSX") || nomeArquivo.toUpperCase().contains(".CSV")) && (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BB_Excel") ||
				roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Banco_Brasil_Excel")))  {
			// logger.logInfo("Entra na validacao do bb excel");

			// logger.logDebug("BB CB -> "+cabecalhoPlanilha);

			if (line.contains("EXTRATO CONTA CORRENTE") && nomePortador2.equals("")) {
				logger.logDebug("V1");
				// logger.logDebug("CAIU EM CONTINUE4 " + line);
				nomePortador2 = "BANCO-BRASIL";
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno", "continue");
				return variaveis.toString();
			}
			if (nomePortador2.contains("BANCO-BRASIL") && line.contains("NCIA") && line.contains("CONTA")) {
				logger.logDebug("V2");
				tipoPlanilha = "EXTRATO-BANCO-DO-BRASIL";
				// logger.logDebug("CAIU EM CONTINUE5 " + line);
				nomePortador2 = nomePortador2 + " - " + memFile.getStringFieldRemoveEspCharsUpper(1) + " - " + memFile.getStringFieldRemoveEspCharsUpper(memFile.getFieldsSize() - 1);
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno", "continue");
				return variaveis.toString();

			}

			if (cabecalhoPlanilha.contains("DATA") &&
					(cabecalhoPlanilha.contains("LANCAMENTO") || cabecalhoPlanilha.contains("HIST")) &&
					cabecalhoPlanilha.contains("VALOR") && /* cabecalhoPlanilha.contains("SALDO") && (pedido do Lucas)*/
					cabecalhoPlanilha.contains("BALANCETE") && cabecalhoPlanilha.contains("EXTRATO CONTA CORRENTE")) {
				// logger.logInfo("Passou BB");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBancoBrasilExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();


			}

		}

		////// EXTRATO - SQUID EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Squid_Excel")) {

			if (cabecalhoPlanilha.contains("DATAMOVIMENTO") &&
					cabecalhoPlanilha.contains("DOCUMENTOFEDERAL")  &&
					cabecalhoPlanilha.contains("NOME") && cabecalhoPlanilha.contains("DESCRICAOOPERACAO") &&
					cabecalhoPlanilha.contains("VALORMOVIMENTO") && cabecalhoPlanilha.contains("LANCAMENTO") &&
					cabecalhoPlanilha.contains("SALDODIGITO") && cabecalhoPlanilha.contains("NSU") && nomePortador2.equals("")){
				logger.logDebug("PEGOU NP SQUID");
				nomePortador2 = "BANCO SQUID";
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno", "continue");
				return variaveis.toString();
			}

			if(nomePortador2.contains("BANCO SQUID")){
				logger.logDebug("CHAMOU  SQUID");
				tipoPlanilha = "EXTRATO-SQUID";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoSquidExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SICOOB //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sicoob_Txt")) {
			if (line.startsWith("SICOOB") && nomeArquivo.toUpperCase().contains(".TXT")) {

				tipoPlanilha = "EXTRATOSICOOB";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoSicoobTxt", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Sicredi //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sicredi_TXT") && nomeArquivo.toUpperCase().contains(".TXT")) {
			logger.logInfo("LINE == "+line);
			if ((line.contains("COOP") && line.contains("CRED") || (line.contains("C.C.I.L.A") || line.contains("C.C.P.I"))) &&
					line.contains("EXTRATO") && line.contains("CONTA") && line.contains("CORRENTE")) {
				tipoPlanilha = "EXTRATOSICREDI";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				if(line.contains("C.C.P.I")) jDados.put("MutableIsCCPI", -1); // 2403-030898 - Nicholas - 12/03/2024

				readExtratoECartao("readExtratoSicrediTxt", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Topazio //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Topazio_Excel")) {
			if(line.contains("TOPAZ BANKING")) {

				tipoPlanilha = "EXTRATOTOPAZIO";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				readExtratoECartao("readExtratoTopazioExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		////// EXTRATO - Fibra //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Fibra_Excel")) {
			if(line.contains("INTERNET BANKING") && line.contains("BANCO FIBRA")) {

				tipoPlanilha = "EXTRATO-FIBRA";

				JSONObject jDados = new JSONObject();
				jDados.put("LINHA",    line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readExtratoFibraExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Banco Industrial do Brasil S/A //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Industrial_Excel")) {

			if(cabecalhoPlanilha.contains("BANCO INDUSTRIAL DO BRASIL") && cabecalhoPlanilha.contains("EXTRATO DE CONTA") && cabecalhoPlanilha.contains("MOVIMENTO")) {

				if(cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("SALDO DISPONIVEL") && cabecalhoPlanilha.contains("MOVIMENTO PARA O PERIODO")){
					nomePortador2 = cutString(cabecalhoPlanilha, "SALDO DISPONIVEL", "MOVIMENTO PARA O PERIODO");
					nomePortador2 = cutString(nomePortador2, 0, "|");
				}

				tipoPlanilha = "EXTRATO-INDUSTRIAL";

				JSONObject jDados = new JSONObject();
				jDados.put("LINHA",    line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readExtratoIndustrialExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}


		////// EXTRATO - Stone //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Stone_Excel")) {
			// logger.logDebug("Stone!!@!!!!");
			String tipoExtrato = "";
			// 2308-013001
			if(line.contains("MOVIMENTACAO") && line.contains("SALDO") && line.contains("ORIGEM") && line.contains("DESTINO") && line.contains("TIPO") && line.contains("VALOR") && line.contains("TARIFA") && line.contains("DATA")){
				tipoPlanilha = "EXTRATOSTONE";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("TIPOEXTRATO",    "001");
				readExtratoECartao("readExtratoStoneExcel", memFile, "EXTRATO CONTA DIGITAL STONE", jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

			if(line.contains("MOVIMENTACAO") && line.contains("TIPO") && line.contains("VALOR") && line.contains("TARIFA") && line.contains("DATA")) {
				nomePortador2 = "EXTRATO CONTA DIGITAL STONE";
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();

			}

			// logger.logDebug("cabecalhoPlanilha -> " + cabecalhoPlanilha);
			if(line.contains("TITULAR") && line.contains("STONE") && line.contains("DOCUMENTO") && line.contains("AGENCIA") && line.contains("CONTA")) {
				nomePortador2 = "EXTRATO CONTA DIGITAL STONE"+ "-" + cutString(line, "CONTA", line.length());
				// logger.logDebug("NP2 -> " + nomePortador2);
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			if(!cabecalhoPlanilha.contains("INSTITUICAO STONE INSTITUICAO DE PAGAMENTO")) tipoExtrato = "001";
			if(cabecalhoPlanilha.contains("INSTITUICAO STONE INSTITUICAO DE PAGAMENTO")) tipoExtrato = "002";

			// logger.logDebug("NP2 -> " + nomePortador2 + " TIPOEXTRATO -> " + tipoExtrato);
			if(nomePortador2.contains("EXTRATO") && nomePortador2.contains("STONE") && !tipoExtrato.equals("")){
				tipoPlanilha = "EXTRATOSTONE";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("TIPOEXTRATO",    tipoExtrato);

				readExtratoECartao("readExtratoStoneExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Paulista //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Paulista_Excel")) {

			if(nomeArquivo.toUpperCase().contains("EXTRATO PAULISTA")) {

				nomePortador2 = cutString(nomeArquivo.toUpperCase(), "EXTRATO PAULISTA", ".");


				tipoPlanilha = "EXTRATO-PAULISTA";

				JSONObject jDados = new JSONObject();
				jDados.put("LINHA",    line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readExtratoPaulistaExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Votorantim //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Votorantim_Excel")) {

			if(cabecalhoPlanilha.contains("CLIENTE") && cabecalhoPlanilha.contains("EXTRATO POR PERIODO") && cabecalhoPlanilha.contains("CNPJ")
					&& cabecalhoPlanilha.contains("PERIODO") && cabecalhoPlanilha.contains("CONTA CORRENTE") && cabecalhoPlanilha.contains("DATA")
					&& cabecalhoPlanilha.contains("LANCAMENTO") && cabecalhoPlanilha.contains("DOCUMENTO") && cabecalhoPlanilha.contains("VALOR")) {

				if(cabecalhoPlanilha.contains("CONTA") && cabecalhoPlanilha.contains("CORRENTE")){
					nomePortador2 = cutString(cabecalhoPlanilha, "CONTA CORRENTE", "DATA");
					nomePortador2 = cutString(nomePortador2, 0, "|");
				}

				tipoPlanilha = "EXTRATO-VOTORANTIM";

				JSONObject jDados = new JSONObject();
				jDados.put("LINHA",    line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readExtratoVotorantimExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
			if(cabecalhoPlanilha.contains("EXTRATO DE CONTA VINCULADA") && cabecalhoPlanilha.contains("O EXTRATO REFLETE") && cabecalhoPlanilha.contains("CLIENTE:")
					&& cabecalhoPlanilha.contains("CPF/CNPJ:") && cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("DATA DE EXPORTACAO")){

				if(cabecalhoPlanilha.contains("CONTA:")){
					nomePortador2 = cutString(cabecalhoPlanilha, "CONTA: ", " ");
					nomePortador2 = cutString(nomePortador2, 0, "|");
				}

				tipoPlanilha = "EXTRATO-VOTORANTIM2";

				JSONObject jDados = new JSONObject();
				jDados.put("LINHA",    line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readExtratoVotorantim2Excel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}





		////// EXTRATO - SEM PARAR //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Sem_Parar_Csv")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("LOCAL") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA LOTE") &&
					memFile.getStringFieldRemoveEspCharsUpper(8).replaceAll("\"","").contains("VALOR ACEITO") &&
					memFile.getStringFieldRemoveEspCharsUpper(9).replaceAll("\"","").contains("VALOR REPASSE")) {

				tipoPlanilha = "CARTAO-SEM PARAR";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoSemParar", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("LOCAL") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA LOTE") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").replace("\"","").replace("'","").equals("LOTE") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("ENV. ")&&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("ENV. ") &&
					memFile.getStringFieldRemoveEspCharsUpper(5).replaceAll("\"","").contains("REJ. ") &&
					memFile.getStringFieldRemoveEspCharsUpper(6).replaceAll("\"","").contains("REJ. ") &&
					memFile.getStringFieldRemoveEspCharsUpper(7).replaceAll("\"","").contains("ACEITO ") &&
					memFile.getStringFieldRemoveEspCharsUpper(8).replaceAll("\"","").contains("ACEITO ") &&
					memFile.getStringFieldRemoveEspCharsUpper(9).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA REPASSE") &&
					memFile.getStringFieldRemoveEspCharsUpper(10).replaceAll("\"","").contains("REPASSE ")){
				tipoPlanilha = "SEMPARARNOVO";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoSemParar2", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString(); // Fim  -> Captura de Dados quando Tipo Planilha -> "CARTAO SEM PARAR"
			}
		}

		////// CARTAO - GREENCARD //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_GreenCard_Excel")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("COMPRA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).contains("VENCIMENTO") && memFile.getStringFieldRemoveEspCharsUpper(2).contains("AUTORIZA") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).contains("VALOR")) {
				tipoPlanilha = "CARTAO-GREENCARD";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoGreenCard", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

		}

		////// EXTRATO - BANRISUL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Banrisul_TXT") && nomeArquivo.toUpperCase().contains(".TXT") && line.contains("B A N R I S U L")){
			nomePortador  = StringUtil.removeSpecialCharsToUC(nomeArquivo);
			if (nomePortador.contains("OTT_OUD")) {
				nomePortador = nomePortador.replaceAll("OTT_*OUD_*ID[0-9]*_*", "");
			}
			complemento01 = nomePortador;
			tipoPlanilha = "EXTRATO-BANRISUL";

			JSONObject jDados = new JSONObject();

			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);

			readExtratoECartao("readExtratoBANRISULDefault", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		////// EXTRATO - BANRISUL 2 //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Banrisul_TXT") && nomeArquivo.toUpperCase().contains(".TXT") &&
				line.contains("BANCO DO ESTADO DO RIO GRANDE DO SUL")){

			nomePortador  = StringUtil.removeSpecialCharsToUC(nomeArquivo);
			//logger.logInfo("ENTROU BANRISUL 2");
			//tipoPlanilha = "EXTRATO-BANRISUL";

			JSONObject jDados = new JSONObject();

			jDados.put("TIPO", "002");
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);

			readExtratoECartao("readExtratoBANRISULDefault", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}

		////// BOTICARIO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Boticario_Excel")) {
			if (line.contains("NSU") && line.contains("SITEF") && line.contains("ADQUIRENTE") && !line.contains("PEDIDO")) {
				tipoPlanilha = "BOTICARIO";
				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				mapaVariavel = readExtratoECartao("readBoticario", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - STONE //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Stone_Excel")) {
			if (line.contains("HORA DA VENDA") && line.contains("BANDEIRA") && line.contains("STONE ID")) {
				tipoPlanilha = "CARTAO-STONE";
				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoStone", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Cartao_Paypal_Excel //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Paypal_Excel") &&
				nomeArquivo.toUpperCase().contains("PAYPAL") && nomeArquivo.toUpperCase().endsWith(".XLSX")) {

			if (line.contains("DATA") && line.contains("MOEDA") && line.contains("STATUS") &&
					line.contains("HORA") && line.contains("TARIFA")) {

				tipoPlanilha = "CARTAO-PAYPAL";
				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoPayPal", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

			if (line.contains("DATA") && line.contains("PAGAMENTOS") && line.contains("RECEBIDOS") &&
					line.contains("REEMBOLSADAS") && line.contains("TARIFAS")) {

				tipoPlanilha = "CARTAO-PAYPAL";
				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoPayPal2", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - ELAVON //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Elavon_Excel")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(11).replaceAll("\"","").replace("\"","").replace("'","").equals("NSU") &&
					memFile.getStringFieldRemoveEspCharsUpper(23).replaceAll("\"","").contains("ECOM") &&
					memFile.getStringFieldRemoveEspCharsUpper(23).replaceAll("\"","").contains("RECORRENTE") &&
					memFile.getStringFieldRemoveEspCharsUpper(29).replaceAll("\"","").contains("DO BATCH IATA")) {

				tipoPlanilha = "CARTAO-ELAVON";
				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoElavon", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - PAGSEGURO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_PagSeguro_Excel")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("TRANSACAO_ID") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("CLIENTE_NOME") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").replace("\"","").replace("'","").equals("CLIENTE_EMAIL") &&
					memFile.getStringFieldRemoveEspCharsUpper(17).replaceAll("\"","").replace("\"","").replace("'","").equals("CODIGO_USUARIO")) {

				tipoPlanilha = "CARTAO-PAGSEGURO";
				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoPagSeguro", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - MOIP //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Moip_Excel")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("ID") &&
					memFile.getStringFieldRemoveEspCharsUpper(8).replaceAll("\"","").replace("\"","").replace("'","").equals("EVENTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(11).replaceAll("\"","").contains("ID PROPRIO")) {

				tipoPlanilha = "CARTAO-MOIP";
				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoMoip", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}

			if (line.replaceAll("\"","").replace("\"","").replace("'","").contains("DATA INICIAL") &&
					line.replaceAll("\"","").replace("\"","").replace("'","").contains("OUTROS RECEBEDORES") &&
					line.replaceAll("\"","").contains("NUMERO DE PARCELAS")) {

				tipoPlanilha = "CARTAO-MOIP";

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoMoip2", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}



		////// EXTRATO - BANCO DO BRASIL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_BB_TXT")) {

			// logger.logDebug("NomeArquivo E_BB_TXT -> "+nomeArquivo);

			// Nome Portador  ->  "BANCO DO BRASIL {AGENCIA} {CONTA}"
			if ((line.contains("EXTRATO CONTA CORRENTE") || line.contains("EXTRATO DE CONTA CORRENTE")) && nomeArquivo.toUpperCase().contains(".TXT")) {

				tipoPlanilha = "EXTRATO-BB";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBancoDoBrasilDoc2", memFile, "BANCO DO BRASIL", jDados, dbIOCont, logger);
				// readExtratoECartao("readExtratoBancoDoBrasilDoc", memFile, "BANCO DO BRASIL", jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - GETNET //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_GetNet_Excel")) {
			String tipoLeitura = "";
			if (line.toUpperCase().trim().contains("CART") && line.toUpperCase().trim().contains("EMISSOR CART") &&
					line.toUpperCase().trim().contains("MERO DO TERMINAL") && line.toUpperCase().trim().contains("MERO DA AUTORIZA") ) {
				tipoLeitura = "001";
			}

			if (line.toUpperCase().trim().contains("VALOR BRUTO:") && line.toUpperCase().trim().contains("DA TAXA:") &&
					line.toUpperCase().trim().contains("DETALHAMENTO DAS VENDAS") && line.toUpperCase().trim().contains("QUIDO:")) {
				tipoLeitura = "002";
			}

			if (line.toUpperCase().trim().contains("DESCRI") && line.toUpperCase().trim().contains("DATA DE LAN") && line.toUpperCase().trim().contains("BANDEIRA") &&
					line.toUpperCase().trim().contains("ESTABELECIMENTO") &&  line.toUpperCase().trim().contains("QTD TOTAL DE TRAN")) {
				tipoLeitura = "003";
			}

			if (line.toUpperCase().trim().contains("VALOR") && line.toUpperCase().trim().contains("DATA") && line.toUpperCase().trim().contains("TAXA") && line.toUpperCase().trim().contains("VENDAS") &&
					line.toUpperCase().trim().contains("BRUTO:") && line.toUpperCase().trim().contains("TARIFA:") && line.toUpperCase().trim().contains("CONSOLIDADO") && line.toUpperCase().trim().contains("QUIDO:")) {
				tipoLeitura = "004";
			}
			if (line.toUpperCase().trim().contains("ESTABELECIMENTO") && line.toUpperCase().trim().contains("COMPROVANTE DE VENDAS") && line.toUpperCase().trim().contains("HORA DA VENDA") &&
					line.toUpperCase().trim().contains("DATA PREVISTA") && line.toUpperCase().trim().contains("MERO DO TERMINAL") && line.toUpperCase().trim().contains("TOTAL DE PARCELAS")) {
				tipoLeitura = "005";
			}
			if (!tipoLeitura.equals("")) {
				tipoPlanilha = "CARTAO-GETNET";

				JSONObject jDados = new JSONObject();

				jDados.put("LINE",           line);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("TIPOLEITURA",    tipoLeitura);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readExtratoGetNetRefatorado", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}
		// ----------------------------------------------------------------------------------------------------------
		//                      LEITURA PADRAO EXTRATO JUNO - XLSX
		//---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---~---
		if (roteiroCRM.optString("Planilhas_Padroes").toUpperCase().contains("EXTRATO_JUNO_EXCEL")) {
			// logger.logDebug("Entrando...");
			logger.logDebug("LINHAKJUNO " + line);
			if (line.contains("DATA") && line.contains("DESCRICAO") && line.contains("TIPO") && line.contains("VALOR") && line.contains("NOME CLIENTE")){
				logger.logDebug("Entrou JUNO!");
				tipoPlanilha = "EXTRATO-JUNO";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				// logger.logDebug("AGUIIIIIIIIIIIIIIII");
				readExtratoECartao("readExtratoJunoDefault", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SIPAG //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Sipag_Excel")) {
			logger.logDebug("SIGPAG VALIDA -> "+line);
			if (line.contains("DIGO DO CLIENTE") && line.contains("COMPROVANTE") && line.contains("VLR. DESC") && line.contains("PLANO") /*&& !nomeArquivo.toUpperCase().contains(".XLSX")*/) {
				logger.logDebug("ENTRANDO SIGPAG");

				tipoPlanilha = "CARTAO-SIPAG";
				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",   		 line);

				mapaVariavel = readExtratoECartao("readExtratoSipagRefatorado", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}


		////// EXTRATO - UNICRED //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Unicred_Excel") && (nomeArquivo.toUpperCase().contains(".CSV") || nomeArquivo.toUpperCase().contains(".XLSX"))) {

			if(memFile.getStringFieldRemoveEspCharsUpper(1).contains("CONTA: ")){

				// logger.logInfo("LOG ENTROU IF CONTA");
				nomePortador2 = memFile.getStringFieldRemoveEspCharsUpper(1).replace("CONTA:", "").trim();
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}

			if (memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").replaceAll(" ","").contains("ID.DOC") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("HISTORICOS") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("LANCAMENTOS") &&
					memFile.getStringFieldRemoveEspCharsUpper(5).replaceAll("\"","").contains("SALDO")) {

				nomePortador  = "UNICRED-" + nomePortador2;
				complemento02	= nomePortador;
				tipoPlanilha	= "EXTRATO-UNICRED";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEPORTADOR", nomePortador);

				readExtratoECartao("readExtratoUnicredDefault", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - UNICRED TXT //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Unicred_TXT") && nomeArquivo.toUpperCase().contains(".TXT") && nomeArquivo.toUpperCase().contains("UNICRED")){
			tipoPlanilha	= "EXTRATO-UNICRED";
			JSONObject jDados = new JSONObject();
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);

			readExtratoECartao("readExtratoUNICREDTxt", memFile, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno",   "break");
			return variaveis.toString();
		}



		////// PAGUECOM CSV //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Paguecom_CSV")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").contains("DATA DA TRANSA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").contains("DIGO DO CLIENTE") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("COMPROVANTE") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("PRODUTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("TIPO DE TRANSA") &&
					memFile.getStringFieldRemoveEspCharsUpper(5).replaceAll("\"","").contains("PARCELAS")) {

				tipoPlanilha = "PAGUECOM-CSV";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readPaguecomCSV", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - TICKET //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Ticket_Excel")) {
			if (line.contains("DATA CORTE") && line.contains("DATA TRANSACAO") && line.contains("DESCRICAO LANCAMENTO") &&
					line.contains("NUMERO DOCTO") && line.contains("NUMERO CARTAO"))  {

				tipoPlanilha = "CARTAO-TICKET";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				if(line.contains("DATA CORTE") && line.contains("DATA TRANSACAO") && line.contains("DESCRICAO LANCAMENTO") &&
						line.contains("NUMERO DOCTO") && line.contains("NUMERO CARTAO")) {
					// logger.logDebug("CAIU EM CONTINUE13 " + line);
					for (int i = 0; i < memFile.getFieldsSize(); i++) {
						if (memFile.getStringFieldRemoveEspCharsUpper(i).replace("\"","").replace("'","").equals("")) continue;
						if (memFile.getStringFieldRemoveEspCharsUpper(i).contains("VALOR")) jDados.put("IVALORDOCUMENTO", i);
						if (memFile.getStringFieldRemoveEspCharsUpper(i).contains("DATA TRANSACAO")) jDados.put("IDATAMOVIMENTO", i);
						if (memFile.getStringFieldRemoveEspCharsUpper(i).contains("DESCRICAO LANCAMENTO")) jDados.put("INOMEORIGEM", i);
					}
				}

				mapaVariavel = readExtratoECartao("readExtratoTicketNovo", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if (line.contains("EXTRATO DETALHADO") && line.contains("TICKET ALIMENTACAO")) {
				tipoPlanilha = "CARTAO-TICKET";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoTicket", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		// logger.logDebug("NP2 -> "+nomePortador2+" - Line -> "+line);

		////// EXTRATO - SICREDI //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sicredi_Excel")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(0).contains("ASSOCIADO:")) {
				// logger.logDebug("V1 Sicredi");
				nomePortador2 = "SICREDI-EXCEL";
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}

			if(nomePortador2.contains("SICREDI-EXCEL") && (memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA CORRENTE:") || memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA:"))){
				// logger.logDebug("V2 Sicredi");
				nomePortador2 += " "+ memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","");
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",     "continue");
				return variaveis.toString();
			}

			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("DESCRICAO") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("DOCUMENTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("SALDO") &&
					nomePortador2.contains("SICREDI-EXCEL")) {
				// logger.logDebug("V3 Sicredi");
				tipoPlanilha = "EXTRATO-SICREDI";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoSicrediDefault", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		//#2308-013761
		////// EXTRATO - BANCO XPInvestimentos //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_XPInvestimentos_Excel")) {

			if (memFile.getStringFieldRemoveEspCharsUpper(6).contains("CONTA XP:") &&
					memFile.getStringFieldRemoveEspCharsUpper(5).contains("") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).contains("")) {

				tipoPlanilha = "EXTRATOXP";
				nomePortador = cutString(memFile.getStringFieldRemoveEspCharsUpper(6), "CONTA XP:");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				readExtratoECartao("readExtratoXPInvestimentosExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////////Planilha padrão Santander RET ////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Santander_RET")) {

			if (line.contains("BANCO SANTANDER") && line.contains("BRASIL") && line.contains("S/A") && nomeArquivo.toUpperCase().contains(".RET")) {

				nomePortador2 = "SANTANDER RET";
				variaveis.put("nomePortador2", nomePortador2);

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readSantanderRET", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		////// EXTRATO - CEF - HTML //////////////////////////////////////////////////////////////////
		//#2304-003006 - Yuri - Novo Layout
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Cef_Html")){
			//2312-025426 - Extrato veio com informacao na parte <HTML>
			//if(line.contains("<HTML>") && nomeArquivo.toUpperCase().contains("HTML")){
			if(line.contains("<HTML") && nomeArquivo.toUpperCase().contains("HTML")){
				tipoPlanilha = "EXTRATO-CEF-HTML";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				readExtratoECartao("readExtratoCEFHtml", memFile, "", jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BRADESCO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Bradesco_Excel") && !nomeArquivo.toUpperCase().endsWith(".TXT")/* && !nomeArquivo.toUpperCase().contains("ANCORA") && !nomeArquivo.toUpperCase().contains("PDF")*/) {


			if (memFile.getStringFieldRemoveEspCharsUpper(0).contains("EXTRATO DE") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("AGENCIA")) {

				nomePortador2  = "BRADESCO " +  memFile.getStringFieldRemoveEspCharsUpper(0);
				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno", "continue");

				return variaveis.toString();
			}

			logger.logDebug("MFS " + memFile.getStringFieldRemoveEspCharsUpper(0) + " | " + memFile.getStringFieldRemoveEspCharsUpper(1));

			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("LANCAMENTO") &&
					(memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("DCTO") || memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("DOCTO"))  &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("CREDITO") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("DEBITO") ) {

				logger.logDebug("TA TANDO AQUI TMB");

				tipoPlanilha = "EXTRATO-BRADESCO";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBradescoDefault", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO REDECARD - XLSX //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Redecard_Excel")) {
			if ((line.contains("HORA DA VENDA") && line.contains("MODALIDADE") && line.contains("NSU/CV") && line.contains("TIPO DE TERMINAL")) &&
					(line.replaceAll("\"","").contains("CHARGEBACK") && line.replaceAll("\"","").contains("NACIONALIDADE DO CART") && line.replaceAll("\"","").contains("MODALIDADE"))){
				logger.logDebug("REDECARDUM");
				tipoPlanilha = "CARTAO-REDECARD";
				nomePortador = "REDECARD";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readCartaoRedecardNovoPadrao", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if ((line.contains("HORA DA VENDA") && line.contains("MODALIDADE") && line.contains("NSU/CV") && line.contains("TIPO DE TERMINAL")) ||
					(line.replaceAll("\"","").contains("PRAZO DE RECEB") && line.replaceAll("\"","").contains("RESUMO DE VENDAS") && line.replaceAll("\"","").contains("MODALIDADE"))) {
				logger.logDebug("REDECARDDOIS");
				tipoPlanilha = "CARTAO-REDECARD";
				nomePortador = "REDECARD";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readCartaoRedecard", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO REDECARD //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Redecard_TXT")) {

			if (line.replaceAll("\"","").contains("E X T R A T O   P A R A   S I M P L E S ")) {

				tipoPlanilha = "CARTAO-REDECARD";
				nomePortador = "REDECARD";

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("NOMEEMPRESA", nomeEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				readExtratoECartao("readCartaoRedecardDefault", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - CARTAO AMERICAN EXPRESS //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_American_Express_Extrato_Excel")) {
			if (line.contains("DATA RECEB") && line.contains("CREDITO") && line.contains("DEBITO") && line.contains("REFERENCIA")) {

				tipoPlanilha = "AMERICAN-EXTRATO";

				JSONObject jDados = new JSONObject();
				int ivalorDocumento = -1;

				String[] head = StringUtil.removeSpecialChars(line).split("\\|");
				for (int i = 0; i < head.length; i++) {
					if (head[i].contains("VALOR LIQUIDO")) ivalorDocumento = i;
				}
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("IVALORDOCUMENTO",  ivalorDocumento);

				mapaVariavel = readExtratoECartao("readCartaoAmericanExtratoDefault", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();

			}
		}

		////// CARTAO AMERICAN EXPRESS //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_American_Express_Excel")) {
			if (line.contains("DATA RECEB") && line.contains("TRANSACAO") && line.contains("PARCELAS")) {

				tipoPlanilha = "AMERICAN-EXPRESS";

				JSONObject jDados = new JSONObject();
				int ivalorDocumento = -1;
				String[] head = StringUtil.removeSpecialChars(line).split("\\|");
				for (int i = 0; i < head.length; i++) {
					if (head[i].contains("VALOR TOTAL")) ivalorDocumento = i;
				}

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("IVALORDOCUMENTO",  ivalorDocumento);

				mapaVariavel = readExtratoECartao("readCartaoAmericanExpressDefault", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SODEXO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Sodexo_Excel")) {
			if (line.contains("PRODUTO:") &&  ((line.contains("ALIMENTA") || line.contains("REFEI") || line.contains("PREMIUM") || line.contains("GIFT")) && line.contains("PASS"))) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readExtratoSodexo", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BONUS //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Bonus_Excel")) {
			if ((nomeArquivo.toUpperCase().contains("BONUS") && !extensao.contains(".TXT")) && (memFile.getStringFieldRemoveEspCharsUpper(0).contains("DOCTO") && line.contains("CARTAO") && line.contains("CAPTURA"))) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readExtratoBonus", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - NUTRICARD //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Nutricard_Excel")) {
			if ((extensao.contains(".XLSX") || extensao.contains(".CSV")) && (memFile.getStringFieldRemoveEspCharsUpper(0).contains("DOCTO") && line.contains("CARTAO") && line.contains("CAPTURA"))) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readExtratoNutricard", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - GOODCARD //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Goodcard_Excel")) {
			if (line.contains("COD. DE VENDA") && line.contains("REDE CAPTURA")&& line.contains("AUTORIZACAO")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readExtratoGoodcard", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SENFF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Senff_Excel")) {
			if (line.contains("CARTAO") && line.contains("AUTORIZACAO") && line.contains("PARCELAS") && line.contains("CLIENTE")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readExtratoSenff", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if (line.contains("DATA") && line.contains("HOMOLOGADO")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readExtratoSenffLayout2", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - VRALIMENTACAO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_VRAlimentacao_TXT")) {
			if ((line.length() > 40) && line.substring(34,40).contains("******") && extensao.contains(".TXT")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readExtratoVRAlimentacao", line, memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SANTANDER //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Santander_Excel")) {
			if(cabecalhoPlanilha.contains("CARTEIRA") &&
					cabecalhoPlanilha.contains("DETALHES") &&
					cabecalhoPlanilha.contains("ISIN/IDENTIFICADOR") &&
					cabecalhoPlanilha.contains("MOVIMENTOS DA CONTA")){

				tipoPlanilha = "EXTRATO-SANTANDER";

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);
				jDados.put("TIPOLAYOUT", "002");

				readExtratoECartao("readExtratoSantanderDefault", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();

			}

			logger.logDebug("Line Santander -> "+line);

			if (memFile.getStringFieldRemoveEspCharsUpper(0).contains("NOME:") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).contains("AGENCIA:") &&
					memFile.getStringFieldRemoveEspCharsUpper(5).contains("CONTA CORRENTE:") &&
					!nomeArquivo.toUpperCase().contains("PDF")) {
				logger.logDebug("V1");

				line = StringUtil.removeSpecialCharsToUC(memFile.nextLine());
				nomePortador2 = String.format("%s %s %s",
						"SANTANDER",
						memFile.getStringFieldRemoveEspCharsUpper(3), // Agencia.
						memFile.getStringFieldRemoveEspCharsUpper(5)  // Conta Corrente.
				);

				variaveis.put("nomePortador2",    nomePortador2);
				variaveis.put("tipoRetorno", "continue");
				return variaveis.toString();
			}
			if (nomeArquivo.toUpperCase().contains("SANTANDER")) {
				logger.logDebug("V2");
				if (memFile.getStringFieldRemoveEspCharsUpper(0).contains("AGENCIA") &&
						memFile.getStringFieldRemoveEspCharsUpper(2).contains("CONTA")) {
					logger.logDebug("V2.1");

					nomePortador2 = String.format("%s %s %s",
							"SANTANDER",
							memFile.getStringFieldRemoveEspCharsUpper(1), // Agencia.
							memFile.getStringFieldRemoveEspCharsUpper(3)  // Conta Corrente.
					);

					variaveis.put("nomePortador2",    nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
				if (memFile.getStringFieldRemoveEspCharsUpper(1).contains("AGENCIA") &&
						memFile.getStringFieldRemoveEspCharsUpper(1).contains("CONTA")) {

					logger.logDebug("V2.2");

					nomePortador2 = String.format("%s %s", "SANTANDER", memFile.getStringFieldRemoveEspCharsUpper(1));

					variaveis.put("nomePortador2",    nomePortador2);
					variaveis.put("tipoRetorno",   "continue");
					return variaveis.toString();
				}
			}

			// if(nomePortador2.equals("") && !memFile.getStringFieldRemoveEspCharsUpper(0).contains("NOME") && !memFile.getStringFieldRemoveEspCharsUpper(0).contains("AGENCIA") && !memFile.getStringFieldRemoveEspCharsUpper(1).contains("AGENCIA")){
			// nomePortador = "SANTANDER " + nomeArquivo.toUpperCase();
			// variaveis.put("nomePortador",    nomePortador);
			// variaveis.put("tipoRetorno",   "continue");
			// return variaveis.toString();
			// }

			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					(memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").replace("\"","").replace("'","").equals("HISTORICO") ||
							memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").replace("\"","").replace("'","").equals("HISTARICO")) &&
					(memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("DOCTO") || memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("DOCUMENTO")) &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(5).replaceAll("\"","").contains("SALDO")) {
				logger.logDebug("P1");

				tipoPlanilha = "EXTRATO-SANTANDER";

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoSantanderDefault", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
			if (nomeArquivo.toUpperCase().contains("SANTANDER") &&
					memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA") &&
					(line.contains("HISTORICO") || line.contains("HISTARICO")) && line.contains("VALOR") && line.contains("SALDO") &&
					(line.contains("DOCTO") || line.contains("DOCUMENTO"))) {

				logger.logDebug("P2");

				tipoPlanilha = "EXTRATO-SANTANDER";

				JSONObject jDados = new JSONObject();

				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("LINE", line);

				readExtratoECartao("readExtratoSantanderDefault", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			logger.logDebug("ALV BB");
		}

		////// CARTAO - CIELO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Cielo")) {
			String tipoLeitura = "";
			if (line.contains("EXTRATO") && line.contains("SIMPLES") && line.contains("CONFERENCIA") && line.contains("MENSAL") && line.contains("NR")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readCartaoCielo", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

			if ((line.contains("DATA") || line.contains("PREVIS")) &&
					line.contains("BANDEIRA") && line.contains("VALOR") && line.contains("QUIDO") && line.contains("FORMA") && line.contains("PAGAMENTO") &&
					!memFile.getStringFieldRemoveEspCharsUpper(1).contains("PREVIS")) {

				tipoLeitura = "001";
			}

			if (!tipoLeitura.equals("")){
				JSONObject jDados = new JSONObject();

				jDados.put("LINE", 			 line);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("TIPOLEITURA", 	 tipoLeitura);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMECONTABILIDADE", roteiroCRM.optString("contabilidade").toUpperCase());

				mapaVariavel = readExtratoECartao("readCartaoCieloRefatorado", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		////// CARTAO - REDECARD //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Redecard_Excel")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("PRAZO DE RECEB") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("RESUMO DE VENDAS") &&
					memFile.getStringFieldRemoveEspCharsUpper(6).replaceAll("\"","").contains("MODALIDADE")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readCartaoRedecardCred", memFile, jDados, mapaVariavel, logger);
				return "break";
			}
			if (memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("RESUMO DE VENDAS") &&
					memFile.getStringFieldRemoveEspCharsUpper(5).replaceAll("\"","").contains("MODALIDADE") &&
					memFile.getStringFieldRemoveEspCharsUpper(6).replaceAll("\"","").contains("BANDEIRA")) {

				JSONObject jDados = new JSONObject();

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readCartaoRedecardDeb", memFile, jDados, mapaVariavel, logger);
				return "break";
			}
		}

		////// CARTAO - CIELO SEM BANDEIRA //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Cielo_Simples_Sem_Bandeira")) {

			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").replace("\"","").replace("'","").equals("DATA DE VENDA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").replace("\"","").replace("'","").equals("VALOR BRUTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("QUIDO") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").replace("\"","").replace("'","").equals("TAXA")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				mapaVariavel = readExtratoECartao("readCartao_Cielo_Simples_Sem_Bandeira", memFile, jDados, mapaVariavel, logger);
				return "break";
			}
		}

		////// CARTAO - ABRAPETITE //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Abrapetite_Excel") && nomeArquivo.toUpperCase().contains("ABRAPETITE")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").contains("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").contains("QUANTIDADE") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("TRANSACOES")) {

				tipoPlanilha = "CARTAOABRAPETITE";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoAbrapetite", memFile, jDados, mapaVariavel, logger);
				return "break";
			}
		}

		////// CARTAO - MASTERFARMA //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Masterfarma_Excel") && nomeArquivo.toUpperCase().contains("MASTERFARMA")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").contains("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").contains("VENCIMENTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replaceAll("\"","").contains("BRUTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(3).replaceAll("\"","").contains("DESCTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("COMIS")) {

				tipoPlanilha = "CARTAOMASTERFARMA";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoMasterFarma", memFile, jDados, mapaVariavel, logger);
				return "break";
			}
		}

		////// CARTAO - CABAL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Cabal_Excel") && nomeArquivo.toUpperCase().contains("CABAL")) {
			String tipoLeitura = "";

			if (line.contains("DATA") && line.contains("PLANO") && line.contains("VALOR") && line.contains("VENDA") &&
					line.contains("LIQUIDO") && line.contains("PREVISAO") && line.contains("PAGAMENTO")) {

				tipoLeitura = "001";
			}

			if (line.contains("NUMCARTAO") && line.contains("NUMTERMINAL") && line.contains("DATATRANSACAO") &&
					line.contains("VALORBRUTOPARCELA") && line.contains("DATAPREVISTAPAGTO") && line.contains("VALORLIQUIDOPARCELA")) {

				tipoLeitura = "002";
			}

			if (!tipoLeitura.equals("")) {
				tipoPlanilha = "CARTAOCABAL";

				JSONObject jDados = new JSONObject();
				jDados.put("LINE",           line);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("TIPOLEITURA",    tipoLeitura);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readCartaoCabal", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - CALCARD //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Calcard_Excel") && nomeArquivo.toUpperCase().contains("CALCARD")) {
			if ((memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").contains("DT") &&
					memFile.getStringFieldRemoveEspCharsUpper(0).replaceAll("\"","").contains("TRANSACAO")) &&
					(memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").contains("DT") &&
							memFile.getStringFieldRemoveEspCharsUpper(1).replaceAll("\"","").contains("CREDITO")) &&
					(memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("VALOR") &&
							memFile.getStringFieldRemoveEspCharsUpper(4).replaceAll("\"","").contains("BRUTO")) &&
					(memFile.getStringFieldRemoveEspCharsUpper(5).replaceAll("\"","").contains("VALOR") &&
							memFile.getStringFieldRemoveEspCharsUpper(5).replaceAll("\"","").contains("LIQUIDO"))) {

				tipoPlanilha = "CARTAOCALCARD";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoCalcard", memFile, jDados, mapaVariavel, logger);
				return "break";
			}
		}

		////// EXTRATO - CEF //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_CEF_TXT")) {
			if(nomeArquivo.toUpperCase().contains(".TXT") && line.contains("CONTA") && line.contains("DATA_MOV") && line.contains("NR_DOC") &&
					line.contains("HISTORICO") && line.contains("VALOR") && line.contains("DEB_CRED")){

				nomePortador  = "CEF "+nomeArquivo;
				complemento01 = nomePortador;
				tipoPlanilha  = "EXTRATO-CEF";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoCEFDefaultNovo", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - CEF EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Cef_Excel")) {
			logger.logDebug("Entrou Caixa");

			if(cabecalhoPlanilha.toUpperCase().contains("EXTRATO") && nomeArquivo.toUpperCase().contains(".XLSX") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA:") && !memFile.getStringFieldRemoveEspCharsUpper(1).equals("") && line.contains("|") && !nomeArquivo.toUpperCase().contains(".PDF")){
				nomePortador2 = "CEF EXCEL "+memFile.getStringFieldRemoveEspCharsUpper(1);

				variaveis.put("nomePortador2",   nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}

			if (nomeArquivo.toUpperCase().contains(".XLSX")  && memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("MOV") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).contains("N") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("DOC") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).contains("HISTORICO") && memFile.getStringFieldRemoveEspCharsUpper(3).contains("VALOR") &&
					memFile.getStringFieldRemoveEspCharsUpper(4).contains("SALDO")) {
				logger.logDebug("Abrindo Caixa");

				nomePortador = nomePortador2;
				complemento01 = nomePortador;
				tipoPlanilha  = "EXTRATO-CEF-EXCEL";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoCEFExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - Banese EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Banese_Excel")) {

			if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA") && memFile.getStringFieldRemoveEspCharsUpper(1).equals("LOCAL") && memFile.getStringFieldRemoveEspCharsUpper(2).contains("HISTORICO") && memFile.getStringFieldRemoveEspCharsUpper(3).equals("DOCUMENTO")){
				nomePortador = "BANESE "+nomeArquivoAuxiliar; //2303-000564 JWR alterado para nomeArquivoAuxiliar para retirar o _id para n sujar o portador
				complemento01 = nomePortador;
				tipoPlanilha  = "EXTRATO-BANESE-EXCEL";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBaneseExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SICOOB //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sicoob")) {
			if(nomeArquivo.toUpperCase().contains(".XLSX") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("DOCUMENTO") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).contains("HISTORICO") && memFile.getStringFieldRemoveEspCharsUpper(3).contains("VALOR")){
				if(nomeArquivo.length() < 90){
					nomePortador = "SICOOB "+nomeArquivo.toUpperCase();
				}else{
					nomePortador  = "SICOOB "+ cutString(nomeArquivo, 0, ".").toUpperCase();
				}
				complemento01 = nomePortador;
				tipoPlanilha  = "EXTRATO-SICOOB";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoSicoobDefaultNovo", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}
		// logger.logDebug("PP EVE " + roteiroCRM.optString("Planilhas_Padroes") + " | " + nomeArquivo.toUpperCase());
		////// EXTRATO - VIACREDI //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Viacredi_Excel") && !nomeArquivo.toUpperCase().contains("ANCORA")) {
			if((nomeArquivo.toUpperCase().contains(".CSV") || nomeArquivo.toUpperCase().contains(".XLSX"))
					&& ((nomeArquivo.toUpperCase().contains("ACREDI") || nomeArquivo.toUpperCase().contains("UNICREDI"))
					&& nomeArquivo.toUpperCase().contains("EXTRATO"))
					|| nomeArquivo.toUpperCase().contains("CREDCREA") || nomeArquivo.toUpperCase().contains("TRANSPOCRED")
					|| (nomeArquivo.toUpperCase().contains("UNILOS") && nomeArquivo.toUpperCase().contains("EXTRATO"))){

				nomePortador  = nomeArquivo;
				complemento01 = nomePortador;
				tipoPlanilha  = "EXTRATO-VIACREDI";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoViacrediExcel", memFile, nomePortador, jDados, dbIOCont, logger);

				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}





		////// EXTRATO - SAFRA EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Safra_Excel")/* && line.contains("EXTRATO MENSAL")*/) {
			// logger.logDebug("Entrou Safra");
			if ((nomeArquivo.toUpperCase().contains(".XLSX") && (line.replaceAll("[\\|\\;]","").trim().equals("BANCO SAFRA S/A") || (line.contains("BANCO SAFRA S/A") && line.contains("EXTRATO MENSAL")))) || nomeArquivo.toUpperCase().contains(".CSV") && !nomeArquivo.toUpperCase().contains("ANCORA") && (line.replaceAll("[\\|\\;]","").trim().equals("BANCO SAFRA S/A") || (line.contains("BANCO SAFRA S/A") && line.contains("LANCAMENTOS REALIZADOS")))) {

				if (line.contains("AGENCIA") && !nomePortador.contains("SAFRA")) nomePortador  = "SAFRA "+ line.replaceAll("\\|","");
				if (line.contains("AG.") && !nomePortador.contains("SAFRA")) nomePortador  = "SAFRA AG."+ cutString(line.replaceAll("\\|",""), "AG.");
				complemento01 = nomePortador;
				tipoPlanilha  = "EXTRATO-SAFRA-EXCEL";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				if(line.contains("EXTRATO MENSAL:")) jDados.put("ANO", cutString(line,"EXTRATO MENSAL:").replaceAll("\\|","").trim());
				if(line.contains("EXTRATO MOVIMENTACAO")) jDados.put("ANO", cutString(line, line.lastIndexOf("/")-1).trim());

				// if (nomePortador.equals("")) {
				// variaveis.put("tipoRetorno",   "continue");
				// return variaveis.toString();
				// }

				readExtratoECartao("readExtratoSafraExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - ABC //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Abc_Excel")) {
			if((nomeArquivo.toUpperCase().contains(".XLSX") || nomeArquivo.toUpperCase().contains(".CSV")) && memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA")
					&& ((memFile.getStringFieldRemoveEspCharsUpper(1).contains("NRO") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("DOCUMENTO"))
					|| (memFile.getStringFieldRemoveEspCharsUpper(1).contains("QTDE") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("REGISTRO")))
					&& memFile.getStringFieldRemoveEspCharsUpper(2).contains("HIST") && memFile.getStringFieldRemoveEspCharsUpper(3).contains("OPERA")
					&& memFile.getStringFieldRemoveEspCharsUpper(4).contains("VALOR") && memFile.getStringFieldRemoveEspCharsUpper(5).contains("SALDO")){

				//2312-025938
				//nomePortador  = "EXTRATO-ABC";
				nomePortador  = nomeArquivo.toUpperCase().replaceAll(".XLSX", "").replaceAll(".CSV", "").replaceAll("__ID", "_ID");
				if(nomePortador.contains("FILTRO_")){
					nomePortador = cutString(nomePortador, "FILTRO_");
					nomePortador = cutString(nomePortador, nomePortador.indexOf("_")+1);
				}

				if(nomePortador.contains("_OUD_ID")){
					nomePortador = cutString(nomePortador, "_OUD_ID");
					nomePortador = cutString(nomePortador, nomePortador.indexOf("_")+1);
				}

				tipoPlanilha  = "EXTRATO-ABC";

				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoAbcExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		//2308-013122
		///////////////////// EXTRATO - ARBI EXCEL ////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Arbi_Excel")){
			if(cabecalhoPlanilha.contains("CONTACORRENTE") && cabecalhoPlanilha.contains("NATUREZA") && cabecalhoPlanilha.contains("NOME_CTP") && nomeArquivo.toUpperCase().contains("XLSX")){
				//logger.logInfo("Entrou Arbi");
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				readExtratoECartao("readExtratoArbiExcel", memFile, "", jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - BIN //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Bin_Excel")) {
			if (line.contains("RESUMO DE VENDAS") && line.contains("PRODUTO") && line.contains("COMPROVANTES")) {

				tipoPlanilha = "CARTAO-BIN";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoBinExcel", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - BANPARA //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Banpara_Excel")) {
			if (nomeArquivo.toUpperCase().contains("BANPARA") && cabecalhoPlanilha.contains("AGENCIA") && cabecalhoPlanilha.contains("CONTA")) {

				nomePortador  = "BANPARA ";
				tipoPlanilha = "EXTRATO-BANPARA";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoBanparaExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - SAFRA //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Safra_CSV")) {
			String tipoLeitura = "";
			if (line.contains("DATA") && line.contains("VENDA") && line.contains("VENDAS") && line.contains("VALOR") &&
					line.contains("BRUTO") && line.contains("TAXA") && line.contains("QUIDO")) {

				tipoLeitura = "001";
			}

			if (line.contains("DATA") && line.contains("VENDA") && line.contains("BANDEIRA") && line.contains("MODALIDADE") &&
					line.contains("ESTABELECIMENTO") && line.contains("PARCELA")) {

				tipoLeitura = "002";
			}

			if (memFile.getStringFieldRemoveEspCharsUpper(4).contains("PARCELAS") && memFile.getStringFieldRemoveEspCharsUpper(12).contains("VALOR")
					&& memFile.getStringFieldRemoveEspCharsUpper(12).contains("LIQUIDO") && memFile.getStringFieldRemoveEspCharsUpper(6).contains("SEQUENCIAL")) {
				tipoLeitura = "003";
			}

			if (!tipoLeitura.equals("")) {
				tipoPlanilha = "SAFRA";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLEITURA", 	 tipoLeitura);

				mapaVariavel = readExtratoECartao("readCartaocSafraCsv", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		////// CARTAO - STELO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Stelo_Excel") && nomeArquivo.toUpperCase().contains("STELO")) {
			if (line.contains("STATUS") && line.contains("DATA") && line.contains("HORA") && line.contains("DOC") &&
					line.contains("PGTO") && line.contains("PLANO")) {

				tipoPlanilha = "STELO";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoSteloCsv", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - UNIPRIME //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Uniprime_Txt") && nomeArquivo.toUpperCase().contains(".TXT")) {
			if (line.contains("EXTRATO") && line.contains("CONTA") && line.contains("CORRENTE") && (line.contains("UNIPRIME") || line.contains("SISPRIME"))) {
				tipoPlanilha = "EXTRATOUNIPRIME";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);

				readExtratoECartao("readExtratoUniprimeTxt", memFile, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - UNIPRIME //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Uniprime_Excel")) {
			// logger.logDebug("Entrou UniPrime - line -> "+line);
			if (line.contains("EXTRATO") && line.contains("CONTA CORRENTE") && (line.contains("UNIPRIME") || line.contains("SISPRIME")) &&
					(nomeArquivo.toUpperCase().contains(".XLSX") || nomeArquivo.toUpperCase().contains(".CSV"))) {


				tipoPlanilha = "EXTRATO-UNIPRIME";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoUniprimeExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - SISPRIME //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sisprime_Excel")) {
			if (line.contains("EXTRATO") && line.contains("CONTA CORRENTE") && line.contains("SISPRIME") &&
					(nomeArquivo.toUpperCase().contains(".XLSX") || nomeArquivo.toUpperCase().contains(".CSV"))) {
				tipoPlanilha = "EXTRATO-SISPRIME";
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				readExtratoECartao("readExtratoSisprime", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}


		////// CARTAO - MOOZ //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Mooz_CSV")) {
			if (line.contains("NSU") && line.contains("SITEF") && line.contains("ADQUIRENTE") && line.contains("PEDIDO")) {

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);

				mapaVariavel = readExtratoECartao("readCartaoMoozCsv", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - SUMUP //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Sumup_Excel")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(0).replace("\"","").replace("'","").contains("MAIL") &&
					memFile.getStringFieldRemoveEspCharsUpper(1).replace("\"","").replace("'","").contains("DATA") &&
					memFile.getStringFieldRemoveEspCharsUpper(2).replace("\"","").replace("'","").contains("TRANSA")) {

				tipoPlanilha = "CARTAO-SUMUP";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readCartaoSumup", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - TRIBANCO //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Tribanco_Excel")) {
			if (memFile.getStringFieldRemoveEspCharsUpper(4).contains("D/C")) {
				tipoPlanilha = "EXTRATO-TRIBANCO";
				nomePortador2 = nomeArquivo.toUpperCase();

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoTribancoExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		////// CARTAO - COOPER //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Coopercard_Excel")) {
			if(line.toUpperCase().contains("FILTROS:") && line.toUpperCase().contains("PERIODO:") && line.toUpperCase().contains("ESTABELECIMENTO:")) {

				tipoPlanilha = "CARTAO-COOPER";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);

				mapaVariavel = readExtratoECartao("readCartaoCooper", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		////// EXTRATO - SOFISA EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Sofisa_Excel")) {
			// logger.logDebug("Sofisa NP -> "+nomePortador2);
			if(nomeArquivo.toUpperCase().contains(".XLSX") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("CONTA") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("CORRENTE")){
				// logger.logDebug("V1");
				nomePortador2 = "SOFISA-" + cutString(memFile.getStringFieldRemoveEspCharsUpper(0), memFile.getStringFieldRemoveEspCharsUpper(0).lastIndexOf(":")+1);
				// logger.logDebug("Sofisa interno NP -> "+nomePortador2);
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}
			if(memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA") && (memFile.getStringFieldRemoveEspCharsUpper(2).contains("HISTORICO") || memFile.getStringFieldRemoveEspCharsUpper(2).contains("LANCAMENTO"))
					&& memFile.getStringFieldRemoveEspCharsUpper(8).contains("N") && memFile.getStringFieldRemoveEspCharsUpper(8).contains("DOCUMENTO")
					&& memFile.getStringFieldRemoveEspCharsUpper(9).contains("VALOR") && !nomePortador2.equals("")){
				// logger.logDebug("V2");
				tipoPlanilha  = "EXTRATO-SOFISA";

				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoSofisaExcel", memFile, nomePortador2, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}




		////// CARTAO - IFOOD EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_IFood_Excel")) {
			String tipoLeitura = "";
			if (line.contains("TOTAL PRATOS") && line.contains("DATA DO CANCELAMENTO") && line.contains("ORIGEM DO CANCELAMENTO")) {
				tipoLeitura = "001";
			}

			if(line.contains("TAXA") && line.contains("ENTREGA") && line.contains("VALOR") && line.contains("ITENS") && line.contains("DATA") && line.contains("AGENDAMENTO")) {
				tipoLeitura = "002";
			}

			if(line.contains("DATA") && line.contains("INCENTIVO") && line.contains("PROMOCIONAL") && line.contains("IFOOD") && line.contains("FORMA") && line.contains("PAGAMENTO")) {
				tipoLeitura = "003";
			}

			if(!tipoLeitura.equals("")){
				tipoPlanilha = "CARTAO IFOOD";
				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("TIPOLEITURA", tipoLeitura);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				readExtratoECartao("readExtratoIFood", memFile, jDados, mapaVariavel, logger);

				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}

		////// EXTRATO - AIQUEFOME //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Aiquefome_Excel")) {
			if (line.contains("RESTAURANTE") && line.contains("PEDIDO") && line.contains("CIDADE") &&
					line.contains("USU") && line.contains("PICK") && line.contains("CUPOM") && line.contains("STATUS")) {

				tipoPlanilha = "CARTAO-AIQUEFOME";

				JSONObject jDados = new JSONObject();
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				mapaVariavel = readExtratoECartao("readExtratoAiquefome", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}


		//// EXTRATO - BANCO C6BANK - EXCEL //////////////////////////////////////////////////////////////////
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_C6_Excel")){
			if(line.contains("EXTRATO") && line.contains("C6 BANK") && nomeArquivo.toUpperCase().contains("XLSX")){
				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);

				readExtratoECartao("readExtratoC6Excel", memFile, "", jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		////// EXTRATO - PAGSEGURO - EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_PagSeguro_Excel")) {
			if(line.contains("BANCO") && line.contains("PAGSEGURO")){
				nomePortador2 = "EXTRATO PAGSEGURO EXCEL";
				nomePortador  = cutString(memFile.getStringFieldRemoveEspCharsUpper(0), ":");
				variaveis.put("nomePortador2", nomePortador2);
				variaveis.put("nomePortador", nomePortador);
				variaveis.put("tipoRetorno",   "continue");
				return variaveis.toString();
			}

			if(line.contains("CONTA") && nomePortador2.equals("EXTRATO PAGSEGURO EXCEL")){
				tipoPlanilha = "EXTRATO-PAGSEGURO-EXCEL";
				nomePortador = nomePortador + " " + cutString(memFile.getStringFieldRemoveEspCharsUpper(0), ":");

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA", codEmpresa);
				jDados.put("NOMEARQUIVO", nomeArquivo);
				readExtratoECartao("readExtratoPagseguroExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}

		}



		////// CARTAO - PoliCard //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_PoliCard_Excel")) {
			String padraoCabecalho = "";
			if (line.contains("DATA") && line.contains("PRODUTO") && line.contains("ESTABELECIMENTO") && line.contains("CNPJ") && line.contains("LANCAMENTO") &&
					line.contains("DATA REPASSE") && line.contains("USUARIO") && line.contains("COD. AUT.") && line.contains("TIPO") && line.contains("NSU") &&
					line.contains("CREDITO") && line.contains("DEBITO") && line.contains("SALDO")){

				padraoCabecalho = "PADRAO-1";
			}

			if (line.contains("RAZAO SOCIAL") && line.contains("DT.MOVIMENTO") && line.contains("VL.COMISSAO") && line.contains("DT.REPASSE") && line.contains("VL.LIQUIDO") &&
					line.contains("VL.BRUTO") && line.contains("EMPRESA") && line.contains("PRODUTO") && line.contains("CARTAO") && line.contains("NUMERO") && line.contains("CNPJ")){

				padraoCabecalho = "PADRAO-2";
			}

			if(!padraoCabecalho.equals("")){
				tipoPlanilha = "CARTAO-POLICARD";

				JSONObject jDados = new JSONObject();
				jDados.put("PADRAOCABECALHO", padraoCabecalho);
				jDados.put("TIPOLANCAMENTO",  tipoLancamento);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("NOMEEMPRESA",     nomeEmpresa);
				jDados.put("NOMEARQUIVO",     nomeArquivo);
				jDados.put("CODEMPRESA",      codEmpresa);
				jDados.put("LINE",            line);

				mapaVariavel = readExtratoECartao("readCartaoPoliCard", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - TrioCard //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_TrioCard_Excel")) {
			String padraoCabecalho = "";

			if (line.contains("NOMSUBREDE") && line.contains("DATA") && line.contains("AUTORIZ") && line.contains("TRANSACAO") && line.contains("CARTAO") && line.contains("VALOR") &&
					line.contains("VAL_LIQ") && line.contains("DT_FECH") && line.contains("NUM_FECHTO") && line.contains("CREDENCIADO") && line.contains("NOME_CREDENCIADO")) {

				padraoCabecalho = "PADRAO-1";
			}

			if(!padraoCabecalho.equals("")){
				tipoPlanilha = "CARTAO-TRIOCARD";

				JSONObject jDados = new JSONObject();
				jDados.put("PADRAOCABECALHO", padraoCabecalho);
				jDados.put("TIPOLANCAMENTO",  tipoLancamento);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("NOMEEMPRESA",     nomeEmpresa);
				jDados.put("NOMEARQUIVO",     nomeArquivo);
				jDados.put("CODEMPRESA",      codEmpresa);
				jDados.put("LINE",            line);

				mapaVariavel = readExtratoECartao("readCartaoTrioCard", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - AME //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Ame_Excel")) {
			String padraoCabecalho = "";
			logger.logDebug("cabecalhoPlanilha _> " + cabecalhoPlanilha);
			if (cabecalhoPlanilha.contains("NOME:") && cabecalhoPlanilha.contains("CNPJ:") && cabecalhoPlanilha.contains("PERFIL: AMEPLUS")) {
				padraoCabecalho = "PADRAO-1";
			}

			if(!padraoCabecalho.equals("")){
				tipoPlanilha = "CARTAO-AME";

				JSONObject jDados = new JSONObject();
				jDados.put("PADRAOCABECALHO", padraoCabecalho);
				jDados.put("TIPOLANCAMENTO",  tipoLancamento);
				jDados.put("TIPOPLANILHA",    tipoPlanilha);
				jDados.put("NOMEEMPRESA",     nomeEmpresa);
				jDados.put("NOMEARQUIVO",     nomeArquivo);
				jDados.put("CODEMPRESA",      codEmpresa);
				jDados.put("LINE",            line);

				mapaVariavel = readExtratoECartao("readCartaoAme", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - ITAU EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Itau_Txt")) {

			if (line.contains(";") && line.matches("[[0-9]{2}/[0-9]{2}/[0-9]{4};].*") && nomeArquivo.toUpperCase().contains("ITAU") && extensao.contains("TXT")) {
				logger.logDebug("ENTROU ITAU TXT");
				tipoPlanilha = "EXTRATO-ITAU";

				JSONObject jDados = new JSONObject();
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("LINE",           line);

				readExtratoECartao("readExtratoItauTXT", memFile, nomeArquivo, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - ALELO CSV //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Alelo_Csv")) {
			if (line.replaceAll("\"","").trim().contains("AUTORIZACAO") && line.replaceAll("\"","").trim().contains("CARTAO") && line.replaceAll("\"","").trim().contains("CARTAO") &&
					line.replaceAll("\"","").trim().contains("CREDENCIADORA") && line.replaceAll("\"","").trim().contains("STATUS") && line.replaceAll("\"","").trim().contains("TRANSACAO")) {

				tipoPlanilha = "ALELO-CSV";
				JSONObject jDados = new JSONObject();
				jDados.put("LINE", line);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				mapaVariavel = readExtratoECartao("readAleloCsv", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		////// CARTAO - MAGALU EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_MagaLU_Excel")) {
			if(line.contains("DATA")
					&& line.contains("METODO")
					&& line.contains("VALOR BRUTO")
					&& line.contains("VALOR DA COMISSAO")
					&& line.contains("ORIGEM")) {

				tipoPlanilha = "CARTAO MAGALU";
				JSONObject jDados = new JSONObject();
				jDados.put("LINE",           line);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				readExtratoECartao("readExtratoMagaLU", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}

		////// CARTAO - NETSHOES EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_Netshoes_Excel")) {
			if(line.contains("PEDIDO")
					&& line.contains("STATUS")
					&& line.contains("FRETE LOJISTA")
					&& line.contains("TOTAL PRODUTO")
					&& line.contains("SKU MKT")) {

				tipoPlanilha = "CARTAO NETSHOES";
				JSONObject jDados = new JSONObject();
				jDados.put("LINE",           line);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				readExtratoECartao("readExtratoNetshoes", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}



		////// CARTAO - PAGARME EXCEL //////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Cartao_PagarME_Excel")) {
			if(line.contains("DATA")
					&& line.contains("OPERACAO")
					&& line.contains("ENTRADA")
					&& line.contains("SAIDA")
					&& line.contains("TAXA TOTAL")) {

				logger.logDebug("ENTROU PAGARME");

				tipoPlanilha = "CARTAO PAGARME";
				JSONObject jDados = new JSONObject();
				jDados.put("LINE",           line);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);
				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				readExtratoECartao("readExtratoPagarME", memFile, jDados, mapaVariavel, logger);
				variaveis.put("tipoRetorno",   "break");
				return variaveis.toString();
			}
		}





		/////////////////////////////////////////////////////////////////////////////////////
		// EXTRATO ORIGINAL
		/////////////////////////////////////////////////////////////////////////////////////
		if (roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Original_Excel")) {
			if (cabecalhoPlanilha.contains("SALDO") && cabecalhoPlanilha.contains("BLOQUEADO") && cabecalhoPlanilha.contains("CHEQUE") && cabecalhoPlanilha.contains("BLOQUEIO") && cabecalhoPlanilha.contains("JUDICIAL")
					&& cabecalhoPlanilha.contains("LIMITE") && cabecalhoPlanilha.contains("EMPRESARIAL")) {

				tipoPlanilha = "EXTRATO-ORIGINAL";


				JSONObject jDados = new JSONObject();

				// logger.logDebug("cabecalhoPlanilha -> " + cabecalhoPlanilha);
				// logger.logDebug("CUT cabecalhoPlanilha -> " + cutString(cabecalhoPlanilha, "CONTA: ", " "));

				if(cabecalhoPlanilha.contains("CONTA: ")) nomePortador = cutString(cabecalhoPlanilha, "CONTA: ", "|");

				jDados.put("TIPOLANCAMENTO", tipoLancamento);
				jDados.put("NOMEEMPRESA",    nomeEmpresa);
				jDados.put("CODEMPRESA",     codEmpresa);
				jDados.put("NOMEARQUIVO",    nomeArquivo);
				jDados.put("TIPOPLANILHA",   tipoPlanilha);

				readExtratoECartao("readExtratoOriginalExcel", memFile, nomePortador, jDados, dbIOCont, logger);
				variaveis.put("tipoRetorno", "break");
				return variaveis.toString();
			}
		}



		////// ERP - AutoSystem (Linx) //////////////////////////////////////////////////////////////////
		// if (roteiroCRM.optString("Planilhas_Padroes").contains("Linx_AutoSystem")) {

		// JSONObject jDados = new JSONObject();
		// jDados.put("TIPOLANCAMENTO", tipoLancamento);
		// jDados.put("NOMEEMPRESA",    nomeEmpresa);
		// jDados.put("CODEMPRESA",     codEmpresa);
		// jDados.put("NOMEARQUIVO",    nomeArquivo);

		// if (line.startsWith(StringUtil.removeSpecialCharsToUC(roteiroCRM.optString("complemento06")))) {
		// tipoPlanilha = "Linx_AutoSystem";
		// continue;
		// }
		// if (memFile.getStringFieldRemoveEspCharsUpper(0).replace("\"","").replace("'","").equals("")) continue;

		// jDados.put("TIPOPLANILHA", tipoPlanilha);

		// if (tipoPlanilha.equals("Linx_AutoSystem")) {
		// tipoPlanilha = memFile.getStringFieldRemoveEspCharsUpper(0);
		// continue;
		// }
		// if (tipoPlanilha.equals("CONTAS PAGAS")) {
		// mapaVariavel = readExtratoECartao("readLinx_AutoSystem_ContasPagas", memFile, jDados, mapaVariavel, logger);
		// return "break";
		// }
		// if (tipoPlanilha.equals("RECEBIMENTOS")) {
		// mapaVariavel = readExtratoECartao("readLinx_AutoSystem_Recebimentos", memFile, jDados, mapaVariavel, logger);
		// return "break";
		// }
		// if (tipoPlanilha.equals("EXTRATO BANCARIO")) {
		// mapaVariavel = readExtratoECartao("readLinx_AutoSystem_ExtratoBancario", memFile, jDados, mapaVariavel, logger);
		// return "break";
		// }
		// if (tipoPlanilha.equals("MOVIMENTACAO DE CONTAS")) {
		// mapaVariavel = readExtratoECartao("readLinx_AutoSystem_MovimentacaoContas", memFile, jDados, mapaVariavel, logger);
		// return "break";
		// }
		// }


		////// ERP - BYSOFT I-BROKER //////////////////////////////////////////////////////////////////
		// if (roteiroCRM.optString("Planilhas_Padroes").contains("BySoft_i-Broker")) {
		// if (line.contains("RELATORIO") && line.contains("MOVIMENTACAO") && line.contains("FINANCEIRA") && line.contains("ANALITICO")) {
		// JSONObject jDados = new JSONObject();
		// jDados.put("TIPOLANCAMENTO", tipoLancamento);
		// jDados.put("NOMEEMPRESA",    nomeEmpresa);
		// jDados.put("CODEMPRESA",     codEmpresa);
		// jDados.put("NOMEARQUIVO",    nomeArquivo);

		// Chama metodo do Erp do Cliente da Contabilidade.
		// mapaVariavel = readExtratoECartao("readBysoftIBroker", memFile, jDados, mapaVariavel, logger);
		// variaveis.put("tipoRetorno",   "break");
		// return variaveis.toString();
		// }
		// }


		////// ERP - GENESYS MCP002 (Interfoc) //////////////////////////////////////////////////////////////////

		// if (roteiroCRM.optString("Planilhas_Padroes").contains("Interfoc_Genesys_mcp002")) {
		// if (line.contains("ROTINA") && line.contains("MCP002")) {
		// JSONObject jDados = new JSONObject();
		// jDados.put("TIPOLANCAMENTO", tipoLancamento);
		// jDados.put("NOMEEMPRESA",    nomeEmpresa);
		// jDados.put("CODEMPRESA",     codEmpresa);
		// jDados.put("NOMEARQUIVO",    nomeArquivo);

		// Chama metodo do Erp do Cliente da Contabilidade.
		// mapaVariavel = readExtratoECartao("readInterfocGenesysMCP002", memFile, jDados, mapaVariavel, logger);
		// variaveis.put("tipoRetorno",   "break");
		// return variaveis.toString();
		// }
		// }


		////// ERP - PROSYST //////////////////////////////////////////////////////////////////

		// if (roteiroCRM.optString("Planilhas_Padroes").contains("Prosyst")) {
		// JSONObject jDados = new JSONObject();
		// jDados.put("TIPOLANCAMENTO", tipoLancamento);
		// jDados.put("NOMEEMPRESA",    nomeEmpresa);
		// jDados.put("CODEMPRESA",     codEmpresa);
		// jDados.put("NOMEARQUIVO",    nomeArquivo);
		// if (line.contains("PR00428")) {
		// mapaVariavel = readExtratoECartao("readProsystPR00428", memFile, jDados, mapaVariavel, logger);
		// variaveis.put("tipoRetorno",   "break");
		// return variaveis.toString();
		// }
		// if (line.contains("PRX004815")) {
		// mapaVariavel = readExtratoECartao("readProsystPRX004815", memFile, jDados, mapaVariavel, logger);
		// variaveis.put("tipoRetorno",   "break");
		// return variaveis.toString();
		// }
		// }/*~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--*/


		////// ERP - SISJURI (BCS Financeiro) //////////////////////////////////////////////////////////////////

		// if (roteiroCRM.optString("Planilhas_Padroes").toUpperCase().contains("SISJURI_BCS_FINANCEIRO")) {
		// if (line.contains("BCS") && line.contains("FINANCEIRO")) {
		// JSONObject jDados = new JSONObject();

		// jDados.put("CODEMPRESA", codEmpresa);
		// jDados.put("NOMEEMPRESA", nomeEmpresa);
		// jDados.put("NOMEARQUIVO", nomeArquivo);
		// jDados.put("TIPOLANCAMENTO", tipoLancamento);
		// Chama metodo do Erp do Cliente da Contabilidade.
		// mapaVariavel = readExtratoECartao("readSisjuriBCSFinanceiro", memFile, jDados, mapaVariavel, logger);
		// variaveis.put("tipoRetorno",   "break");
		// return variaveis.toString();
		// }
		// }


		////// ERP - SOFTPHARMA FCPA200 (Linx) //////////////////////////////////////////////////////////////////

		// if (roteiroCRM.optString("Planilhas_Padroes").contains("Linx_Softpharma_fcpa200")) {
		// if (line.contains("****") && line.contains("INICIO")) {
		// JSONObject jDados = new JSONObject();

		// jDados.put("CODEMPRESA", codEmpresa);
		// jDados.put("NOMEEMPRESA", nomeEmpresa);
		// jDados.put("NOMEARQUIVO", nomeArquivo);
		// jDados.put("TIPOLANCAMENTO", tipoLancamento);

		// Chama metodo do Erp do Cliente da Contabilidade.
		// mapaVariavel = readExtratoECartao("readLinxSoftpharmaFCPA200", memFile, jDados, mapaVariavel, logger);
		// variaveis.put("tipoRetorno",   "break");
		// return variaveis.toString();
		// }
		// }


		////// ERP - SYSTEXTIL //////////////////////////////////////////////////////////////////

		// if (roteiroCRM.optString("Planilhas_Padroes").contains("Systextil")) {
		// if (line.contains("EMPRESA") && line.contains("SYSTEXTIL")) {
		// JSONObject jDados = new JSONObject();
		// jDados.put("TIPOLANCAMENTO", tipoLancamento);
		// jDados.put("NOMEEMPRESA",    nomeEmpresa);
		// jDados.put("CODEMPRESA",     codEmpresa);
		// jDados.put("NOMEARQUIVO",    nomeArquivo);

		// Chama metodo do Erp do Cliente da Contabilidade.
		// mapaVariavel = readExtratoECartao("readSystextil", memFile, jDados, mapaVariavel, logger);
		// variaveis.put("tipoRetorno",   "break");
		// return variaveis.toString();
		// }
		// }



		////// EXTRATO - UNICRED //////////////////////////////////////////////////////////////////
		/* NAO esta nos padroes
		if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Unicred_TXT") && nomeArquivo.toUpperCase().contains(".TXT") && nomeArquivo.toUpperCase().contains("UNICRED")){
			tipoPlanilha = "EXTRATO-UNICRED";
			JSONObject jDados = new JSONObject();
			jDados.put("CODEMPRESA", codEmpresa);
			jDados.put("NOMEARQUIVO", nomeArquivo);
			readExtratoECartao("readExtratoUNICREDTxt", memFile, jDados, dbIOCont, logger);
			putStatus(dirName, "", jStatus, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}*/

	}

	if(roteiroCRM.optString("Planilhas_Padroes").contains("Extrato_Inter_PDF")){
		if (((extensao.contains("PDF") && cabecalhoPlanilha.contains("EXTRATO CONTA CORRENTE")) || extensao.contains("CSV") /*|| extensao.contains("XLS")*/) && (cabecalhoPlanilha.contains("DATA") && ((cabecalhoPlanilha.contains("LAN") && cabecalhoPlanilha.contains("MENTO")) || cabecalhoPlanilha.contains("HISTORICO") || cabecalhoPlanilha.contains("DESCRICAO") )
				&& cabecalhoPlanilha.contains("SALDO") &&
				!cabecalhoPlanilha.contains("BALANCETE")) && nomeArquivo.toUpperCase().contains("INTER") && !nomeArquivo.toUpperCase().contains("INTERNO")) {

			// logger.logInfo("LOG CABECALHO PLANILHA - " + cabecalhoPlanilha);

			tipoPlanilha  = "EXTRATO-INTER";
			nomePortador2 = "EXTRATO INTER PDF 1";

			JSONObject jDados = new JSONObject();

			if (line.contains("EXTRATO CONTA CORRENTE")) {
				// logger.logDebug("CAIU EM CONTINUE1 " + line);
				variaveis.put("tipoRetorno", "continue");
				return variaveis.toString();
			}

			if (cabecalhoPlanilha.contains("CONTA:") && cabecalhoPlanilha.contains("AGENCIA:")){
				nomePortador = cutString(cabecalhoPlanilha,cabecalhoPlanilha.indexOf("AGENCIA:")+8,cabecalhoPlanilha.indexOf("CONTA:"));
				// logger.logDebug("portador -> "+nomePortador);
				nomePortador = nomePortador+cutString(cabecalhoPlanilha,cabecalhoPlanilha.indexOf("CONTA:")+6,cabecalhoPlanilha.indexOf("TIPO:"));
				// logger.logDebug("portador -> "+nomePortador);
			}else if (cabecalhoPlanilha.contains("CONTA") && (cabecalhoPlanilha.contains("PERAODO") || cabecalhoPlanilha.contains("PERIODO"))){
				//Extrato CSV - 202204-0014428
				nomePortador = cutString(cabecalhoPlanilha,"CONTA ;","PERAODO");

				if(cabecalhoPlanilha.contains("PERIODO")){
					nomePortador = cutString(cabecalhoPlanilha,cabecalhoPlanilha.indexOf("CONTA ;")+7,cabecalhoPlanilha.indexOf("PERIODO"));
				}
			}

			//#2312-024636 By Leal
			//if(cabecalhoPlanilha.contains("DESCRI") && extensao.contains("CSV")){
			//2401-026591 - No cabecalho pode vir com descricao, historico ou ambos
			if(cabecalhoPlanilha.contains("DESCRI") && cabecalhoPlanilha.contains("HIST") && extensao.contains("CSV")){
				jDados.put("TIPOLAYOUTEXCEL", "002");
			}

			jDados.put("TIPOLANCAMENTO", tipoLancamento);
			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);
			jDados.put("LINE",   		 line);

			logger.logDebug("EXTRATO-INTER");

			readExtratoECartao("readExtratoInterPDF", memFile, nomePortador, jDados, dbIOCont, logger);

			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}
		//validacao antiga comentada para manter o legado
		/*if(line.contains("CPF/CNPJ") && line.contains("BANCO") && line.contains("INTER") && line.contains("AGENCIA") && line.contains("CONTA") && nomePortador2.equals("")){
			tipoPlanilha  = "EXTRATO-INTER-2";
			nomePortador2 = "EXTRATO INTER PDF 2";
			nomePortador  = cutString(line, line.lastIndexOf("CONTA:"));

			JSONObject jDados = new JSONObject();

			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);
			jDados.put("LINE",   		 line);

			readExtratoECartao("readExtratoInter2PDF", memFile, nomePortador, jDados, dbIOCont, logger);

			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}*/

		//2308-014054
		////// INTER PADRAO 2 /////////////////////////////////////
		if (cabecalhoPlanilha.contains("CPF/CNPJ") && cabecalhoPlanilha.contains("BANCO INTER") &&
				cabecalhoPlanilha.contains("PERIODO") && nomePortador2.equals("") && !nomeArquivo.toUpperCase().contains("XLSX")){

			tipoPlanilha  = "EXTRATO-INTER-2";
			nomePortador2 = "EXTRATO INTER PDF 2";

			JSONObject jDados = new JSONObject();

			//#2309-015717 e 2309-015741
			if (cabecalhoPlanilha.contains("CONTA:"))
				nomePortador = cutString(cabecalhoPlanilha, "CONTA:", cabecalhoPlanilha.indexOf("CONTA:")+18).replaceAll(";; ", "");

			// O tipo 003 muda os index dentro do read.
			// logger.logInfo("ACOMPL " + arquivoCompleto);
			if (arquivoCompleto.contains("SALDO TOTAL") && arquivoCompleto.contains("SALDO POR"))
				jDados.put("TIPO", "003");

			jDados.put("NOMEEMPRESA",    nomeEmpresa);
			jDados.put("CODEMPRESA",     codEmpresa);
			jDados.put("NOMEARQUIVO",    nomeArquivo);
			jDados.put("TIPOPLANILHA",   tipoPlanilha);
			jDados.put("LINE",   		 line);

			readExtratoECartao("readExtratoInter2PDF", memFile, nomePortador, jDados, dbIOCont, logger);
			variaveis.put("tipoRetorno", "break");
			return variaveis.toString();
		}
	}

	// Fim extrato

	variaveis.put("tipoRetorno",   "segue");
	return variaveis.toString();
}


